# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.3.4
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-06 14:22-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

msgid ""
"**Supported versions:** `Latest "
"<https://docs.pgrouting.org/latest/en/pgr_dijkstraNearCost.html>`__ (`3.3"
" <https://docs.pgrouting.org/3.3/en/pgr_dijkstraNearCost.html>`__) `3.2 "
"<https://docs.pgrouting.org/3.2/en/pgr_dijkstraNearCost.html>`__"
msgstr ""

msgid "``pgr_dijkstraNearCost`` - Proposed"
msgstr ""

msgid ""
"``pgr_dijkstraNearCost`` â€” Using dijkstra algorithm, finds the route that"
" leads to the nearest vertex."
msgstr ""

msgid "Proposed functions for next mayor release."
msgstr ""

msgid "They are not officially in the current release."
msgstr ""

msgid "They will likely officially be part of the next mayor release:"
msgstr ""

msgid "The functions make use of ANY-INTEGER and ANY-NUMERICAL"
msgstr ""

msgid "Name might not change. (But still can)"
msgstr ""

msgid "Signature might not change. (But still can)"
msgstr ""

msgid "Functionality might not change. (But still can)"
msgstr ""

msgid "pgTap tests have being done. But might need more."
msgstr ""

msgid "Documentation might need refinement."
msgstr ""

msgid "Boost Graph Inside"
msgstr ""

msgid "Availability"
msgstr ""

msgid "Version 3.3.0"
msgstr ""

msgid "Promoted to **proposed** function"
msgstr ""

msgid "Version 3.2.0"
msgstr ""

msgid "New **experimental** function"
msgstr ""

msgid "Description"
msgstr ""

msgid ""
"Given a graph, a starting vertex and a set of ending vertices, this "
"function finds the shortest path from the starting vertex to the nearest "
"ending vertex."
msgstr ""

msgid "Characteristics"
msgstr ""

msgid "Uses Dijkstra algorithm."
msgstr ""

msgid "Works for **directed** and **undirected** graphs."
msgstr ""

msgid "When there are more than one path to the same vertex with same cost:"
msgstr ""

msgid "The algorithm will return just one path"
msgstr ""

msgid "Optionally allows to find more than one path."
msgstr ""

msgid "When more than one path is to be returned:"
msgstr ""

msgid "Results are sorted in increasing order of:"
msgstr ""

msgid "aggregate cost"
msgstr ""

msgid "Within the same value of aggregate costs:"
msgstr ""

msgid "results are sorted by (source, target)"
msgstr ""

msgid "Running time: Dijkstra running time: :math:`drt = O((|E| + |V|)log|V|)`"
msgstr ""

msgid "One to Many; :math:`drt`"
msgstr ""

msgid "Many to One: :math:`drt`"
msgstr ""

msgid "Many to Many: :math:`drt * |Starting vids|`"
msgstr ""

msgid "Combinations: :math:`drt * |Starting vids|`"
msgstr ""

msgid "Signatures"
msgstr ""

msgid "Summary"
msgstr ""

msgid "\\ \\"
msgstr ""

msgid ""
"pgr_dijkstraNearCost(`Edges SQL`_, **start vid**, **end vids**, "
"[**options A**])"
msgstr ""

msgid ""
"pgr_dijkstraNearCost(`Edges SQL`_, **start vids**, **end vid**, "
"[**options A**])"
msgstr ""

msgid ""
"pgr_dijkstraNearCost(`Edges SQL`_, **start vids**, **end vids**, "
"[**options B**])"
msgstr ""

msgid "pgr_dijkstraNearCost(`Edges SQL`_, `Combinations SQL`_, [**options B**])"
msgstr ""

msgid "**options A:** ``[directed, cap]``"
msgstr ""

msgid "**options B:** ``[directed, cap, global]``"
msgstr ""

msgid "RETURNS SET OF |matrix-result|"
msgstr ""

msgid "OR EMPTY SET"
msgstr ""

msgid "One to Many"
msgstr ""

msgid ""
"pgr_dijkstraNearCost(`Edges SQL`_, **start vid**, **end vids**, "
"[**options**])"
msgstr ""

msgid "**options:** ``[directed, cap]``"
msgstr ""

msgid "Example"
msgstr ""

msgid "Departing on car from vertex :math:`6` find the nearest subway station."
msgstr ""

msgid "Using a **directed** graph for car routing."
msgstr ""

msgid "The subway stations are on the following vertices :math:`\\{1, 10, 11\\}`"
msgstr ""

msgid "The defaults used:"
msgstr ""

msgid "`directed => true`"
msgstr ""

msgid "`cap => 1`"
msgstr ""

msgid "The result shows that station at vertex :math:`11` is the nearest."
msgstr ""

msgid "Many to One"
msgstr ""

msgid ""
"pgr_dijkstraNearCost(`Edges SQL`_, **start vids**, **end vid**, "
"[**options**])"
msgstr ""

msgid ""
"Departing on a car from a subway station find the nearest **two** "
"stations to vertex :math:`6`"
msgstr ""

msgid "On line `4`: using the positional parameter: `directed` set to ``true``"
msgstr ""

msgid "In line `5`: using named parameter `cap => 2`"
msgstr ""

msgid ""
"The result shows that station at vertex :math:`10` is the nearest and the"
" next best is :math:`11`."
msgstr ""

msgid "Many to Many"
msgstr ""

msgid ""
"pgr_dijkstraNearCost(`Edges SQL`_, **start vids**, **end vids**, "
"[**options**])"
msgstr ""

msgid "**options:** ``[directed, cap, global]``"
msgstr ""

msgid "Find the best pedestrian connection between two lines of buses"
msgstr ""

msgid "Unsing an **undirected** graph for pedestrian routing"
msgstr ""

msgid "The first subway line stations are at :math:`\\{15, 16\\}`"
msgstr ""

msgid "The second subway line stations stops are at :math:`\\{1, 10, 11\\}`"
msgstr ""

msgid "On line `4`: using the named parameter: `directed => false`"
msgstr ""

msgid "`global => true`"
msgstr ""

msgid ""
"For a pedestrian the best connection is to get on/off is at vertex "
":math:`15` of the first subway line and at vertex :math:`10` of the "
"second subway line."
msgstr ""

msgid ""
"Only `one` route is returned because `global` is ``true`` and `cap` is "
"``1``"
msgstr ""

msgid "Combinations"
msgstr ""

msgid "pgr_dijkstraNearCost(`Edges SQL`_, `Combinations SQL`_, [**options**])"
msgstr ""

msgid "Find the best car connection between all the stations of two subway lines"
msgstr ""

msgid "The first subway line stations stops are at :math:`\\{1, 10, 11\\}`"
msgstr ""

msgid "The second subway line stations are at :math:`\\{15, 16\\}`"
msgstr ""

msgid "The combinations contents:"
msgstr ""

msgid "The query:"
msgstr ""

msgid ""
"lines `3~4` sets the start vertices to be from the fisrt subway line and "
"the ending vertices to be from the second subway line"
msgstr ""

msgid ""
"lines `6~7` sets the start vertices to be from the first subway line and "
"the ending vertices to be from the first subway line"
msgstr ""

msgid "On line `8`: using the named parameter is `global => false`"
msgstr ""

msgid "From the results:"
msgstr ""

msgid ""
"making a connection from the first subway line :math:`\\{1, 10, 11\\}` to"
" the second :math:`\\{15, 16\\}`:"
msgstr ""

msgid ""
"The best connections from all the stations from the first line are: "
":math:`{(1 \\rightarrow 16) (10 \\rightarrow 16) (11 \\rightarrow 16)}`"
msgstr ""

msgid ""
"The best one is :math:`(11 \\rightarrow 16)` with a cost of :math:`1` "
"(lines: `1`)"
msgstr ""

msgid ""
"making a connection from the second subway line :math:`\\{15, 16\\}` to "
"the first :math:`\\{1, 10, 11\\}`:"
msgstr ""

msgid ""
"The best connections from all the stations from the second line are: "
":math:`{(15 \\rightarrow 10) (16 \\rightarrow 11)}`"
msgstr ""

msgid "Both are equaly good as they have the same cost. (lines: `12` and `13`)"
msgstr ""

msgid "Parameters"
msgstr ""

msgid "Column"
msgstr ""

msgid "Type"
msgstr ""

msgid "`Edges SQL`_"
msgstr ""

msgid "``TEXT``"
msgstr ""

msgid "`Edges SQL`_ as described below"
msgstr ""

msgid "`Combinations SQL`_"
msgstr ""

msgid "`Combinations SQL`_ as described below"
msgstr ""

msgid "**start vid**"
msgstr ""

msgid "``BIGINT``"
msgstr ""

msgid "Identifier of the starting vertex of the path."
msgstr ""

msgid "**start vids**"
msgstr ""

msgid "``ARRAY[BIGINT]``"
msgstr ""

msgid "Array of identifiers of starting vertices."
msgstr ""

msgid "**end vid**"
msgstr ""

msgid "Identifier of the ending vertex of the path."
msgstr ""

msgid "**end vids**"
msgstr ""

msgid "Array of identifiers of ending vertices."
msgstr ""

msgid "Dijkstra optional parameters"
msgstr ""

msgid "Default"
msgstr ""

msgid "``directed``"
msgstr ""

msgid "``BOOLEAN``"
msgstr ""

msgid "``true``"
msgstr ""

msgid "When ``true`` the graph is considered `Directed`"
msgstr ""

msgid "When ``false`` the graph is considered as `Undirected`."
msgstr ""

msgid "Near optional parameters"
msgstr ""

msgid "Parameter"
msgstr ""

msgid "``cap``"
msgstr ""

msgid "``1``"
msgstr ""

msgid "Find at most ``cap`` number of nearest shortest paths"
msgstr ""

msgid "``global``"
msgstr ""

msgid "When ``true``: only ``cap`` limit results will be returned"
msgstr ""

msgid "When ``false``: ``cap`` limit per ``Start vid`` will be returned"
msgstr ""

msgid "Inner Queries"
msgstr ""

msgid "Edges SQL"
msgstr ""

msgid "``id``"
msgstr ""

msgid "**ANY-INTEGER**"
msgstr ""

msgid "Identifier of the edge."
msgstr ""

msgid "``source``"
msgstr ""

msgid "Identifier of the first end point vertex of the edge."
msgstr ""

msgid "``target``"
msgstr ""

msgid "Identifier of the second end point vertex of the edge."
msgstr ""

msgid "``cost``"
msgstr ""

msgid "**ANY-NUMERICAL**"
msgstr ""

msgid "Weight of the edge (``source``, ``target``)"
msgstr ""

msgid "``reverse_cost``"
msgstr ""

msgid "-1"
msgstr ""

msgid "Weight of the edge (``target``, ``source``)"
msgstr ""

msgid ""
"When negative: edge (``target``, ``source``) does not exist, therefore "
"it's not part of the graph."
msgstr ""

msgid "Where:"
msgstr ""

msgid "ANY-INTEGER"
msgstr ""

msgid "``SMALLINT``, ``INTEGER``, ``BIGINT``"
msgstr ""

msgid "ANY-NUMERICAL"
msgstr ""

msgid "``SMALLINT``, ``INTEGER``, ``BIGINT``, ``REAL``, ``FLOAT``"
msgstr ""

msgid "Combinations SQL"
msgstr ""

msgid "Identifier of the departure vertex."
msgstr ""

msgid "Identifier of the arrival vertex."
msgstr ""

msgid "Result Columns"
msgstr ""

msgid "Set of |matrix-result|"
msgstr ""

msgid "``start_vid``"
msgstr ""

msgid "Identifier of the starting vertex."
msgstr ""

msgid "``end_vid``"
msgstr ""

msgid "Identifier of the ending vertex."
msgstr ""

msgid "``agg_cost``"
msgstr ""

msgid "``FLOAT``"
msgstr ""

msgid "Aggregate cost from ``start_vid`` to ``end_vid``."
msgstr ""

msgid "See Also"
msgstr ""

msgid ":doc:`dijkstra-family`"
msgstr ""

msgid ":doc:`pgr_dijkstraNear`"
msgstr ""

msgid ":doc:`sampledata` network."
msgstr ""

msgid "boost: https://www.boost.org/libs/graph/doc/table_of_contents.html"
msgstr ""

#, python-format
msgid "Wikipedia: https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm"
msgstr ""

msgid "Indices and tables"
msgstr ""

msgid ":ref:`genindex`"
msgstr ""

msgid ":ref:`search`"
msgstr ""

