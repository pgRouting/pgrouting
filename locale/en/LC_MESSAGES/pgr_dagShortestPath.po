# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.0.0-rc1
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.0.0-rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-17 10:14-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../build/doc/pgr_dagShortestPath.rst:11
msgid "pgr_dagShortestPath - Experimental"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:13
msgid ""
"``pgr_dagShortestPath`` â€” Returns the shortest path(s) for weighted directed "
"acyclic graphs(DAG). In particular, the DAG shortest paths algorithm "
"implemented by Boost.Graph."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:19
msgid "Boost Graph Inside"
msgstr ""

#: ../../build/doc/experimental.rst:3
msgid "Possible server crash"
msgstr ""

#: ../../build/doc/experimental.rst:5
msgid "These functions might create a server crash"
msgstr ""

#: ../../build/doc/experimental.rst:7
msgid "Experimental functions"
msgstr ""

#: ../../build/doc/experimental.rst:9
msgid "They are not officially of the current release."
msgstr ""

#: ../../build/doc/experimental.rst:10
msgid "They likely will not be officially be part of the next release:"
msgstr ""

#: ../../build/doc/experimental.rst:12
msgid "The functions might not make use of ANY-INTEGER and ANY-NUMERICAL"
msgstr ""

#: ../../build/doc/experimental.rst:13
msgid "Name might change."
msgstr ""

#: ../../build/doc/experimental.rst:14
msgid "Signature might change."
msgstr ""

#: ../../build/doc/experimental.rst:15
msgid "Functionality might change."
msgstr ""

#: ../../build/doc/experimental.rst:16
msgid "pgTap tests might be missing."
msgstr ""

#: ../../build/doc/experimental.rst:17
msgid "Might need c/c++ coding."
msgstr ""

#: ../../build/doc/experimental.rst:18
msgid "May lack documentation."
msgstr ""

#: ../../build/doc/experimental.rst:19
msgid "Documentation if any might need to be rewritten."
msgstr ""

#: ../../build/doc/experimental.rst:20
msgid "Documentation examples might need to be automatically generated."
msgstr ""

#: ../../build/doc/experimental.rst:21
msgid "Might need a lot of feedback from the comunity."
msgstr ""

#: ../../build/doc/experimental.rst:22
msgid "Might depend on a proposed function of pgRouting"
msgstr ""

#: ../../build/doc/experimental.rst:23
msgid "Might depend on a deprecated function of pgRouting"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:26
msgid "Availability"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:27
msgid "Version 3.0.0"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:29
msgid "New **experimental** function"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:32
msgid "Support"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:33
msgid ""
"**Supported versions:** current(`3.1 <https://docs.pgrouting.org/3.1/en/"
"pgr_dagShortestPath.html>`__) `3.0 <https://docs.pgrouting.org/3.0/en/"
"pgr_dagShortestPath.html>`__"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgRouting-concepts.rst:6
#: ../../build/doc/pgr_dagShortestPath.rst:38
#: ../../build/doc/pgr_dagShortestPath.rst:167
msgid "Description"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:40
msgid ""
"Shortest Path for Directed Acyclic Graph(DAG) is a graph search algorithm "
"that solves the shortest path problem for weighted directed acyclic graph, "
"producing a shortest path from a starting vertex (``start_vid``) to an "
"ending vertex (``end_vid``)."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:44
msgid ""
"This implementation can only be used with a **directed** graph with no "
"cycles i.e. directed acyclic graph."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:46
msgid ""
"The algorithm relies on topological sorting the dag to impose a linear "
"ordering on the vertices, and thus is more efficient for DAG's than either "
"the Dijkstra or Bellman-Ford algorithm."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:68
msgid "The main characteristics are:"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:49
msgid ""
"Process is valid for weighted directed acyclic graphs only. otherwise it "
"will throw warnings."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:50
msgid "Values are returned when there is a path."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:52
msgid ""
"When the starting vertex and ending vertex are the same, there is no path."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:54
msgid "The `agg_cost` the non included values `(v, v)` is `0`"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:56
msgid ""
"When the starting vertex and ending vertex are the different and there is no "
"path:"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:58
msgid "The `agg_cost` the non included values `(u, v)` is :math:`\\infty`"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:60
msgid ""
"For optimization purposes, any duplicated value in the `start_vids` or "
"`end_vids` are ignored."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:62
msgid "The returned values are ordered:"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:64
msgid "`start_vid` ascending"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:65
msgid "`end_vid` ascending"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:67
msgid "Running time: :math:`O(| start\\_vids | * (V + E))`"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:71
msgid "Signatures"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:74
msgid "Summary"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:90
msgid "One to One"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst
msgid "Example"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:98
msgid "From vertex :math:`1` to vertex :math:`6`"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:108
msgid "One to Many"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:116
msgid "From vertex :math:`1` to vertices :math:`\\{ 5, 6\\}`"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:126
msgid "Many to One"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:134
msgid "From vertices :math:`\\{1, 3\\}` to vertex :math:`6`"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:144
msgid "Many to Many"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:152
msgid "From vertices :math:`\\{1, 4\\}` to vertices :math:`\\{12, 6\\}`"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:160
msgid "Parameters"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:165
msgid "Description of the parameters of the signatures"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:167
msgid "Parameter"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgRouting-concepts.rst:6
#: ../../build/doc/pgr_dagShortestPath.rst:167
msgid "Type"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgr_dagShortestPath.rst:167
msgid "Default"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:169
msgid "**edges_sql**"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:169
msgid "``TEXT``"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:169
msgid "SQL query as described above."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:10
#: ../../build/doc/pgr_dagShortestPath.rst:170
msgid "**start_vid**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:10
#: ../../build/doc/pgRouting-concepts.rst:16
#: ../../build/doc/pgRouting-concepts.rst:22
#: ../../build/doc/pgRouting-concepts.rst:23
#: ../../build/doc/pgr_dagShortestPath.rst:170
#: ../../build/doc/pgr_dagShortestPath.rst:172
msgid "``BIGINT``"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:170
msgid "Identifier of the starting vertex of the path."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:171
msgid "**start_vids**"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:171
#: ../../build/doc/pgr_dagShortestPath.rst:173
msgid "``ARRAY[BIGINT]``"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:171
msgid "Array of identifiers of starting vertices."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:16
#: ../../build/doc/pgr_dagShortestPath.rst:172
msgid "**end_vid**"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:172
msgid "Identifier of the ending vertex of the path."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:173
msgid "**end_vids**"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:173
msgid "Array of identifiers of ending vertices."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:179
msgid "Inner Query"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgRouting-concepts.rst:6
msgid "Column"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:6
msgid "**id**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:6
#: ../../build/doc/pgRouting-concepts.rst:7
#: ../../build/doc/pgRouting-concepts.rst:8
msgid "``ANY-INTEGER``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:6
msgid "Identifier of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:7
msgid "**source**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:7
msgid "Identifier of the first end point vertex of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
msgid "**target**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
msgid "Identifier of the second end point vertex of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
#: ../../build/doc/pgRouting-concepts.rst:24
msgid "**cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
#: ../../build/doc/pgRouting-concepts.rst:13
msgid "``ANY-NUMERICAL``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
msgid "Weight of the edge  `(source, target)`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:11
msgid ""
"When negative: edge `(source, target)` does not exist, therefore it's not "
"part of the graph."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "**reverse_cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "-1"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "Weight of the edge `(target, source)`,"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:15
msgid ""
"When negative: edge `(target, source)` does not exist, therefore it's not "
"part of the graph."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:19
msgid "Where:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst
msgid "ANY-INTEGER"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:21
msgid "SMALLINT, INTEGER, BIGINT"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst
msgid "ANY-NUMERICAL"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:22
msgid "SMALLINT, INTEGER, BIGINT, REAL, FLOAT"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:186
msgid "Results Columns"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:3
msgid ""
"Returns set of ``(seq, path_seq [, start_vid] [, end_vid], node, edge, cost, "
"agg_cost)``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
msgid "**seq**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
#: ../../build/doc/pgRouting-concepts.rst:9
msgid "``INT``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
msgid "Sequential value starting from **1**."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
msgid "**path_seq**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
msgid ""
"Relative position in the path. Has value **1** for the beginning of a path."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:10
msgid ""
"Identifier of the starting vertex. Returned when multiple starting vetrices "
"are in the query."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "`Many to One`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:14
#: ../../build/doc/pgRouting-concepts.rst:20
msgid "`Many to Many`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:16
msgid ""
"Identifier of the ending vertex. Returned when multiple ending vertices are "
"in the query."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:19
msgid "`One to Many`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:22
msgid "**node**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:22
msgid "Identifier of the node in the path from ``start_vid`` to ``end_vid``."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:23
msgid "**edge**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:23
msgid ""
"Identifier of the edge used to go from ``node`` to the next node in the path "
"sequence. ``-1`` for the last node of the path."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:24
#: ../../build/doc/pgRouting-concepts.rst:25
msgid "``FLOAT``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:24
msgid ""
"Cost to traverse from ``node`` using ``edge`` to the next node in the path "
"sequence."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:25
msgid "**agg_cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:25
msgid "Aggregate cost from ``start_v`` to ``node``."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:193
msgid "See Also"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:195
msgid "https://en.wikipedia.org/wiki/Topological_sorting"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:196
msgid "The queries use the :doc:`sampledata` network."
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:199
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:200
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/pgr_dagShortestPath.rst:201
msgid ":ref:`search`"
msgstr ""
