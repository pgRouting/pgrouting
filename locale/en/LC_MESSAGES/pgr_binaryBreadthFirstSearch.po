# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.3.4
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-06 14:22-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

msgid ""
"**Supported versions:** `Latest "
"<https://docs.pgrouting.org/latest/en/pgr_binaryBreadthFirstSearch.html>`__"
" (`3.3 "
"<https://docs.pgrouting.org/3.3/en/pgr_binaryBreadthFirstSearch.html>`__)"
" `3.2 "
"<https://docs.pgrouting.org/3.2/en/pgr_binaryBreadthFirstSearch.html>`__"
msgstr ""

msgid "``pgr_binaryBreadthFirstSearch`` - Experimental"
msgstr ""

msgid ""
"``pgr_binaryBreadthFirstSearch`` â€” Returns the shortest path(s) in a "
"binary graph."
msgstr ""

msgid ""
"Any graph whose edge-weights belongs to the set {0,X}, where 'X' is any "
"non-negative integer, is termed as a 'binary graph'."
msgstr ""

msgid "Boost Graph Inside"
msgstr ""

msgid "Possible server crash"
msgstr ""

msgid "These functions might create a server crash"
msgstr ""

msgid "Experimental functions"
msgstr ""

msgid "They are not officially of the current release."
msgstr ""

msgid "They likely will not be officially be part of the next release:"
msgstr ""

msgid "The functions might not make use of ANY-INTEGER and ANY-NUMERICAL"
msgstr ""

msgid "Name might change."
msgstr ""

msgid "Signature might change."
msgstr ""

msgid "Functionality might change."
msgstr ""

msgid "pgTap tests might be missing."
msgstr ""

msgid "Might need c/c++ coding."
msgstr ""

msgid "May lack documentation."
msgstr ""

msgid "Documentation if any might need to be rewritten."
msgstr ""

msgid "Documentation examples might need to be automatically generated."
msgstr ""

msgid "Might need a lot of feedback from the comunity."
msgstr ""

msgid "Might depend on a proposed function of pgRouting"
msgstr ""

msgid "Might depend on a deprecated function of pgRouting"
msgstr ""

msgid "Availability"
msgstr ""

msgid "Version 3.2.0"
msgstr ""

msgid "New **experimental** signature:"
msgstr ""

msgid "pgr_binaryBreadthFirstSearch(`Combinations`_)"
msgstr ""

msgid "Version 3.0.0"
msgstr ""

msgid "New **experimental** signatures:"
msgstr ""

msgid "pgr_binaryBreadthFirstSearch(`One to One`_)"
msgstr ""

msgid "pgr_binaryBreadthFirstSearch(`One to Many`_)"
msgstr ""

msgid "pgr_binaryBreadthFirstSearch(`Many to One`_)"
msgstr ""

msgid "pgr_binaryBreadthFirstSearch(`Many to Many`_)"
msgstr ""

msgid "Description"
msgstr ""

msgid ""
"It is well-known that the shortest paths between a single source and all "
"other vertices can be found using Breadth First Search in :math:`O(|E|)` "
"in an unweighted graph, i.e. the distance is the minimal number of edges "
"that you need to traverse from the source to another vertex. We can "
"interpret such a graph also as a weighted graph, where every edge has the"
" weight :math:`1`. If not alledges in graph have the same weight, that we"
" need a more general algorithm, like Dijkstra's Algorithm  which runs in "
":math:`O(|E|log|V|)` time."
msgstr ""

msgid ""
"However if the weights are more constrained, we can use a faster "
"algorithm. This algorithm, termed as 'Binary Breadth First Search' as "
"well as '0-1 BFS', is a variation of the standard Breadth First Search "
"problem to solve the SSSP (single-source shortest path) problem in "
":math:`O(|E|)`, if the weights of each edge belongs to the set {0,X}, "
"where 'X' is any non-negative real integer."
msgstr ""

msgid "**The main Characteristics are:**"
msgstr ""

msgid ""
"Process is done only on 'binary graphs'. ('Binary Graph': Any graph whose"
" edge-weights belongs to the set {0,X}, where 'X' is any non-negative "
"real integer.)"
msgstr ""

msgid ""
"For optimization purposes, any duplicated value in the `start_vids` or "
"`end_vids` are ignored."
msgstr ""

msgid "The returned values are ordered:"
msgstr ""

msgid "`start_vid` ascending"
msgstr ""

msgid "`end_vid` ascending"
msgstr ""

msgid "Running time: :math:`O(| start\\_vids | * |E|)`"
msgstr ""

msgid "Signatures"
msgstr ""

msgid "Summary"
msgstr ""

msgid "\\ \\"
msgstr ""

msgid ""
"pgr_binaryBreadthFirstSearch(`Edges SQL`_, **start vid**, **end vid**, "
"[``directed``])"
msgstr ""

msgid ""
"pgr_binaryBreadthFirstSearch(`Edges SQL`_, **start vid**, **end vids**, "
"[``directed``])"
msgstr ""

msgid ""
"pgr_binaryBreadthFirstSearch(`Edges SQL`_, **start vids**, **end vid**, "
"[``directed``])"
msgstr ""

msgid ""
"pgr_binaryBreadthFirstSearch(`Edges SQL`_, **start vids**, **end vids**, "
"[``directed``])"
msgstr ""

msgid ""
"pgr_binaryBreadthFirstSearch(`Edges SQL`_, `Combinations SQL`_, "
"[``directed``])"
msgstr ""

msgid "RETURNS SET OF |old-generic-result|"
msgstr ""

msgid "OR EMPTY SET"
msgstr ""

msgid ""
"**Note:** Using the :doc:`sampledata` Network as all weights are same "
"(i.e :math:`1``)"
msgstr ""

msgid "One to One"
msgstr ""

msgid "RETURNS SET OF |result-1-1|"
msgstr ""

msgid "Example"
msgstr ""

msgid "From vertex :math:`6` to vertex  :math:`10` on a **directed** graph"
msgstr ""

msgid "One to Many"
msgstr ""

msgid "RETURNS SET OF |result-1-m|"
msgstr ""

msgid ""
"From vertex :math:`6` to vertices :math:`\\{10, 17\\}` on a **directed** "
"graph"
msgstr ""

msgid "Many to One"
msgstr ""

msgid "RETURNS SET OF |result-m-1|"
msgstr ""

msgid ""
"From vertices :math:`\\{6, 1\\}` to vertex :math:`17` on a **directed** "
"graph"
msgstr ""

msgid "Many to Many"
msgstr ""

msgid "RETURNS SET OF |short-generic-result|"
msgstr ""

msgid ""
"From vertices :math:`\\{6, 1\\}` to vertices :math:`\\{10, 17\\}` on an "
"**undirected** graph"
msgstr ""

msgid "Combinations"
msgstr ""

msgid "Using a combinations table on an **undirected** graph"
msgstr ""

msgid "The combinations table:"
msgstr ""

msgid "The query:"
msgstr ""

msgid "Parameters"
msgstr ""

msgid "Column"
msgstr ""

msgid "Type"
msgstr ""

msgid "`Edges SQL`_"
msgstr ""

msgid "``TEXT``"
msgstr ""

msgid "`Edges SQL`_ as described below"
msgstr ""

msgid "`Combinations SQL`_"
msgstr ""

msgid "`Combinations SQL`_ as described below"
msgstr ""

msgid "**start vid**"
msgstr ""

msgid "``BIGINT``"
msgstr ""

msgid "Identifier of the starting vertex of the path."
msgstr ""

msgid "**start vids**"
msgstr ""

msgid "``ARRAY[BIGINT]``"
msgstr ""

msgid "Array of identifiers of starting vertices."
msgstr ""

msgid "**end vid**"
msgstr ""

msgid "Identifier of the ending vertex of the path."
msgstr ""

msgid "**end vids**"
msgstr ""

msgid "Array of identifiers of ending vertices."
msgstr ""

msgid "Optional Parameters"
msgstr ""

msgid "Default"
msgstr ""

msgid "``directed``"
msgstr ""

msgid "``BOOLEAN``"
msgstr ""

msgid "``true``"
msgstr ""

msgid "When ``true`` the graph is considered `Directed`"
msgstr ""

msgid "When ``false`` the graph is considered as `Undirected`."
msgstr ""

msgid "Inner Queries"
msgstr ""

msgid "Edges SQL"
msgstr ""

msgid "``id``"
msgstr ""

msgid "**ANY-INTEGER**"
msgstr ""

msgid "Identifier of the edge."
msgstr ""

msgid "``source``"
msgstr ""

msgid "Identifier of the first end point vertex of the edge."
msgstr ""

msgid "``target``"
msgstr ""

msgid "Identifier of the second end point vertex of the edge."
msgstr ""

msgid "``cost``"
msgstr ""

msgid "**ANY-NUMERICAL**"
msgstr ""

msgid "Weight of the edge (``source``, ``target``)"
msgstr ""

msgid "``reverse_cost``"
msgstr ""

msgid "-1"
msgstr ""

msgid "Weight of the edge (``target``, ``source``)"
msgstr ""

msgid ""
"When negative: edge (``target``, ``source``) does not exist, therefore "
"it's not part of the graph."
msgstr ""

msgid "Where:"
msgstr ""

msgid "ANY-INTEGER"
msgstr ""

msgid "``SMALLINT``, ``INTEGER``, ``BIGINT``"
msgstr ""

msgid "ANY-NUMERICAL"
msgstr ""

msgid "``SMALLINT``, ``INTEGER``, ``BIGINT``, ``REAL``, ``FLOAT``"
msgstr ""

msgid "Combinations SQL"
msgstr ""

msgid "Parameter"
msgstr ""

msgid "Identifier of the departure vertex."
msgstr ""

msgid "Identifier of the arrival vertex."
msgstr ""

msgid "Result Columns"
msgstr ""

msgid ""
"Set of ``(seq, path_id, path_seq [, start_vid] [, end_vid], node, edge, "
"cost, agg_cost)``"
msgstr ""

msgid "``seq``"
msgstr ""

msgid "``INTEGER``"
msgstr ""

msgid "Sequential value starting from **1**."
msgstr ""

msgid "``path_id``"
msgstr ""

msgid "Path identifier."
msgstr ""

msgid "Has value **1** for the first of a path from ``start_vid`` to ``end_vid``."
msgstr ""

msgid "``path_seq``"
msgstr ""

msgid ""
"Relative position in the path. Has value **1** for the beginning of a "
"path."
msgstr ""

msgid "``start_vid``"
msgstr ""

msgid ""
"Identifier of the starting vertex. Returned when multiple starting "
"vetrices are in the query."
msgstr ""

msgid "`Many to One`_"
msgstr ""

msgid "`Many to Many`_"
msgstr ""

msgid "`Combinations`_"
msgstr ""

msgid "``end_vid``"
msgstr ""

msgid ""
"Identifier of the ending vertex. Returned when multiple ending vertices "
"are in the query."
msgstr ""

msgid "`One to Many`_"
msgstr ""

msgid "``node``"
msgstr ""

msgid "Identifier of the node in the path from ``start_vid`` to ``end_vid``."
msgstr ""

msgid "``edge``"
msgstr ""

msgid ""
"Identifier of the edge used to go from ``node`` to the next node in the "
"path sequence. **-1** for the last node of the path."
msgstr ""

msgid "``FLOAT``"
msgstr ""

msgid ""
"Cost to traverse from ``node`` using ``edge`` to the next node in the "
"path sequence."
msgstr ""

msgid "``agg_cost``"
msgstr ""

msgid "Aggregate cost from ``start_vid`` to ``node``."
msgstr ""

msgid "Additional Examples"
msgstr ""

msgid "Manually assigned vertex combinations."
msgstr ""

msgid "See Also"
msgstr ""

msgid ":doc:`sampledata`"
msgstr ""

msgid "https://cp-algorithms.com/graph/01_bfs.html"
msgstr ""

#, python-format
msgid "https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm#Specialized_variants"
msgstr ""

msgid "Indices and tables"
msgstr ""

msgid ":ref:`genindex`"
msgstr ""

msgid ":ref:`search`"
msgstr ""

