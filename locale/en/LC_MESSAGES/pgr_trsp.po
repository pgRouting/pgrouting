# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.1.0
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-04 17:31-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../build/doc/pgr_trsp.rst:12
msgid ""
"**Supported versions:** `Latest "
"<https://docs.pgrouting.org/latest/en/pgr_trsp.html>`__ (`3.3 "
"<https://docs.pgrouting.org/3.3/en/pgr_trsp.html>`__) `3.2 "
"<https://docs.pgrouting.org/3.2/en/pgr_trsp.html>`__ `3.1 "
"<https://docs.pgrouting.org/3.1/en/pgr_trsp.html>`__ `3.0 "
"<https://docs.pgrouting.org/3.0/en/pgr_trsp.html>`__"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:18
msgid ""
"**Unsupported versions:** `2.6 "
"<https://docs.pgrouting.org/2.6/en/pgr_trsp.html>`__ `2.5 "
"<https://docs.pgrouting.org/2.5/en/pgr_trsp.html>`__ `2.4 "
"<https://docs.pgrouting.org/2.4/en/pgr_trsp.html>`__ `2.3 "
"<https://docs.pgrouting.org/2.3/en/src/trsp/doc/pgr_trsp.html>`__ `2.2 "
"<https://docs.pgrouting.org/2.2/en/src/trsp/doc/pgr_trsp.html>`__ `2.1 "
"<https://docs.pgrouting.org/2.1/en/src/trsp/doc/index.html>`__ `2.0 "
"<https://docs.pgrouting.org/2.0/en/src/trsp/doc/index.html>`__"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:28
msgid "pgr_trsp - Turn Restriction Shortest Path (TRSP)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:36
msgid ""
"``pgr_trsp`` â€” Returns the shortest path with support for turn "
"restrictions."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:39
msgid "Availability"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:40
msgid "Version 2.1.0"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:42
msgid "New *Via* **prototypes**"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:44
msgid "pgr_trspViaVertices"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:45
msgid "pgr_trspViaEdges"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:47
msgid "Version 2.0.0"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:49
msgid "**Official** function"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:53
msgid "Description"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:55
msgid ""
"The turn restricted shorthest path (TRSP) is a shortest path algorithm "
"that can optionally take into account complicated turn restrictions like "
"those found in real world navigable road networks. Performamnce wise it "
"is nearly as fast as the A* search but has many additional features like "
"it works with edges rather than the nodes of the network. Returns a set "
"of (seq, id1, id2, cost) or (seq, id1, id2, id3, cost) rows, that make up"
" a path."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:85
msgid "**The main characteristics are:**"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:87
msgid ""
"The Turn Restricted Shortest Path algorithm (TRSP) is similar to the "
"shooting star in that you can specify turn restrictions."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:89
msgid ""
"The TRSP setup is mostly the same as :doc:`Dijkstra shortest path "
"<pgr_dijkstra>` with the addition of an optional turn restriction table. "
"This provides an easy way of adding turn restrictions to a road network "
"by placing them in a separate table."
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "sql"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:92 ../../build/doc/pgr_trsp.rst:142
msgid "a SQL query, which should return a set of rows with the following columns:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "id"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:99 ../../build/doc/pgr_trsp.rst:149
msgid "``int4`` identifier of the edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "source"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:100 ../../build/doc/pgr_trsp.rst:150
msgid "``int4`` identifier of the source vertex"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "target"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:101 ../../build/doc/pgr_trsp.rst:151
msgid "``int4`` identifier of the target vertex"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "cost"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:102 ../../build/doc/pgr_trsp.rst:152
msgid ""
"``float8`` value, of the edge traversal cost. A negative cost will "
"prevent the edge from being inserted in the graph."
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "reverse_cost"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:103 ../../build/doc/pgr_trsp.rst:153
msgid ""
"(optional) the cost for the reverse traversal of the edge. This is only "
"used when the ``directed`` and ``has_rcost`` parameters are ``true`` (see"
" the above remark about negative costs)."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:105
msgid "``int4`` **NODE id** of the start point"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:106
msgid "``int4`` **NODE id** of the end point"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "directed"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:107 ../../build/doc/pgr_trsp.rst:156
msgid "``true`` if the graph is directed"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "has_rcost"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:108 ../../build/doc/pgr_trsp.rst:157
msgid ""
"if ``true``, the ``reverse_cost`` column of the SQL generated set of rows"
" will be used for the cost of the traversal of the edge in the opposite "
"direction."
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "restrict_sql"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:110 ../../build/doc/pgr_trsp.rst:159
msgid ""
"(optional) a SQL query, which should return a set of rows with the "
"following columns:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "to_cost"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:116 ../../build/doc/pgr_trsp.rst:165
msgid "``float8`` turn restriction cost"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "target_id"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:117 ../../build/doc/pgr_trsp.rst:166
msgid "``int4`` target id"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "via_path"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:118
msgid "``text`` comma separated list of edges in the reverse order of ``rule``"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:120
msgid ""
"Another variant of TRSP allows to specify **EDGE id** of source and "
"target together with a fraction to interpolate the position:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "source_edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:122
msgid "``int4`` **EDGE id** of the start edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "source_pos"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:123
msgid "``float8`` fraction of 1 defines the position on the start edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "target_edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:124
msgid "``int4`` **EDGE id** of the end edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "target_pos"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:125
msgid "``float8`` fraction of 1 defines the position on the end edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:127 ../../build/doc/pgr_trsp.rst:174
msgid "Returns set of:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "seq"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:129 ../../build/doc/pgr_trsp.rst:176
msgid "row sequence"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "id1"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:130 ../../build/doc/pgr_trsp.rst:178
msgid "node ID"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "id2"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:131 ../../build/doc/pgr_trsp.rst:179
msgid "edge ID (``-1`` for the last row)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:132
msgid "cost to traverse from ``id1`` using ``id2``"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:135
msgid "Support for Vias"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:137
msgid ""
"The Support for Vias functions are prototypes. Not all corner cases are "
"being considered."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:140
msgid ""
"We also have support for vias where you can say generate a from A to B to"
" C, etc. We support both methods above only you pass an array of vertices"
" or and array of edges and percentage position along the edge in two "
"arrays."
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "vids"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:155
msgid ""
"``int4[]`` An ordered array of **NODE id** the path will go through from "
"start to end."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:167
msgid "``text`` commar separated list of edges in the reverse order of ``rule``"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:169
msgid ""
"Another variant of TRSP allows to specify **EDGE id** together with a "
"fraction to interpolate the position:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "eids"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:171
msgid "``int4`` An ordered array of **EDGE id** that the path has to traverse"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "pcts"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:172
msgid ""
"``float8`` An array of fractional positions along the respective edges in"
" ``eids``, where 0.0 is the start of the edge and 1.0 is the end of the "
"eadge."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:177
msgid "route ID"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "id3"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:180
msgid "cost to traverse from ``id2`` using ``id3``"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:183
msgid "Additional Examples"
msgstr ""

#: ../../build/doc/pgr_trsp.rst
msgid "Example"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:185
msgid "Without turn restrictions"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:191
msgid "With turn restrictions"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:193
msgid "Then a query with turn restrictions is created as:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:199
msgid "An example query using vertex ids and via points:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:205
msgid "An example query using edge ids and vias:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:211
msgid "The queries use the :doc:`sampledata` network."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:214
msgid "Known Issues"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:216
msgid "Introduction"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:217
msgid ""
"pgr_trsp code has issues that are not being fixed yet, but as time passes"
" and new functionality is added to pgRouting with wrappers to **hide** "
"the issues, not to fix them."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:219
msgid "For clarity on the queries:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:221
msgid "_pgr_trsp (internal_function) is the original code"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:222
msgid "pgr_trsp (lower case) represents the wrapper calling the original code"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:223
msgid ""
"pgr_TRSP (upper case) represents the wrapper calling the replacement "
"function, depending on the function, it can be:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:225
msgid "pgr_dijkstra"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:226
msgid "pgr_dijkstraVia"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:227
msgid "pgr_withPoints"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:228
msgid "_pgr_withPointsVia (internal function)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:231
msgid "The restrictions"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:233
msgid ""
"The restriction used in the examples does not have to do anything with "
"the graph:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:235
msgid "No vertex has id: 25, 32 or 33"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:236
msgid "No edge has id: 25, 32 or 33"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:238
msgid "A restriction is assigned as:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:244
msgid "The back end code has that same restriction as follows"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:250
msgid ""
"therefore the shortest path expected are as if there was no restriction "
"involved"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:253
msgid "The \"Vertices\" signature version"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:261
msgid "1 Different ways to represent 'no path found`"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:263 ../../build/doc/pgr_trsp.rst:365
msgid "Sometimes represents with EMPTY SET a no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:264
msgid "Sometimes represents with Error a no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:267 ../../build/doc/pgr_trsp.rst:369
msgid "Returning EMPTY SET to represent no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:272
msgid ""
"pgr_trsp calls :doc:`pgr_dijkstra` when there are no restrictions which "
"returns `EMPTY SET` when a path is not found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:280 ../../build/doc/pgr_trsp.rst:378
msgid "Throwing EXCEPTION to represent no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:285 ../../build/doc/pgr_trsp.rst:383
msgid ""
"pgr_trsp use the original code when there are restrictions, even if they "
"have nothing to do with the graph, which will throw an EXCEPTION to "
"represent no path found."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:289
msgid "1 Routing from/to same location"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:291
msgid ""
"When routing from location :math:`1` to the same location :math:`1`, no "
"path is needed to reach the destination, its already there. Therefore is "
"expected to return an `EMPTY SET` or an `EXCEPTION` depending on the "
"parameters"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:295
msgid "Sometimes represents with EMPTY SET no path found (expected)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:296
msgid "Sometimes represents with EXCEPTION no path found (expected)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:297
msgid "Sometimes finds a path (not expected)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:300
msgid "Returning expected EMPTY SET to represent no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:305
msgid ""
"``pgr_trsp`` calls :doc:`pgr_dijkstra` when there are no restrictions "
"which returns the expected to return `EMPTY SET` to represent no path "
"found."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:309
msgid "Returning expected EXCEPTION to represent no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:314
msgid ""
"In this case ``pgr_trsp`` calls the original code when there are "
"restrictions, even if they have nothing to do with the graph, in this "
"case that code throws the expected EXCEPTION"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:318
msgid "Returning unexpected path"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:323
msgid ""
"In this case ``pgr_trsp`` calls the original code when there are "
"restrictions, even if they have nothing to do with the graph, in this "
"case that code finds an unexpected path."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:328
msgid "1 User contradictions"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:330 ../../build/doc/pgr_trsp.rst:445
msgid ""
"``pgr_trsp`` unlike other pgRouting functions does not autodectect the "
"existence of ``reverse_cost`` column. Therefor it has ``has_rcost`` "
"parameter to check the existence of ``reverse_cost`` column. "
"Contradictions happen:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:334 ../../build/doc/pgr_trsp.rst:449
msgid "When the reverse_cost is missing, and the flag `has_rcost` is set to true"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:335 ../../build/doc/pgr_trsp.rst:346
#: ../../build/doc/pgr_trsp.rst:450 ../../build/doc/pgr_trsp.rst:461
msgid "When the reverse_cost exists, and the flag `has_rcost` is set to false"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:338 ../../build/doc/pgr_trsp.rst:453
msgid "When the reverse_cost is missing, and the flag `has_rcost` is set to true."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:343 ../../build/doc/pgr_trsp.rst:458
msgid "An EXCEPTION is thrown."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:351 ../../build/doc/pgr_trsp.rst:466
msgid ""
"The ``reverse_cost`` column will be effectively removed and will cost "
"execution time"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:354
msgid "The \"Edges\" signature version"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:363
msgid "2 Different ways to represent 'no path found`"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:366
msgid "Sometimes represents with EXCEPTION a no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:374
msgid ""
"pgr_trsp calls :doc:`pgr_withPoints` when there are no restrictions which"
" returns `EMPTY SET` when a path is not found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:387
msgid "Paths with equal number of vertices and edges"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:389
msgid "A path is made of `N` vertices and `N - 1` edges."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:391
msgid "Sometimes returns `N` vertices and `N - 1` edges."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:392
msgid "Sometimes returns `N - 1` vertices and `N - 1` edges."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:395
msgid "Returning `N` vertices and `N - 1` edges."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:400
msgid ""
"pgr_trsp calls :doc:`pgr_withPoints` when there are no restrictions which"
" returns the correct number of rows that will include all the vertices. "
"The last row will have a ``-1`` on the edge column to indicate the edge "
"number is invalidu for that row."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:406
msgid "Returning `N - 1` vertices and `N - 1` edges."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:411
msgid ""
"pgr_trsp use the original code when there are restrictions, even if they "
"have nothing to do with the graph, and will not return the last vertex of"
" the path."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:415
msgid "2 Routing from/to same location"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:417
msgid ""
"When routing from the same edge and position to the same edge and "
"position, no path is needed to reach the destination, its already there. "
"Therefore is expected to return an `EMPTY SET` or an `EXCEPTION` "
"depending on the parameters, non of which is happening."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:423
msgid "A path with 2 vertices and edge cost 0"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:428
msgid ""
"pgr_trsp calls :doc:`pgr_withPoints` setting the first :math:`(edge, "
"position)` with a differenct point id from the second :math:`(edge, "
"position)` making them different points. But the cost using the edge, is "
":math:`0`."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:433
msgid "A path with 1 vertices and edge cost 0"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:438
msgid ""
"pgr_trsp use the original code when there are restrictions, even if they "
"have nothing to do with the graph, and will not have the row for the "
"vertex :math:`-2`."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:443
msgid "2 User contradictions"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:469
msgid "Using a points of interest table"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:471
msgid "Given a set of points of interest:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:478 ../../build/doc/pgr_trsp.rst:510
msgid "Using pgr_trsp"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:483
msgid "On *pgr_trsp*, to be able to use the table information:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:485
msgid "Each parameter has to be extracted explicitly from the table"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:486
msgid "Regardles of the point pid original value"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:488
msgid "will always be -1 for the first point"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:489
msgid "will always be -2 for the second point"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:491
msgid "the row reaching point -2 will not be shown"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:494 ../../build/doc/pgr_trsp.rst:525
msgid "Using :doc:`pgr_withPoints`"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:499 ../../build/doc/pgr_trsp.rst:530
msgid "Suggestion: use :doc:`pgr_withPoints` when there are no turn restrictions:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:501 ../../build/doc/pgr_trsp.rst:533
msgid "Results are more complete"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:502 ../../build/doc/pgr_trsp.rst:534
msgid "Column names are meaningful"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:505
msgid "Routing from a vertex to a point"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:507
msgid ""
"Solving a shortest path from vertex :math:`6` to pid 1 using a points of "
"interest table"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:515
msgid "Vertex 6 is on edge 8 at 1 fraction"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:522
msgid "Vertex 6 is also edge 11 at 0 fraction"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:532
msgid "No need to choose where the vertex is located."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:538
msgid "prototypes"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:540
msgid ""
"``pgr_trspViaVertices`` and ``pgr_trspViaEdges`` were added to pgRouting "
"as prototypes"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:542
msgid ""
"These functions use the pgr_trsp functions inheriting all the problems "
"mentioned above. When there are no restrictions and have a routing "
"\"via\" problem with vertices:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:545
msgid ":doc:`pgr_dijkstraVia`"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:550
msgid "See Also"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:553
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:554
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:555
msgid ":ref:`search`"
msgstr ""

