# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.2.0-dev
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.2.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 10:56-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/doc/pgr_lineGraphFull.rst:12
msgid "**Supported versions:** `Latest <https://docs.pgrouting.org/latest/en/pgr_lineGraphFull.html>`__ (`3.2 <https://docs.pgrouting.org/3.2/en/pgr_lineGraphFull.html>`__) `3.1 <https://docs.pgrouting.org/3.1/en/pgr_lineGraphFull.html>`__) `3.0 <https://docs.pgrouting.org/3.0/en/pgr_lineGraphFull.html>`__"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:17
msgid "**Unsupported versions:** `2.6 <https://docs.pgrouting.org/2.6/en/pgr_lineGraphFull.html>`__"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:21
msgid "pgr_lineGraphFull - Experimental"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:23
msgid "``pgr_lineGraphFull`` â€” Transforms a given graph into a new graph where all of the vertices from the original graph are converted to line graphs."
msgstr ""

#: ../../build/doc/experimental.rst:3
msgid "Possible server crash"
msgstr ""

#: ../../build/doc/experimental.rst:5
msgid "These functions might create a server crash"
msgstr ""

#: ../../build/doc/experimental.rst:7
msgid "Experimental functions"
msgstr ""

#: ../../build/doc/experimental.rst:9
msgid "They are not officially of the current release."
msgstr ""

#: ../../build/doc/experimental.rst:10
msgid "They likely will not be officially be part of the next release:"
msgstr ""

#: ../../build/doc/experimental.rst:12
msgid "The functions might not make use of ANY-INTEGER and ANY-NUMERICAL"
msgstr ""

#: ../../build/doc/experimental.rst:13
msgid "Name might change."
msgstr ""

#: ../../build/doc/experimental.rst:14
msgid "Signature might change."
msgstr ""

#: ../../build/doc/experimental.rst:15
msgid "Functionality might change."
msgstr ""

#: ../../build/doc/experimental.rst:16
msgid "pgTap tests might be missing."
msgstr ""

#: ../../build/doc/experimental.rst:17
msgid "Might need c/c++ coding."
msgstr ""

#: ../../build/doc/experimental.rst:18
msgid "May lack documentation."
msgstr ""

#: ../../build/doc/experimental.rst:19
msgid "Documentation if any might need to be rewritten."
msgstr ""

#: ../../build/doc/experimental.rst:20
msgid "Documentation examples might need to be automatically generated."
msgstr ""

#: ../../build/doc/experimental.rst:21
msgid "Might need a lot of feedback from the comunity."
msgstr ""

#: ../../build/doc/experimental.rst:22
msgid "Might depend on a proposed function of pgRouting"
msgstr ""

#: ../../build/doc/experimental.rst:23
msgid "Might depend on a deprecated function of pgRouting"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:30
msgid "Availability"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:31
msgid "Version 2.6.0"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:33
msgid "New **Experimental** function"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:37
#: ../../build/doc/pgr_lineGraphFull.rst:84
#: ../../build/doc/pgRouting-concepts.rst:4
msgid "Description"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:39
msgid "pgr_lineGraphFull, converts original directed graph to a directed line graph by converting each vertex to a complete graph and keeping all the original edges. The new connecting edges have a cost 0 and go between the adjacent original edges, respecting the directionality."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:41
msgid "A possible application of the resulting graph is **\"routing with two edge restrictions\"**:"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:43
msgid "Setting a cost of using the vertex when routing between edges on the connecting edge"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:44
msgid "Forbid the routing between two edges by removing the connecting edge"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:46
msgid "This is possible because each of the intersections (vertices) in the original graph are now complete graphs that have a new edge for each possible turn across that intersection."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:52
msgid "The main characteristics are:"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:49
msgid "This function is for **directed** graphs."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:50
msgid "Results are undefined when a negative vertex id is used in the input graph."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:51
msgid "Results are undefined when a duplicated edge id is used in the input graph."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:52
msgid "Running time: TBD"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:55
msgid "Signatures"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:58
msgid "Summary"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:66
msgid "Using defaults"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:0
#: ../../build/doc/pgr_lineGraphFull.rst:0
#: ../../build/doc/pgr_lineGraphFull.rst:0
#: ../../build/doc/pgr_lineGraphFull.rst:0
msgid "Example"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:72
msgid "Full line graph of subgraph of edges :math:`\\{4, 7, 8, 10\\}`"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:81
msgid "Parameters"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:84
#: ../../build/doc/pgRouting-concepts.rst:4
msgid "Column"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:84
#: ../../build/doc/pgRouting-concepts.rst:4
msgid "Type"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:84
#: ../../build/doc/pgRouting-concepts.rst:4
msgid "Default"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:86
msgid "**sql**"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:86
msgid "``TEXT``"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:86
msgid "SQL query as described above."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:92
msgid "Inner query"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:6
msgid "**id**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:6
#: ../../build/doc/pgRouting-concepts.rst:7
#: ../../build/doc/pgRouting-concepts.rst:8
msgid "``ANY-INTEGER``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:6
msgid "Identifier of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:7
msgid "**source**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:7
msgid "Identifier of the first end point vertex of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
msgid "**target**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
msgid "Identifier of the second end point vertex of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
msgid "**cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
#: ../../build/doc/pgRouting-concepts.rst:13
msgid "``ANY-NUMERICAL``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
msgid "Weight of the edge  `(source, target)`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:11
msgid "When negative: edge `(source, target)` does not exist, therefore it's not part of the graph."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "**reverse_cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "-1"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "Weight of the edge `(target, source)`,"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:15
msgid "When negative: edge `(target, source)` does not exist, therefore it's not part of the graph."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:19
msgid "Where:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
msgid "ANY-INTEGER"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:21
msgid "SMALLINT, INTEGER, BIGINT"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
msgid "ANY-NUMERICAL"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:22
msgid "SMALLINT, INTEGER, BIGINT, REAL, FLOAT"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:99
msgid "Additional Examples"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:101
msgid "The examples of this section are based on the :doc:`sampledata` network."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:103
msgid "The examples include the subgraph including edges 4, 7, 8, and 10 with reverse_cost."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:105
msgid "For generating the LineGraphFull"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:107
msgid "This example displays how this graph transformation works to create additional edges for each possible turn in a graph."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:115
msgid "|first|"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:130
msgid "|second|"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:135
msgid "In the transformed graph, all of the edges from the original graph are still present (yellow), but we now have additional edges for every turn that could be made across vertex 6 (orange)."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:137
msgid "For creating table that identifies transformed vertices"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:139
msgid "The vertices in the transformed graph are each created by splitting up the vertices in the original graph. Unless a vertex in the original graph is a leaf vertex, it will generate more than one vertex in the transformed graph. One of the newly created vertices in the transformed graph will be given the same vertex-id as the vertex that it was created from in the original graph, but the rest of the newly created vertices will have negative vertex ids. Following is an example of how to generate a table that maps the ids of the newly created vertices with the original vertex that they were created from"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:141
msgid "The first step is to store your results graph into a table and then create the vertex mapping table with one row for each distinct vertex id in the results graph."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:147
msgid "Next, we set the original_id of all of the vertices in the results graph that were given the same vertex id as the vertex that it was created from in the original graph."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:153
msgid "Then, we cross reference all of the other newly created vertices that do not have the same original_id and set their original_id values."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:159
msgid "The only vertices left that have not been mapped are a few of the leaf vertices from the original graph. The following sql completes the mapping for these leaf vertices (in the case of this example graph there are no leaf vertices but this is necessary for larger graphs)."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:165
msgid "Now our vertex mapping table is complete:"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:171
msgid "For running a dijkstra's shortest path with turn penalties"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:173
msgid "One use case for this graph transformation is to be able to run a shortest path search that takes into account the cost or limitation of turning. Below is an example of running a dijkstra's shortest path from vertex 2 to vertex 8 in the original graph, while adding a turn penalty cost of 100 to the turn from edge 4 to edge -7."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:175
msgid "First we must increase set the cost of making the turn to 100:"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:181
msgid "Then we must run a dijkstra's shortest path search using all of the vertices in the new graph that were created from vertex 2 as the starting point, and all of the vertices in the new graph that were created from vertex 8 as the ending point."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:187
msgid "Normally the shortest path from vertex 2 to vertex 8 would have an aggregate cost of 2, but since there is a large penalty for making the turn needed to get this cost, the route goes through vertex 6 to avoid this turn."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:189
msgid "If you cross reference the node column in the dijkstra results with the vertex id mapping table, this will show you that the path goes from v2 -> v5 -> v6 -> v5 -> v8 in the original graph."
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:192
msgid "See Also"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:194
msgid "https://en.wikipedia.org/wiki/Line_graph"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:195
msgid "https://en.wikipedia.org/wiki/Complete_graph"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:198
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:199
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/pgr_lineGraphFull.rst:200
msgid ":ref:`search`"
msgstr ""

