# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.3.4
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-06 14:22-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "**Supported versions:** `Latest <https://docs.pgrouting.org/latest/en/pgr_dagShortestPath.html>`__ (`3.3 <https://docs.pgrouting.org/3.3/en/pgr_dagShortestPath.html>`__) `3.2 <https://docs.pgrouting.org/3.2/en/pgr_dagShortestPath.html>`__ `3.1 <https://docs.pgrouting.org/3.1/en/pgr_dagShortestPath.html>`__ `3.0 <https://docs.pgrouting.org/3.0/en/pgr_dagShortestPath.html>`__"
msgstr ""

msgid "pgr_dagShortestPath - Experimental"
msgstr ""

msgid "``pgr_dagShortestPath`` â€” Returns the shortest path(s) for weighted directed acyclic graphs(DAG). In particular, the DAG shortest paths algorithm implemented by Boost.Graph."
msgstr ""

msgid "Boost Graph Inside"
msgstr ""

msgid "Possible server crash"
msgstr ""

msgid "These functions might create a server crash"
msgstr ""

msgid "Experimental functions"
msgstr ""

msgid "They are not officially of the current release."
msgstr ""

msgid "They likely will not be officially be part of the next release:"
msgstr ""

msgid "The functions might not make use of ANY-INTEGER and ANY-NUMERICAL"
msgstr ""

msgid "Name might change."
msgstr ""

msgid "Signature might change."
msgstr ""

msgid "Functionality might change."
msgstr ""

msgid "pgTap tests might be missing."
msgstr ""

msgid "Might need c/c++ coding."
msgstr ""

msgid "May lack documentation."
msgstr ""

msgid "Documentation if any might need to be rewritten."
msgstr ""

msgid "Documentation examples might need to be automatically generated."
msgstr ""

msgid "Might need a lot of feedback from the comunity."
msgstr ""

msgid "Might depend on a proposed function of pgRouting"
msgstr ""

msgid "Might depend on a deprecated function of pgRouting"
msgstr ""

msgid "Availability"
msgstr ""

msgid "Version 3.2.0"
msgstr ""

msgid "New **experimental** function:"
msgstr ""

msgid "pgr_dagShortestPath(Combinations)"
msgstr ""

msgid "Version 3.0.0"
msgstr ""

msgid "New **experimental** function"
msgstr ""

msgid "Description"
msgstr ""

msgid "Shortest Path for Directed Acyclic Graph(DAG) is a graph search algorithm that solves the shortest path problem for weighted directed acyclic graph, producing a shortest path from a starting vertex (``start_vid``) to an ending vertex (``end_vid``)."
msgstr ""

msgid "This implementation can only be used with a **directed** graph with no cycles i.e. directed acyclic graph."
msgstr ""

msgid "The algorithm relies on topological sorting the dag to impose a linear ordering on the vertices, and thus is more efficient for DAG's than either the Dijkstra or Bellman-Ford algorithm."
msgstr ""

msgid "The main characteristics are:"
msgstr ""

msgid "Process is valid for weighted directed acyclic graphs only. otherwise it will throw warnings."
msgstr ""

msgid "Values are returned when there is a path."
msgstr ""

msgid "When the starting vertex and ending vertex are the same, there is no path."
msgstr ""

msgid "The `agg_cost` the non included values `(v, v)` is `0`"
msgstr ""

msgid "When the starting vertex and ending vertex are the different and there is no path:"
msgstr ""

msgid "The `agg_cost` the non included values `(u, v)` is :math:`\\infty`"
msgstr ""

msgid "For optimization purposes, any duplicated value in the `start_vids` or `end_vids` are ignored."
msgstr ""

msgid "The returned values are ordered:"
msgstr ""

msgid "`start_vid` ascending"
msgstr ""

msgid "`end_vid` ascending"
msgstr ""

msgid "Running time: :math:`O(| start\\_vids | * (V + E))`"
msgstr ""

msgid "Signatures"
msgstr ""

msgid "Summary"
msgstr ""

msgid "\\ \\"
msgstr ""

msgid "pgr_dagShortestPath(`Edges SQL`_, **start vid**,  **end vid**)"
msgstr ""

msgid "pgr_dagShortestPath(`Edges SQL`_, **start vid**,  **end vids**)"
msgstr ""

msgid "pgr_dagShortestPath(`Edges SQL`_, **start vids**, **end vid**)"
msgstr ""

msgid "pgr_dagShortestPath(`Edges SQL`_, **start vids**, **end vids**)"
msgstr ""

msgid "pgr_dagShortestPath(`Edges SQL`_, `Combinations SQL`_)"
msgstr ""

msgid "RETURNS SET OF |result-1-1|"
msgstr ""

msgid "OR EMPTY SET"
msgstr ""

msgid "One to One"
msgstr ""

msgid "Example"
msgstr ""

msgid "From vertex :math:`5` to vertex  :math:`11` on a **directed** graph"
msgstr ""

msgid "One to Many"
msgstr ""

msgid "From vertex :math:`5` to vertices :math:`\\{7, 11\\}`"
msgstr ""

msgid "Many to One"
msgstr ""

msgid "From vertices :math:`\\{5, 10\\}` to vertex :math:`11`"
msgstr ""

msgid "Many to Many"
msgstr ""

msgid "From vertices :math:`\\{5, 15\\}` to vertices :math:`\\{11, 17\\}` on an **undirected** graph"
msgstr ""

msgid "Combinations"
msgstr ""

msgid "pgr_dagShortestPath(`Edges SQL`_, Combinations)"
msgstr ""

msgid "Using a combinations table on an **undirected** graph"
msgstr ""

msgid "The combinations table:"
msgstr ""

msgid "The query:"
msgstr ""

msgid "Parameters"
msgstr ""

msgid "Column"
msgstr ""

msgid "Type"
msgstr ""

msgid "`Edges SQL`_"
msgstr ""

msgid "``TEXT``"
msgstr ""

msgid "`Edges SQL`_ as described below"
msgstr ""

msgid "`Combinations SQL`_"
msgstr ""

msgid "`Combinations SQL`_ as described below"
msgstr ""

msgid "**start vid**"
msgstr ""

msgid "``BIGINT``"
msgstr ""

msgid "Identifier of the starting vertex of the path."
msgstr ""

msgid "**start vids**"
msgstr ""

msgid "``ARRAY[BIGINT]``"
msgstr ""

msgid "Array of identifiers of starting vertices."
msgstr ""

msgid "**end vid**"
msgstr ""

msgid "Identifier of the ending vertex of the path."
msgstr ""

msgid "**end vids**"
msgstr ""

msgid "Array of identifiers of ending vertices."
msgstr ""

msgid "Inner Queries"
msgstr ""

msgid "Edges SQL"
msgstr ""

msgid "Default"
msgstr ""

msgid "``id``"
msgstr ""

msgid "**ANY-INTEGER**"
msgstr ""

msgid "Identifier of the edge."
msgstr ""

msgid "``source``"
msgstr ""

msgid "Identifier of the first end point vertex of the edge."
msgstr ""

msgid "``target``"
msgstr ""

msgid "Identifier of the second end point vertex of the edge."
msgstr ""

msgid "``cost``"
msgstr ""

msgid "**ANY-NUMERICAL**"
msgstr ""

msgid "Weight of the edge (``source``, ``target``)"
msgstr ""

msgid "``reverse_cost``"
msgstr ""

msgid "-1"
msgstr ""

msgid "Weight of the edge (``target``, ``source``)"
msgstr ""

msgid "When negative: edge (``target``, ``source``) does not exist, therefore it's not part of the graph."
msgstr ""

msgid "Where:"
msgstr ""

msgid "ANY-INTEGER"
msgstr ""

msgid "``SMALLINT``, ``INTEGER``, ``BIGINT``"
msgstr ""

msgid "ANY-NUMERICAL"
msgstr ""

msgid "``SMALLINT``, ``INTEGER``, ``BIGINT``, ``REAL``, ``FLOAT``"
msgstr ""

msgid "Combinations SQL"
msgstr ""

msgid "Parameter"
msgstr ""

msgid "Identifier of the departure vertex."
msgstr ""

msgid "Identifier of the arrival vertex."
msgstr ""

msgid "Resturn Columns"
msgstr ""

msgid "Returns set of ``(seq, path_seq [, start_vid] [, end_vid], node, edge, cost, agg_cost)``"
msgstr ""

msgid "``seq``"
msgstr ""

msgid "``INTEGER``"
msgstr ""

msgid "Sequential value starting from **1**."
msgstr ""

msgid "``path_seq``"
msgstr ""

msgid "Relative position in the path. Has value **1** for the beginning of a path."
msgstr ""

msgid "``start_vid``"
msgstr ""

msgid "Identifier of the starting vertex. Returned when multiple starting vetrices are in the query."
msgstr ""

msgid "`Many to One`_"
msgstr ""

msgid "`Many to Many`_"
msgstr ""

msgid "``end_vid``"
msgstr ""

msgid "Identifier of the ending vertex. Returned when multiple ending vertices are in the query."
msgstr ""

msgid "`One to Many`_"
msgstr ""

msgid "``node``"
msgstr ""

msgid "Identifier of the node in the path from ``start_vid`` to ``end_vid``."
msgstr ""

msgid "``edge``"
msgstr ""

msgid "Identifier of the edge used to go from ``node`` to the next node in the path sequence. **-1** for the last node of the path."
msgstr ""

msgid "``FLOAT``"
msgstr ""

msgid "Cost to traverse from ``node`` using ``edge`` to the next node in the path sequence."
msgstr ""

msgid "``agg_cost``"
msgstr ""

msgid "Aggregate cost from ``start_vid`` to ``node``."
msgstr ""

msgid "Additional Examples"
msgstr ""

msgid "Example 1"
msgstr ""

msgid "Demonstration of repeated values are ignored, and result is sorted."
msgstr ""

msgid "Example 2"
msgstr ""

msgid "Making **start_vids** the same as **end_vids**"
msgstr ""

msgid "Example 3"
msgstr ""

msgid "Manually assigned vertex combinations."
msgstr ""

msgid "See Also"
msgstr ""

msgid ":doc:`sampledata`"
msgstr ""

msgid "https://en.wikipedia.org/wiki/Topological_sorting"
msgstr ""

msgid "Indices and tables"
msgstr ""

msgid ":ref:`genindex`"
msgstr ""

msgid ":ref:`search`"
msgstr ""
