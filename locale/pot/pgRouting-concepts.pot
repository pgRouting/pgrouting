# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.1.0
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-22 08:19-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "pgRouting Concepts"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:15
msgid "Contents"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:20
msgid "Getting Started"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:22
msgid "This is a simple guide to walk you through the steps of getting started with pgRouting. In this guide we will cover:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:32
msgid "Create a routing Database"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:34
msgid "The first thing we need to do is create a database and load pgrouting in the database. Typically you will create a database for each project. Once you have a database to work in, your can load your data and build your application in that database. This makes it easy to move your project later if you want to to say a production server."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:40
msgid "For Postgresql 9.2 and later versions"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:51
msgid "Load Data"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:53
msgid "How you load your data will depend in what form it comes it. There are various OpenSource tools that can help you, like:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
msgid "osm2pgrouting"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:56
msgid "this is a tool for loading OSM data into postgresql with pgRouting requirements"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
msgid "shp2pgsql"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:57
msgid "this is the postgresql shapefile loader"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
msgid "ogr2ogr"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:58
msgid "this is a vector data conversion utility"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
msgid "osm2pgsql"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:59
msgid "this is a tool for loading OSM data into postgresql"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:61
msgid "So these tools and probably others will allow you to read vector data so that you may then load that data into your database as a table of some kind. At this point you need to know a little about your data structure and content. One easy way to browse your new data table is with pgAdmin3 or phpPgAdmin."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:69
msgid "Build a Routing Topology"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:71
msgid "Next we need to build a topology for our street data. What this means is that for any given edge in your street data the ends of that edge will be connected to a unique node and to other edges that are also connected to that same unique node. Once all the edges are connected to nodes we have a graph that can be used for routing with pgrouting. We provide a tool that will help with this:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:77
msgid "this step is not needed if data is loaded with `osm2pgrouting`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:83
msgid ":doc:`pgr_createTopology`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:88
msgid "Check the Routing Topology"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:90
msgid "There are lots of possible sources for errors in a graph. The data that you started with may not have been designed with routing in mind. A graph has some very specific requirements. One is that it is *NODED*, this means that except for some very specific use cases, each road segment starts and ends at a node and that in general is does not cross another road segment that it should be connected to."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:97
msgid "There can be other errors like the direction of a one-way street being entered in the wrong direction. We do not have tools to search for all possible errors but we have some basic tools that might help."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:109
msgid ":doc:`pgr_analyzeGraph`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:110
msgid ":doc:`pgr_analyzeOneWay`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:111
msgid ":doc:`pgr_nodeNetwork`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:117
msgid "Compute a Path"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:119
msgid "Once you have all the preparation work done above, computing a route is fairly easy. We have a lot of different algorithms that can work with your prepared road network. The general form of a route query is:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:127
msgid "As you can see this is fairly straight forward and you can look and the specific algorithms for the details of the signatures and how to use them. These results have information like edge id and/or the node id along with the cost or geometry for the step in the path from *start* to *end*. Using the ids you can join these result back to your edge table to get more information about each step in the path."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:134
msgid ":doc:`pgr_dijkstra`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:137
msgid "Group of Functions"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:139
msgid "A function might have different overloads. Across this documentation, to indicate which overload we use the following terms:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:142
msgid "`One to One`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:143
#: ../../build/doc/pgRouting-concepts.rst:429
#: ../../build/doc/pgRouting-concepts.rst:464
msgid "`One to Many`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:144
#: ../../build/doc/pgRouting-concepts.rst:423
#: ../../build/doc/pgRouting-concepts.rst:457
msgid "`Many to One`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:145
#: ../../build/doc/pgRouting-concepts.rst:424
#: ../../build/doc/pgRouting-concepts.rst:430
#: ../../build/doc/pgRouting-concepts.rst:458
#: ../../build/doc/pgRouting-concepts.rst:465
msgid "`Many to Many`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:146
msgid "`Combinations`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:148
msgid "Depending on the overload are the parameters used, keeping consistency across all functions."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:152
msgid "One to One"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:154
#: ../../build/doc/pgRouting-concepts.rst:162
#: ../../build/doc/pgRouting-concepts.rst:170
#: ../../build/doc/pgRouting-concepts.rst:178
#: ../../build/doc/pgRouting-concepts.rst:186
msgid "When routing from:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:156
#: ../../build/doc/pgRouting-concepts.rst:164
msgid "From **one** starting vertex"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:157
#: ../../build/doc/pgRouting-concepts.rst:173
msgid "to **one** ending vertex"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:160
msgid "One to Many"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:165
#: ../../build/doc/pgRouting-concepts.rst:181
msgid "to **many** ending vertices"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:168
msgid "Many to One"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:172
#: ../../build/doc/pgRouting-concepts.rst:180
msgid "From **many** starting vertices"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:176
msgid "Many to Many"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:184
msgid "Combinations"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:188
msgid "From **many** different starting vertices"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:189
msgid "to **many** different ending vertices"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:190
msgid "Every tuple specifies a pair of a start vertex and an end vertex"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:191
msgid "Users can define the combinations as desired."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:198
msgid "Inner Queries"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:203
msgid "There are several kinds of valid inner queries and also the columns returned are depending of the function. Which kind of inner query will depend on the function(s) requirements. To simplify variety of types, ``ANY-INTEGER`` and ``ANY-NUMERICAL`` is used."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:209
#: ../../build/doc/pgRouting-concepts.rst:238
#: ../../build/doc/pgRouting-concepts.rst:267
#: ../../build/doc/pgRouting-concepts.rst:325
#: ../../build/doc/flow-family.rst:21
#: ../../build/doc/flow-family.rst:21
#: ../../build/doc/pgRouting-concepts.rst:371
#: ../../build/doc/pgRouting-concepts.rst:391
msgid "Where:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/flow-family.rst:0
#: ../../build/doc/flow-family.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
msgid "ANY-INTEGER"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:211
#: ../../build/doc/pgRouting-concepts.rst:240
#: ../../build/doc/pgRouting-concepts.rst:269
#: ../../build/doc/pgRouting-concepts.rst:327
#: ../../build/doc/flow-family.rst:23
#: ../../build/doc/flow-family.rst:23
#: ../../build/doc/pgRouting-concepts.rst:393
msgid "SMALLINT, INTEGER, BIGINT"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/flow-family.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
msgid "ANY-NUMERICAL"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:212
#: ../../build/doc/pgRouting-concepts.rst:241
#: ../../build/doc/pgRouting-concepts.rst:270
#: ../../build/doc/pgRouting-concepts.rst:328
msgid "SMALLINT, INTEGER, BIGINT, REAL, FLOAT"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:218
msgid "Description of the edges_sql query for dijkstra like functions"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:223
#: ../../build/doc/pgRouting-concepts.rst:253
#: ../../build/doc/pgRouting-concepts.rst:306
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/pgRouting-concepts.rst:354
#: ../../build/doc/pgRouting-concepts.rst:384
#: ../../build/doc/pgRouting-concepts.rst:416
#: ../../build/doc/pgRouting-concepts.rst:449
#: ../../build/doc/pgRouting-concepts.rst:484
#: ../../build/doc/flow-family.rst:4
#: ../../build/doc/flow-family.rst:4
msgid "Column"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:223
#: ../../build/doc/pgRouting-concepts.rst:253
#: ../../build/doc/pgRouting-concepts.rst:282
#: ../../build/doc/pgRouting-concepts.rst:306
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/pgRouting-concepts.rst:354
#: ../../build/doc/pgRouting-concepts.rst:384
#: ../../build/doc/pgRouting-concepts.rst:416
#: ../../build/doc/pgRouting-concepts.rst:449
#: ../../build/doc/pgRouting-concepts.rst:484
#: ../../build/doc/flow-family.rst:4
#: ../../build/doc/flow-family.rst:4
msgid "Type"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:223
#: ../../build/doc/pgRouting-concepts.rst:253
#: ../../build/doc/pgRouting-concepts.rst:282
#: ../../build/doc/pgRouting-concepts.rst:306
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/pgRouting-concepts.rst:384
msgid "Default"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:223
#: ../../build/doc/pgRouting-concepts.rst:253
#: ../../build/doc/pgRouting-concepts.rst:282
#: ../../build/doc/pgRouting-concepts.rst:306
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/pgRouting-concepts.rst:354
#: ../../build/doc/pgRouting-concepts.rst:384
#: ../../build/doc/pgRouting-concepts.rst:416
#: ../../build/doc/pgRouting-concepts.rst:449
#: ../../build/doc/pgRouting-concepts.rst:484
#: ../../build/doc/flow-family.rst:4
#: ../../build/doc/flow-family.rst:4
msgid "Description"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:225
#: ../../build/doc/pgRouting-concepts.rst:308
#: ../../build/doc/flow-family.rst:8
#: ../../build/doc/flow-family.rst:8
msgid "**id**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:225
#: ../../build/doc/pgRouting-concepts.rst:226
#: ../../build/doc/pgRouting-concepts.rst:227
#: ../../build/doc/pgRouting-concepts.rst:255
#: ../../build/doc/pgRouting-concepts.rst:256
#: ../../build/doc/pgRouting-concepts.rst:308
#: ../../build/doc/pgRouting-concepts.rst:309
#: ../../build/doc/pgRouting-concepts.rst:310
#: ../../build/doc/flow-family.rst:8
#: ../../build/doc/flow-family.rst:9
#: ../../build/doc/flow-family.rst:10
#: ../../build/doc/flow-family.rst:11
#: ../../build/doc/flow-family.rst:15
#: ../../build/doc/flow-family.rst:8
#: ../../build/doc/flow-family.rst:9
#: ../../build/doc/flow-family.rst:10
#: ../../build/doc/flow-family.rst:11
#: ../../build/doc/flow-family.rst:14
#: ../../build/doc/pgRouting-concepts.rst:356
#: ../../build/doc/pgRouting-concepts.rst:361
#: ../../build/doc/pgRouting-concepts.rst:386
#: ../../build/doc/pgRouting-concepts.rst:387
msgid "``ANY-INTEGER``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:225
#: ../../build/doc/pgRouting-concepts.rst:308
#: ../../build/doc/flow-family.rst:8
#: ../../build/doc/flow-family.rst:8
msgid "Identifier of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:226
#: ../../build/doc/pgRouting-concepts.rst:255
#: ../../build/doc/pgRouting-concepts.rst:309
#: ../../build/doc/flow-family.rst:9
#: ../../build/doc/flow-family.rst:9
#: ../../build/doc/pgRouting-concepts.rst:386
#: ../../build/doc/flow-family.rst:8
msgid "**source**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:226
#: ../../build/doc/pgRouting-concepts.rst:255
#: ../../build/doc/pgRouting-concepts.rst:309
#: ../../build/doc/flow-family.rst:9
#: ../../build/doc/flow-family.rst:9
#: ../../build/doc/pgRouting-concepts.rst:386
#: ../../build/doc/flow-family.rst:8
#: ../../build/doc/flow-family.rst:8
msgid "Identifier of the first end point vertex of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:227
#: ../../build/doc/pgRouting-concepts.rst:256
#: ../../build/doc/pgRouting-concepts.rst:310
#: ../../build/doc/flow-family.rst:10
#: ../../build/doc/flow-family.rst:10
#: ../../build/doc/pgRouting-concepts.rst:387
#: ../../build/doc/flow-family.rst:9
msgid "**target**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:227
#: ../../build/doc/pgRouting-concepts.rst:256
#: ../../build/doc/pgRouting-concepts.rst:310
#: ../../build/doc/flow-family.rst:10
#: ../../build/doc/flow-family.rst:10
#: ../../build/doc/pgRouting-concepts.rst:387
#: ../../build/doc/flow-family.rst:9
#: ../../build/doc/flow-family.rst:9
msgid "Identifier of the second end point vertex of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:228
#: ../../build/doc/pgRouting-concepts.rst:257
#: ../../build/doc/pgRouting-concepts.rst:311
#: ../../build/doc/flow-family.rst:17
#: ../../build/doc/pgRouting-concepts.rst:434
#: ../../build/doc/pgRouting-concepts.rst:469
#: ../../build/doc/flow-family.rst:12
msgid "**cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:228
#: ../../build/doc/pgRouting-concepts.rst:232
#: ../../build/doc/pgRouting-concepts.rst:257
#: ../../build/doc/pgRouting-concepts.rst:261
#: ../../build/doc/pgRouting-concepts.rst:311
#: ../../build/doc/pgRouting-concepts.rst:315
#: ../../build/doc/pgRouting-concepts.rst:319
#: ../../build/doc/pgRouting-concepts.rst:320
#: ../../build/doc/pgRouting-concepts.rst:321
#: ../../build/doc/pgRouting-concepts.rst:322
#: ../../build/doc/flow-family.rst:17
#: ../../build/doc/flow-family.rst:18
#: ../../build/doc/pgRouting-concepts.rst:362
msgid "``ANY-NUMERICAL``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:228
#: ../../build/doc/pgRouting-concepts.rst:257
#: ../../build/doc/pgRouting-concepts.rst:311
#: ../../build/doc/flow-family.rst:11
msgid "Weight of the edge  `(source, target)`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:230
#: ../../build/doc/pgRouting-concepts.rst:259
#: ../../build/doc/pgRouting-concepts.rst:313
#: ../../build/doc/flow-family.rst:13
#: ../../build/doc/flow-family.rst:13
msgid "When negative: edge `(source, target)` does not exist, therefore it's not part of the graph."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:232
#: ../../build/doc/pgRouting-concepts.rst:261
#: ../../build/doc/pgRouting-concepts.rst:315
#: ../../build/doc/flow-family.rst:18
msgid "**reverse_cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:232
#: ../../build/doc/pgRouting-concepts.rst:261
#: ../../build/doc/pgRouting-concepts.rst:315
#: ../../build/doc/flow-family.rst:15
#: ../../build/doc/flow-family.rst:14
msgid "-1"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:232
#: ../../build/doc/pgRouting-concepts.rst:261
#: ../../build/doc/pgRouting-concepts.rst:315
#: ../../build/doc/flow-family.rst:15
msgid "Weight of the edge `(target, source)`,"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:234
#: ../../build/doc/pgRouting-concepts.rst:263
#: ../../build/doc/pgRouting-concepts.rst:317
#: ../../build/doc/flow-family.rst:17
#: ../../build/doc/flow-family.rst:16
msgid "When negative: edge `(target, source)` does not exist, therefore it's not part of the graph."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:249
msgid "Description of the edges_sql query (id is not necessary)"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
msgid "edges_sql"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:250
#: ../../build/doc/pgRouting-concepts.rst:303
#: ../../build/doc/pgRouting-concepts.rst:351
msgid "an SQL query, which should return a set of rows with the following columns:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:279
msgid "Parameters"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:282
msgid "Parameter"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:284
msgid "**edges_sql**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:284
msgid "``TEXT``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:284
msgid "SQL query as described above."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:285
msgid "**via_vertices**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:285
msgid "``ARRAY[ANY-INTEGER]``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:285
msgid "Array of ordered vertices identifiers that are going to be visited."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:286
msgid "**directed**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:286
#: ../../build/doc/pgRouting-concepts.rst:288
#: ../../build/doc/pgRouting-concepts.rst:290
msgid "``BOOLEAN``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:286
#: ../../build/doc/pgRouting-concepts.rst:290
msgid "``true``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:286
msgid "When ``true`` Graph is considered `Directed`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:287
msgid "When ``false`` the graph is considered as Undirected."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:288
msgid "**strict**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:288
msgid "``false``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:288
msgid "When ``false`` ignores missing paths returning all paths found"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:289
msgid "When ``true`` if a path is missing stops and returns `EMPTY SET`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:290
msgid "**U_turn_on_edge**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:290
msgid "When ``true`` departing from a visited vertex will not try to avoid using the edge used to reach it.  In other words, U turn using the edge with same `id` is allowed."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:291
msgid "When ``false`` when a departing from a visited vertex tries to avoid using the edge used to reach it.  In other words, U turn using the edge with same `id` is used when no other path is found."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:299
msgid "edges_sql query for :doc:`aStar-family` and :doc:`aStar-family` functions"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:319
msgid "**x1**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:319
msgid "X coordinate of `source` vertex."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:320
msgid "**y1**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:320
msgid "Y coordinate of `source` vertex."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:321
msgid "**x2**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:321
msgid "X coordinate of `target` vertex."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:322
msgid "**y2**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:322
msgid "Y coordinate of `target` vertex."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:335
#: ../../build/doc/pgRouting-concepts.rst:499
msgid "For :doc:`pgr_pushRelabel <pgr_pushRelabel>`, :doc:`pgr_edmondsKarp <pgr_edmondsKarp>`, :doc:`pgr_boykovKolmogorov <pgr_boykovKolmogorov>` :"
msgstr ""

#: ../../build/doc/flow-family.rst:0
#: ../../build/doc/flow-family.rst:0
msgid "Edges SQL"
msgstr ""

#: ../../build/doc/flow-family.rst:3
#: ../../build/doc/flow-family.rst:3
msgid "an SQL query of a directed graph of capacities, which should return a set of rows with the following columns:"
msgstr ""

#: ../../build/doc/flow-family.rst:11
#: ../../build/doc/flow-family.rst:11
msgid "**capacity**"
msgstr ""

#: ../../build/doc/flow-family.rst:15
#: ../../build/doc/flow-family.rst:14
msgid "**reverse_capacity**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:341
msgid "For :doc:`pgr_maxFlowMinCost` and :doc:`pgr_maxFlowMinCost_Cost`:"
msgstr ""

#: ../../build/doc/flow-family.rst:11
msgid "Capacity of the edge  `(source, target)`"
msgstr ""

#: ../../build/doc/flow-family.rst:14
msgid "Capacity of the edge `(target, source)`,"
msgstr ""

#: ../../build/doc/flow-family.rst:17
msgid "Weight of the edge  `(source, target)` if it exists."
msgstr ""

#: ../../build/doc/flow-family.rst:18
msgid "0"
msgstr ""

#: ../../build/doc/flow-family.rst:18
msgid "Weight of the edge `(target, source)` if it exists."
msgstr ""

#: ../../build/doc/flow-family.rst:24
#: ../../build/doc/pgRouting-concepts.rst:374
msgid "smallint, int, bigint, real, float"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:350
msgid "Description of the Points SQL query"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
msgid "points_sql"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:356
msgid "**pid**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:356
msgid "(optional) Identifier of the point."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:358
msgid "If column present, it can not be NULL."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:359
msgid "If column not present, a sequential identifier will be given automatically."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:361
msgid "**edge_id**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:361
msgid "Identifier of the \"closest\" edge to the point."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:362
msgid "**fraction**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:362
msgid "Value in <0,1> that indicates the relative postition from the first end point of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:363
msgid "**side**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:363
msgid "``CHAR``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:363
msgid "(optional) Value in ['b', 'r', 'l', NULL] indicating if the point is:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:365
msgid "In the right, left of the edge or"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:366
msgid "If it doesn't matter with 'b' or NULL."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:367
msgid "If column not present 'b' is considered."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:373
msgid "smallint, int, bigint"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:379
msgid "Description of the combinations_sql query for dijkstra like functions"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:401
msgid "Return columns & values"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:406
msgid "There are several kinds of columns returned are depending of the function."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:409
msgid "Return values for a path"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:413
msgid "Returns set of ``(seq, path_seq [, start_vid] [, end_vid], node, edge, cost, agg_cost)``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:418
#: ../../build/doc/pgRouting-concepts.rst:451
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/flow-family.rst:6
msgid "**seq**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:418
#: ../../build/doc/pgRouting-concepts.rst:419
#: ../../build/doc/pgRouting-concepts.rst:451
#: ../../build/doc/pgRouting-concepts.rst:452
#: ../../build/doc/pgRouting-concepts.rst:453
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/flow-family.rst:6
msgid "``INT``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:418
#: ../../build/doc/pgRouting-concepts.rst:451
#: ../../build/doc/flow-family.rst:6
#: ../../build/doc/flow-family.rst:6
msgid "Sequential value starting from **1**."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:419
#: ../../build/doc/pgRouting-concepts.rst:453
msgid "**path_seq**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:419
#: ../../build/doc/pgRouting-concepts.rst:453
msgid "Relative position in the path. Has value **1** for the beginning of a path."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:420
#: ../../build/doc/pgRouting-concepts.rst:454
#: ../../build/doc/pgRouting-concepts.rst:486
#: ../../build/doc/flow-family.rst:8
msgid "**start_vid**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:420
#: ../../build/doc/pgRouting-concepts.rst:426
#: ../../build/doc/pgRouting-concepts.rst:432
#: ../../build/doc/pgRouting-concepts.rst:433
#: ../../build/doc/pgRouting-concepts.rst:454
#: ../../build/doc/pgRouting-concepts.rst:461
#: ../../build/doc/pgRouting-concepts.rst:467
#: ../../build/doc/pgRouting-concepts.rst:468
#: ../../build/doc/pgRouting-concepts.rst:486
#: ../../build/doc/pgRouting-concepts.rst:487
#: ../../build/doc/flow-family.rst:7
#: ../../build/doc/flow-family.rst:8
#: ../../build/doc/flow-family.rst:9
#: ../../build/doc/flow-family.rst:10
#: ../../build/doc/flow-family.rst:11
#: ../../build/doc/flow-family.rst:7
#: ../../build/doc/flow-family.rst:8
#: ../../build/doc/flow-family.rst:9
#: ../../build/doc/flow-family.rst:10
#: ../../build/doc/flow-family.rst:11
msgid "``BIGINT``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:420
#: ../../build/doc/pgRouting-concepts.rst:454
msgid "Identifier of the starting vertex. Returned when multiple starting vetrices are in the query."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:426
#: ../../build/doc/pgRouting-concepts.rst:461
#: ../../build/doc/pgRouting-concepts.rst:487
#: ../../build/doc/flow-family.rst:9
msgid "**end_vid**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:426
#: ../../build/doc/pgRouting-concepts.rst:461
msgid "Identifier of the ending vertex. Returned when multiple ending vertices are in the query."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:432
#: ../../build/doc/pgRouting-concepts.rst:467
msgid "**node**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:432
#: ../../build/doc/pgRouting-concepts.rst:467
msgid "Identifier of the node in the path from ``start_vid`` to ``end_vid``."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:433
#: ../../build/doc/pgRouting-concepts.rst:468
#: ../../build/doc/flow-family.rst:7
#: ../../build/doc/flow-family.rst:7
msgid "**edge**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:433
#: ../../build/doc/pgRouting-concepts.rst:468
msgid "Identifier of the edge used to go from ``node`` to the next node in the path sequence. ``-1`` for the last node of the path."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:434
#: ../../build/doc/pgRouting-concepts.rst:435
#: ../../build/doc/pgRouting-concepts.rst:469
#: ../../build/doc/pgRouting-concepts.rst:470
#: ../../build/doc/pgRouting-concepts.rst:488
#: ../../build/doc/flow-family.rst:12
#: ../../build/doc/flow-family.rst:13
msgid "``FLOAT``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:434
#: ../../build/doc/pgRouting-concepts.rst:469
msgid "Cost to traverse from ``node`` using ``edge`` to the next node in the path sequence."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:435
#: ../../build/doc/pgRouting-concepts.rst:470
#: ../../build/doc/pgRouting-concepts.rst:488
#: ../../build/doc/flow-family.rst:13
msgid "**agg_cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:435
#: ../../build/doc/pgRouting-concepts.rst:470
msgid "Aggregate cost from ``start_v`` to ``node``."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:442
msgid "Return values for multiple paths from the same source and destination"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:446
msgid "Returns set of ``(seq, path_id, path_seq [, start_vid] [, end_vid], node, edge, cost, agg_cost)``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:452
msgid "**path_id**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:452
msgid "Path identifier. Has value **1** for the first of a path. Used when there are multiple paths for the same ``start_vid`` to ``end_vid`` combination."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:477
msgid "Description of the return values for a :doc:`costMatrix-category` function"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:481
msgid "Returns SET OF ``(start_vid, end_vid, agg_cost)``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:486
msgid "Identifier of the starting vertex. Used when multiple starting vetrices are in the query."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:487
msgid "Identifier of the ending vertex. Used when multiple ending vertices are in the query."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:488
msgid "Aggregate cost from ``start_vid`` to ``end_vid``."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:496
msgid "Description of the Return Values"
msgstr ""

#: ../../build/doc/flow-family.rst:7
#: ../../build/doc/flow-family.rst:7
msgid "Identifier of the edge in the original query(edges_sql)."
msgstr ""

#: ../../build/doc/flow-family.rst:10
#: ../../build/doc/flow-family.rst:10
msgid "**flow**"
msgstr ""

#: ../../build/doc/flow-family.rst:10
msgid "Flow through the edge in the direction (``start_vid``, ``end_vid``)."
msgstr ""

#: ../../build/doc/flow-family.rst:11
#: ../../build/doc/flow-family.rst:11
msgid "**residual_capacity**"
msgstr ""

#: ../../build/doc/flow-family.rst:11
msgid "Residual capacity of the edge in the direction (``start_vid``, ``end_vid``)."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:505
msgid "For :doc:`pgr_maxFlowMinCost`"
msgstr ""

#: ../../build/doc/flow-family.rst:10
msgid "Flow through the edge in the direction (source, target)."
msgstr ""

#: ../../build/doc/flow-family.rst:11
msgid "Residual capacity of the edge in the direction (source, target)."
msgstr ""

#: ../../build/doc/flow-family.rst:12
msgid "The cost of sending this flow through the edge in the direction (source, target)."
msgstr ""

#: ../../build/doc/flow-family.rst:13
msgid "The aggregate cost."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:514
msgid "Advanced Topics"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:522
msgid "Routing Topology"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:526
#: ../../build/doc/pgRouting-concepts.rst:627
msgid "Overview"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:527
msgid "Typically when GIS files are loaded into the data database for use with pgRouting they do not have topology information associated with them. To create a useful topology the data needs to be \"noded\". This means that where two or more roads form an intersection there it needs to be a node at the intersection and all the road segments need to be broken at the intersection, assuming that you can navigate from any of these segments to any other segment via that intersection."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:529
msgid "You can use the :ref:`graph analysis functions <analytics>` to help you see where you might have topology problems in your data. If you need to node your data, we also have a function :doc:`pgr_nodeNetwork() <pgr_nodeNetwork>` that might work for you. This function splits ALL crossing segments and nodes them. There are some cases where this might NOT be the right thing to do."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:531
msgid "For example, when you have an overpass and underpass intersection, you do not want these noded, but pgr_nodeNetwork does not know that is the case and will node them which is not good because then the router will be able to turn off the overpass onto the underpass like it was a flat 2D intersection. To deal with this problem some data sets use z-levels at these types of intersections and other data might not node these intersection which would be ok."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:533
msgid "For those cases where topology needs to be added the following functions may be useful. One way to prep the data for pgRouting is to add the following columns to your table and then populate them as appropriate. This example makes a lot of assumption like that you original data tables already has certain columns in it like ``one_way``, ``fcc``, and possibly others and that they contain specific data values. This is only to give you an idea of what you can do with your data."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:554
msgid "The function :doc:`pgr_createTopology <pgr_createTopology>` will create the ``vertices_tmp`` table and populate the ``source`` and ``target`` columns. The following example populated the remaining columns. In this example, the ``fcc`` column contains feature class code and the ``CASE`` statements converts it to an average speed."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:617
msgid "Now your database should be ready to use any (most?) of the pgRouting algorithms."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:623
msgid "Graph Analytics"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:628
msgid "It is common to find problems with graphs that have not been constructed fully noded or in graphs with z-levels at intersection that have been entered incorrectly. An other problem is one way streets that have been entered in the wrong direction. We can not detect errors with respect to \"ground\" truth, but we can look for inconsistencies and some anomalies in a graph and report them for additional inspections."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:630
msgid "We do not current have any visualization tools for these problems, but I have used mapserver to render the graph and highlight potential problem areas. Someone familiar with graphviz might contribute tools for generating images with that."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:634
msgid "Analyze a Graph"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:636
msgid "With :doc:`pgr_analyzeGraph` the graph can be checked for errors. For example for table \"mytab\" that has \"mytab_vertices_pgr\" as the vertices table:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:659
msgid "In the vertices table \"mytab_vertices_pgr\":"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:661
msgid "Deadends are identified by ``cnt=1``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:662
msgid "Potencial gap problems are identified with ``chk=1``."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:680
msgid "For isolated road segments, for example, a segment where both ends are deadends. you can find these with the following query:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:689
msgid "If you want to visualize these on a graphic image, then you can use something like mapserver to render the edges and the vertices and style based on ``cnt`` or if they are isolated, etc. You can also do this with a tool like graphviz, or geoserver or other similar tools."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:693
msgid "Analyze One Way Streets"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:695
msgid ":doc:`pgr_analyzeOneWay` analyzes one way streets in a graph and identifies any flipped segments. Basically if you count the edges coming into a node and the edges exiting a node the number has to be greater than one."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:697
msgid "This query will add two columns to the vertices_tmp table ``ein int`` and ``eout int`` and populate it with the appropriate counts. After running this on a graph you can identify nodes with potential problems with the following query."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:700
msgid "The rules are defined as an array of text strings that if match the ``col`` value would be counted as true for the source or target in or out condition."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:704
msgid "Example"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:706
msgid "Lets assume we have a table \"st\" of edges and a column \"one_way\" that might have values like:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:708
msgid "'FT'    - oneway from the source to the target node."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:709
msgid "'TF'    - oneway from the target to the source node."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:710
msgid "'B'     - two way street."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:711
msgid "''      - empty field, assume twoway."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:712
msgid "<NULL>  - NULL field, use two_way_if_null flag."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:714
msgid "Then we could form the following query to analyze the oneway streets for errors."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:733
msgid "Typically these problems are generated by a break in the network, the one way direction set wrong, maybe an error related to z-levels or a network that is not properly noded."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:735
msgid "The above tools do not detect all network issues, but they will identify some common problems. There are other problems that are hard to detect because they are more global in nature like multiple disconnected networks. Think of an island with a road network that is not connected to the mainland network because the bridge or ferry routes are missing."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:743
msgid "Performance Tips"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:750
msgid "For the Routing functions"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:752
msgid "To get faster results bound your queries to the area of interest of routing to have, for example, no more than one million rows."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:754
msgid "Use an inner query SQL that does not include some edges in the routing function"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:762
msgid "Integrating the inner query to the pgRouting function:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:776
msgid "For the topology functions:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:778
msgid "When \"you know\" that you are going to remove a set of edges from the edges table, and without those edges you are going to use a routing function you can do the following:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:780
msgid "Analize the new topology based on the actual topology:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:786
msgid "Or create a new topology if the change is permanent:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:797
msgid "How to contribute"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:800
msgid "Wiki"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:801
msgid "Edit an existing  `pgRouting Wiki <https://github.com/pgRouting/pgrouting/wiki>`_ page."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:802
msgid "Or create a new Wiki page"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:804
msgid "Create a page on the `pgRouting Wiki <https://github.com/pgRouting/pgrouting/wiki>`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:805
msgid "Give the title an appropriate name"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:808
msgid "`Example <https://github.com/pgRouting/pgrouting/wiki/How-to:-Handle-parallel-edges-(KSP)>`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:812
msgid "Adding Functionaity to pgRouting"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:813
msgid "Consult the `developer's documentation <https://docs.pgrouting.org/doxy/2.4/index.html>`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:818
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:819
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:820
msgid ":ref:`search`"
msgstr ""

