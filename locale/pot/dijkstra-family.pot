# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.3.2
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-04 17:31-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/doc/dijkstra-family.rst:12
msgid "**Supported versions:** `Latest <https://docs.pgrouting.org/latest/en/dijkstra-family.html>`__ (`3.3 <https://docs.pgrouting.org/3.3/en/dijkstra-family.html>`__) `3.2 <https://docs.pgrouting.org/3.2/en/dijkstra-family.html>`__ `3.1 <https://docs.pgrouting.org/3.1/en/dijkstra-family.html>`__ `3.0 <https://docs.pgrouting.org/3.0/en/dijkstra-family.html>`__"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:18
msgid "**Unsupported versions:** `2.6 <https://docs.pgrouting.org/2.6/en/dijkstra-family.html>`__ `2.5 <https://docs.pgrouting.org/2.5/en/dijkstra-family.html>`__ `2.4 <https://docs.pgrouting.org/2.4/en/dijkstra-family.html>`__ `2.3 <https://docs.pgrouting.org/2.3/en/src/dijkstra/doc/dijkstra.html>`__ `2.2 <https://docs.pgrouting.org/2.2/en/src/dijkstra/doc/dijkstra.html>`__"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:26
msgid "Dijkstra - Family of functions"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:30
msgid ":doc:`pgr_dijkstra` - Dijkstra's algorithm for the shortest paths."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:31
msgid ":doc:`pgr_dijkstraCost` - Get the aggregate cost of the shortest paths."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:32
msgid ":doc:`pgr_dijkstraCostMatrix` - Use pgr_dijkstra to create a costs matrix."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:33
msgid ":doc:`pgr_drivingDistance` - Use pgr_dijkstra to calculate catchament information."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:35
msgid ":doc:`pgr_KSP` - Use Yen algorithm with pgr_dijkstra to get the K shortest paths."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:41
msgid "Proposed"
msgstr ""

#: ../../build/doc/proposed.rst:3
msgid "Proposed functions for next mayor release."
msgstr ""

#: ../../build/doc/proposed.rst:5
msgid "They are not officially in the current release."
msgstr ""

#: ../../build/doc/proposed.rst:6
msgid "They will likely officially be part of the next mayor release:"
msgstr ""

#: ../../build/doc/proposed.rst:8
msgid "The functions make use of ANY-INTEGER and ANY-NUMERICAL"
msgstr ""

#: ../../build/doc/proposed.rst:9
msgid "Name might not change. (But still can)"
msgstr ""

#: ../../build/doc/proposed.rst:10
msgid "Signature might not change. (But still can)"
msgstr ""

#: ../../build/doc/proposed.rst:11
msgid "Functionality might not change. (But still can)"
msgstr ""

#: ../../build/doc/proposed.rst:12
msgid "pgTap tests have being done. But might need more."
msgstr ""

#: ../../build/doc/proposed.rst:13
msgid "Documentation might need refinement."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:49
msgid ":doc:`pgr_dijkstraVia` - Get a route of a seuence of vertices."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:50
msgid ":doc:`pgr_dijkstraNear` - Get the route to the nearest vertex."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:51
msgid ":doc:`pgr_dijkstraNearCost` - Get the cost to the nearest vertex."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:68
msgid "Introduction"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:72
msgid "Dijkstra's algorithm, conceived by Dutch computer scientist Edsger Dijkstra in 1956. It is a graph search algorithm that solves the shortest path problem for a graph with non-negative edge path costs, producing a shortest path from a starting vertex to an ending vertex. This implementation can be used with a directed graph and an undirected graph."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:81
msgid "The main characteristics are:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:85
msgid "Process is done only on edges with positive costs."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:87
msgid "A negative value on a cost column is interpreted as the edge does not exist."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:89
msgid "Values are returned when there is a path."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:90
msgid "When there is no path:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:92
msgid "When the starting vertex and ending vertex are the same."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:94
msgid "The **aggregate cost** of the non included values :math:`(v, v)` is :math:`0`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:97
msgid "When the starting vertex and ending vertex are the different and there is no path:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:100
msgid "The **aggregate cost** the non included values :math:`(u, v)` is :math:`\\infty`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:103
msgid "For optimization purposes, any duplicated value in the starting vertices or on the ending vertices are ignored."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:106
msgid "Running time: :math:`O(| start\\ vids | * (V \\log V + E))`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:110
msgid "The Dijkstra family functions are based on the Dijkstra algorithm."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:113
msgid "Parameters"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:122
#: ../../build/doc/dijkstra-family.rst:156
#: ../../build/doc/pgRouting-concepts.rst:8
msgid "Column"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:123
#: ../../build/doc/dijkstra-family.rst:157
#: ../../build/doc/pgRouting-concepts.rst:9
#: ../../build/doc/pgRouting-concepts.rst:9
msgid "Type"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:124
#: ../../build/doc/dijkstra-family.rst:159
#: ../../build/doc/pgRouting-concepts.rst:11
#: ../../build/doc/pgRouting-concepts.rst:10
msgid "Description"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:125
msgid "`Edges SQL`_"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:126
#: ../../build/doc/dijkstra-family.rst:129
msgid "``TEXT``"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:127
msgid "`Edges SQL`_ as described below"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:128
msgid "`Combinations SQL`_"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:130
msgid "`Combinations SQL`_ as described below"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:131
msgid "**start vid**"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:132
#: ../../build/doc/dijkstra-family.rst:138
msgid "``BIGINT``"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:133
msgid "Identifier of the starting vertex of the path."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:134
msgid "**start vids**"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:135
#: ../../build/doc/dijkstra-family.rst:141
msgid "``ARRAY[BIGINT]``"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:136
msgid "Array of identifiers of starting vertices."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:137
msgid "**end vid**"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:139
msgid "Identifier of the ending vertex of the path."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:140
msgid "**end vids**"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:142
msgid "Array of identifiers of ending vertices."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:147
msgid "Optional parameters"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:158
#: ../../build/doc/pgRouting-concepts.rst:10
msgid "Default"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:160
msgid "``directed``"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:161
msgid "``BOOLEAN``"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:162
msgid "``true``"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:163
msgid "When ``true`` the graph is considered `Directed`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:164
msgid "When ``false`` the graph is considered as `Undirected`."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:169
msgid "Inner Queries"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:172
msgid "Edges SQL"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:12
msgid "``id``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
#: ../../build/doc/pgRouting-concepts.rst:17
#: ../../build/doc/pgRouting-concepts.rst:21
#: ../../build/doc/pgRouting-concepts.rst:12
#: ../../build/doc/pgRouting-concepts.rst:15
msgid "**ANY-INTEGER**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:15
msgid "Identifier of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:16
#: ../../build/doc/pgRouting-concepts.rst:11
msgid "``source``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:19
msgid "Identifier of the first end point vertex of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:20
#: ../../build/doc/pgRouting-concepts.rst:14
msgid "``target``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:23
msgid "Identifier of the second end point vertex of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:24
msgid "``cost``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:25
#: ../../build/doc/pgRouting-concepts.rst:29
msgid "**ANY-NUMERICAL**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:27
msgid "Weight of the edge (``source``, ``target``)"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:28
msgid "``reverse_cost``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:30
msgid "-1"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:31
msgid "Weight of the edge (``target``, ``source``)"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:33
msgid "When negative: edge (``target``, ``source``) does not exist, therefore it's not part of the graph."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:36
#: ../../build/doc/pgRouting-concepts.rst:18
msgid "Where:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
msgid "ANY-INTEGER"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:38
#: ../../build/doc/pgRouting-concepts.rst:20
msgid "``SMALLINT``, ``INTEGER``, ``BIGINT``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
msgid "ANY-NUMERICAL"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:39
msgid "``SMALLINT``, ``INTEGER``, ``BIGINT``, ``REAL``, ``FLOAT``"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:179
msgid "Combinations SQL"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
msgid "Parameter"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "Identifier of the departure vertex."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:16
msgid "Identifier of the arrival vertex."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:186
msgid "Advanced documentation"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:189
msgid "The problem definition (Advanced documentation)"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:191
msgid "Given the following query:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:193
msgid "pgr_dijkstra(:math:`sql, start_{vid}, end_{vid}, directed`)"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:195
msgid "where  :math:`sql = \\{(id_i, source_i, target_i, cost_i, reverse\\_cost_i)\\}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:197
msgid "and"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:199
msgid ":math:`source = \\bigcup source_i`,"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:200
msgid ":math:`target = \\bigcup target_i`,"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:202
msgid "The graphs are defined as follows:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:205
msgid "Directed graph"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:206
msgid "The weighted directed graph, :math:`G_d(V,E)`, is definied by:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:208
#: ../../build/doc/dijkstra-family.rst:227
msgid "the set of vertices  :math:`V`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:210
msgid ":math:`V = source \\cup target \\cup {start_{vid}} \\cup  {end_{vid}}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:212
#: ../../build/doc/dijkstra-family.rst:232
msgid "the set of edges :math:`E`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:214
msgid ":math:`E = \\begin{cases} \\text{ }  \\{(source_i, target_i, cost_i) \\text{ when } cost >=0 \\} & \\quad \\text{if } reverse\\_cost = \\varnothing \\\\ \\text{ }  \\text{ }  & \\quad \\text{ } \\\\ \\text{ }  \\{(source_i, target_i, cost_i) \\text{ when } cost >=0 \\} &  \\quad \\text{ } \\\\ \\cup      \\{(target_i, source_i, reverse\\_cost_i) \\text{ when } reverse\\_cost_i>=0 \\} & \\quad \\text{if } reverse\\_cost \\neq \\varnothing \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:224
msgid "Undirected graph"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:225
msgid "The weighted undirected graph, :math:`G_u(V,E)`, is definied by:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:229
msgid ":math:`V = source \\cup target \\cup {start_v{vid}} \\cup  {end_{vid}}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:234
msgid ":math:`E = \\begin{cases} \\text{ }  \\{(source_i, target_i, cost_i) \\text{ when } cost >=0 \\}  & \\quad \\text{ } \\\\ \\cup      \\{(target_i, source_i, cost_i) \\text{ when } cost >=0 \\}  & \\quad \\text{ if } reverse\\_cost = \\varnothing \\\\ \\text{ }  \\text{ }  & \\text{ } \\\\ \\text{ }  \\{(source_i, target_i, cost_i) \\text{ when } cost >=0 \\} & \\text{ } \\\\ \\cup  \\{(target_i, source_i, cost_i) \\text{ when } cost >=0 \\} & \\text{ } \\\\ \\cup  \\{(target_i, source_i, reverse\\_cost_i) \\text{ when } reverse\\_cost_i >=0)\\} & \\text{ } \\\\ \\cup  \\{(source_i, target_i, reverse\\_cost_i) \\text{ when } reverse\\_cost_i >=0)\\} & \\quad \\text{ if } reverse\\_cost \\neq \\varnothing \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:247
msgid "The problem"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:248
msgid "Given:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:250
msgid ":math:`start_{vid} \\in V` a starting vertex"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:251
msgid ":math:`end_{vid} \\in V` an ending vertex"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:252
msgid ":math:`G(V,E) = \\begin{cases} G_d(V,E) & \\quad \\text{ if6 } directed = true \\\\ G_u(V,E) & \\quad \\text{ if5 } directed = false \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:257
msgid "Then:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:266
msgid ":math:`\\boldsymbol{\\pi} = \\{(path\\_seq_i, node_i, edge_i, cost_i, agg\\_cost_i)\\}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:279
msgid "where:"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:269
msgid ":math:`path\\_seq_i = i`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:270
msgid ":math:`path\\_seq_{| \\pi |} = | \\pi |`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:271
msgid ":math:`node_i \\in V`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:272
msgid ":math:`node_1 = start_{vid}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:273
msgid ":math:`node_{| \\pi |}  = end_{vid}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:274
msgid ":math:`\\forall i \\neq | \\pi |, \\quad (node_i, node_{i+1}, cost_i) \\in E`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:275
msgid ":math:`edge_i  = \\begin{cases}  id_{(node_i, node_{i+1},cost_i)}  &\\quad  \\text{when } i \\neq | \\pi | \\\\ -1 &\\quad  \\text{when } i = | \\pi | \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:276
msgid ":math:`cost_i = cost_{(node_i, node_{i+1})}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:277
msgid ":math:`agg\\_cost_i  = \\begin{cases}  0   &\\quad  \\text{when } i = 1  \\\\ \\displaystyle\\sum_{k=1}^{i}  cost_{(node_{k-1}, node_k)}  &\\quad  \\text{when } i \\neq 1 \\\\ \\end{cases}`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:281
msgid "In other words: The algorithm returns a the shortest path between :math:`start_{vid}` and :math:`end_{vid}`, if it exists, in terms of a sequence of nodes  and of edges,"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:285
msgid ":math:`path\\_seq` indicates the relative position in the path of the :math:`node` or :math:`edge`."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:287
msgid ":math:`cost` is the cost of the edge to be used to go to the next node."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:288
msgid ":math:`agg\\_cost` is the cost from the :math:`start_{vid}` up to the node."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:291
msgid "If there is no path, the resulting set is empty."
msgstr ""

#: ../../build/doc/dijkstra-family.rst:295
msgid "See Also"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:298
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:299
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/dijkstra-family.rst:300
msgid ":ref:`search`"
msgstr ""
