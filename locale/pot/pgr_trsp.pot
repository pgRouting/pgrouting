# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.1.0
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-22 08:19-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/doc/pgr_trsp.rst:11
msgid "pgr_trsp - Turn Restriction Shortest Path (TRSP)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:19
msgid "``pgr_trsp`` â€” Returns the shortest path with support for turn restrictions."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:22
msgid "Availability"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:23
msgid "Version 2.1.0"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:25
msgid "New *Via* **prototypes**"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:27
msgid "pgr_trspViaVertices"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:28
msgid "pgr_trspViaEdges"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:30
msgid "Version 2.0.0"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:32
msgid "**Official** function"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:35
msgid "Support"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:36
msgid "**Supported versions:** current(`3.1 <https://docs.pgrouting.org/3.1/en/pgr_trsp.html>`__) `3.0 <https://docs.pgrouting.org/3.0/en/pgr_trsp.html>`__"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:40
msgid "**Unsupported versions:** `2.6 <https://docs.pgrouting.org/2.6/en/pgr_trsp.html>`__ `2.5 <https://docs.pgrouting.org/2.5/en/pgr_trsp.html>`__ `2.4 <https://docs.pgrouting.org/2.4/en/pgr_trsp.html>`__ `2.3 <https://docs.pgrouting.org/2.3/en/src/trsp/doc/pgr_trsp.html>`__ `2.2 <https://docs.pgrouting.org/2.2/en/src/trsp/doc/pgr_trsp.html>`__ `2.1 <https://docs.pgrouting.org/2.1/en/src/trsp/doc/index.html>`__ `2.0 <https://docs.pgrouting.org/2.0/en/src/trsp/doc/index.html>`__"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:51
msgid "Description"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:53
msgid "The turn restricted shorthest path (TRSP) is a shortest path algorithm that can optionally take into account complicated turn restrictions like those found in real world navigable road networks. Performamnce wise it is nearly as fast as the A* search but has many additional features like it works with edges rather than the nodes of the network. Returns a set of (seq, id1, id2, cost) or (seq, id1, id2, id3, cost) rows, that make up a path."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:83
msgid "**The main characteristics are:**"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:85
msgid "The Turn Restricted Shortest Path algorithm (TRSP) is similar to the shooting star in that you can specify turn restrictions."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:87
msgid "The TRSP setup is mostly the same as :doc:`Dijkstra shortest path <pgr_dijkstra>` with the addition of an optional turn restriction table. This provides an easy way of adding turn restrictions to a road network by placing them in a separate table."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "sql"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:90
#: ../../build/doc/pgr_trsp.rst:140
msgid "a SQL query, which should return a set of rows with the following columns:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "id"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:97
#: ../../build/doc/pgr_trsp.rst:147
msgid "``int4`` identifier of the edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "source"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:98
#: ../../build/doc/pgr_trsp.rst:148
msgid "``int4`` identifier of the source vertex"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "target"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:99
#: ../../build/doc/pgr_trsp.rst:149
msgid "``int4`` identifier of the target vertex"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "cost"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:100
#: ../../build/doc/pgr_trsp.rst:150
msgid "``float8`` value, of the edge traversal cost. A negative cost will prevent the edge from being inserted in the graph."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "reverse_cost"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:101
#: ../../build/doc/pgr_trsp.rst:151
msgid "(optional) the cost for the reverse traversal of the edge. This is only used when the ``directed`` and ``has_rcost`` parameters are ``true`` (see the above remark about negative costs)."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:103
msgid "``int4`` **NODE id** of the start point"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:104
msgid "``int4`` **NODE id** of the end point"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "directed"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:105
#: ../../build/doc/pgr_trsp.rst:154
msgid "``true`` if the graph is directed"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "has_rcost"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:106
#: ../../build/doc/pgr_trsp.rst:155
msgid "if ``true``, the ``reverse_cost`` column of the SQL generated set of rows will be used for the cost of the traversal of the edge in the opposite direction."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "restrict_sql"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:108
#: ../../build/doc/pgr_trsp.rst:157
msgid "(optional) a SQL query, which should return a set of rows with the following columns:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "to_cost"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:114
#: ../../build/doc/pgr_trsp.rst:163
msgid "``float8`` turn restriction cost"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "target_id"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:115
#: ../../build/doc/pgr_trsp.rst:164
msgid "``int4`` target id"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "via_path"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:116
msgid "``text`` comma separated list of edges in the reverse order of ``rule``"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:118
msgid "Another variant of TRSP allows to specify **EDGE id** of source and target together with a fraction to interpolate the position:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
msgid "source_edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:120
msgid "``int4`` **EDGE id** of the start edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
msgid "source_pos"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:121
msgid "``float8`` fraction of 1 defines the position on the start edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
msgid "target_edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:122
msgid "``int4`` **EDGE id** of the end edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
msgid "target_pos"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:123
msgid "``float8`` fraction of 1 defines the position on the end edge"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:125
#: ../../build/doc/pgr_trsp.rst:172
msgid "Returns set of:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "seq"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:127
#: ../../build/doc/pgr_trsp.rst:174
msgid "row sequence"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "id1"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:128
#: ../../build/doc/pgr_trsp.rst:176
msgid "node ID"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "id2"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:129
#: ../../build/doc/pgr_trsp.rst:177
msgid "edge ID (``-1`` for the last row)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:130
msgid "cost to traverse from ``id1`` using ``id2``"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:133
msgid "Support for Vias"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:135
msgid "The Support for Vias functions are prototypes. Not all corner cases are being considered."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:138
msgid "We also have support for vias where you can say generate a from A to B to C, etc. We support both methods above only you pass an array of vertices or and array of edges and percentage position along the edge in two arrays."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
msgid "vids"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:153
msgid "``int4[]`` An ordered array of **NODE id** the path will go through from start to end."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:165
msgid "``text`` commar separated list of edges in the reverse order of ``rule``"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:167
msgid "Another variant of TRSP allows to specify **EDGE id** together with a fraction to interpolate the position:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
msgid "eids"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:169
msgid "``int4`` An ordered array of **EDGE id** that the path has to traverse"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
msgid "pcts"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:170
msgid "``float8`` An array of fractional positions along the respective edges in ``eids``, where 0.0 is the start of the edge and 1.0 is the end of the eadge."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:175
msgid "route ID"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
msgid "id3"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:178
msgid "cost to traverse from ``id2`` using ``id3``"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:181
msgid "Additional Examples"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:0
#: ../../build/doc/pgr_trsp.rst:0
msgid "Example"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:183
msgid "Without turn restrictions"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:189
msgid "With turn restrictions"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:191
msgid "Then a query with turn restrictions is created as:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:197
msgid "An example query using vertex ids and via points:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:203
msgid "An example query using edge ids and vias:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:209
msgid "The queries use the :doc:`sampledata` network."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:212
msgid "Known Issues"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:214
msgid "Introduction"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:215
msgid "pgr_trsp code has issues that are not being fixed yet, but as time passes and new functionality is added to pgRouting with wrappers to **hide** the issues, not to fix them."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:217
msgid "For clarity on the queries:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:219
msgid "_pgr_trsp (internal_function) is the original code"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:220
msgid "pgr_trsp (lower case) represents the wrapper calling the original code"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:221
msgid "pgr_TRSP (upper case) represents the wrapper calling the replacement function, depending on the function, it can be:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:223
msgid "pgr_dijkstra"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:224
msgid "pgr_dijkstraVia"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:225
msgid "pgr_withPoints"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:226
msgid "_pgr_withPointsVia (internal function)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:229
msgid "The restrictions"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:231
msgid "The restriction used in the examples does not have to do anything with the graph:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:233
msgid "No vertex has id: 25, 32 or 33"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:234
msgid "No edge has id: 25, 32 or 33"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:236
msgid "A restriction is assigned as:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:242
msgid "The back end code has that same restriction as follows"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:248
msgid "therefore the shortest path expected are as if there was no restriction involved"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:251
msgid "The \"Vertices\" signature version"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:259
#: ../../build/doc/pgr_trsp.rst:361
msgid "Different ways to represent 'no path found`"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:261
#: ../../build/doc/pgr_trsp.rst:363
msgid "Sometimes represents with EMPTY SET a no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:262
msgid "Sometimes represents with Error a no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:265
#: ../../build/doc/pgr_trsp.rst:367
msgid "Returning EMPTY SET to represent no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:270
msgid "pgr_trsp calls :doc:`pgr_dijkstra` when there are no restrictions which returns `EMPTY SET` when a path is not found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:278
#: ../../build/doc/pgr_trsp.rst:376
msgid "Throwing EXCEPTION to represent no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:283
#: ../../build/doc/pgr_trsp.rst:381
msgid "pgr_trsp use the original code when there are restrictions, even if they have nothing to do with the graph, which will throw an EXCEPTION to represent no path found."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:287
#: ../../build/doc/pgr_trsp.rst:413
msgid "Routing from/to same location"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:289
msgid "When routing from location :math:`1` to the same location :math:`1`, no path is needed to reach the destination, its already there. Therefore is expected to return an `EMPTY SET` or an `EXCEPTION` depending on the parameters"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:293
msgid "Sometimes represents with EMPTY SET no path found (expected)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:294
msgid "Sometimes represents with EXCEPTION no path found (expected)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:295
msgid "Sometimes finds a path (not expected)"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:298
msgid "Returning expected EMPTY SET to represent no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:303
msgid "``pgr_trsp`` calls :doc:`pgr_dijkstra` when there are no restrictions which returns the expected to return `EMPTY SET` to represent no path found."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:307
msgid "Returning expected EXCEPTION to represent no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:312
msgid "In this case ``pgr_trsp`` calls the original code when there are restrictions, even if they have nothing to do with the graph, in this case that code throws the expected EXCEPTION"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:316
msgid "Returning unexpected path"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:321
msgid "In this case ``pgr_trsp`` calls the original code when there are restrictions, even if they have nothing to do with the graph, in this case that code finds an unexpected path."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:326
#: ../../build/doc/pgr_trsp.rst:441
msgid "User contradictions"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:328
#: ../../build/doc/pgr_trsp.rst:443
msgid "``pgr_trsp`` unlike other pgRouting functions does not autodectect the existence of ``reverse_cost`` column. Therefor it has ``has_rcost`` parameter to check the existence of ``reverse_cost`` column. Contradictions happen:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:332
#: ../../build/doc/pgr_trsp.rst:447
msgid "When the reverse_cost is missing, and the flag `has_rcost` is set to true"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:333
#: ../../build/doc/pgr_trsp.rst:344
#: ../../build/doc/pgr_trsp.rst:448
#: ../../build/doc/pgr_trsp.rst:459
msgid "When the reverse_cost exists, and the flag `has_rcost` is set to false"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:336
#: ../../build/doc/pgr_trsp.rst:451
msgid "When the reverse_cost is missing, and the flag `has_rcost` is set to true."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:341
#: ../../build/doc/pgr_trsp.rst:456
msgid "An EXCEPTION is thrown."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:349
#: ../../build/doc/pgr_trsp.rst:464
msgid "The ``reverse_cost`` column will be effectively removed and will cost execution time"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:352
msgid "The \"Edges\" signature version"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:364
msgid "Sometimes represents with EXCEPTION a no path found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:372
msgid "pgr_trsp calls :doc:`pgr_withPoints` when there are no restrictions which returns `EMPTY SET` when a path is not found"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:385
msgid "Paths with equal number of vertices and edges"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:387
msgid "A path is made of `N` vertices and `N - 1` edges."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:389
msgid "Sometimes returns `N` vertices and `N - 1` edges."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:390
msgid "Sometimes returns `N - 1` vertices and `N - 1` edges."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:393
msgid "Returning `N` vertices and `N - 1` edges."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:398
msgid "pgr_trsp calls :doc:`pgr_withPoints` when there are no restrictions which returns the correct number of rows that will include all the vertices. The last row will have a ``-1`` on the edge column to indicate the edge number is invalidu for that row."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:404
msgid "Returning `N - 1` vertices and `N - 1` edges."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:409
msgid "pgr_trsp use the original code when there are restrictions, even if they have nothing to do with the graph, and will not return the last vertex of the path."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:415
msgid "When routing from the same edge and position to the same edge and position, no path is needed to reach the destination, its already there. Therefore is expected to return an `EMPTY SET` or an `EXCEPTION` depending on the parameters, non of which is happening."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:421
msgid "A path with 2 vertices and edge cost 0"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:426
msgid "pgr_trsp calls :doc:`pgr_withPoints` setting the first :math:`(edge, position)` with a differenct point id from the second :math:`(edge, position)` making them different points. But the cost using the edge, is :math:`0`."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:431
msgid "A path with 1 vertices and edge cost 0"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:436
msgid "pgr_trsp use the original code when there are restrictions, even if they have nothing to do with the graph, and will not have the row for the vertex :math:`-2`."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:467
msgid "Using a points of interest table"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:469
msgid "Given a set of points of interest:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:476
#: ../../build/doc/pgr_trsp.rst:508
msgid "Using pgr_trsp"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:481
msgid "On *pgr_trsp*, to be able to use the table information:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:483
msgid "Each parameter has to be extracted explicitly from the table"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:484
msgid "Regardles of the point pid original value"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:486
msgid "will always be -1 for the first point"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:487
msgid "will always be -2 for the second point"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:489
msgid "the row reaching point -2 will not be shown"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:492
#: ../../build/doc/pgr_trsp.rst:523
msgid "Using :doc:`pgr_withPoints`"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:497
#: ../../build/doc/pgr_trsp.rst:528
msgid "Suggestion: use :doc:`pgr_withPoints` when there are no turn restrictions:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:499
#: ../../build/doc/pgr_trsp.rst:531
msgid "Results are more complete"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:500
#: ../../build/doc/pgr_trsp.rst:532
msgid "Column names are meaningful"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:503
msgid "Routing from a vertex to a point"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:505
msgid "Solving a shortest path from vertex :math:`6` to pid 1 using a points of interest table"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:513
msgid "Vertex 6 is on edge 8 at 1 fraction"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:520
msgid "Vertex 6 is also edge 11 at 0 fraction"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:530
msgid "No need to choose where the vertex is located."
msgstr ""

#: ../../build/doc/pgr_trsp.rst:536
msgid "prototypes"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:538
msgid "``pgr_trspViaVertices`` and ``pgr_trspViaEdges`` were added to pgRouting as prototypes"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:540
msgid "These functions use the pgr_trsp functions inheriting all the problems mentioned above. When there are no restrictions and have a routing \"via\" problem with vertices:"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:543
msgid ":doc:`pgr_dijkstraVia`"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:548
msgid "See Also"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:551
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:552
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/pgr_trsp.rst:553
msgid ":ref:`search`"
msgstr ""

