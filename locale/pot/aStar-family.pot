# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.1.0
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-17 10:14-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/doc/aStar-family.rst:11
msgid "aStar - Family of functions"
msgstr ""

#: ../../build/doc/aStar-family.rst:13
msgid "The A* (pronounced \"A Star\") algorithm is based on Dijkstra's algorithm with a heuristic that allow it to solve most shortest path problems by evaluation only a sub-set of the overall graph."
msgstr ""

#: ../../build/doc/aStar-family.rst:17
msgid ":doc:`pgr_aStar` - A* algorithm for the shortest path."
msgstr ""

#: ../../build/doc/aStar-family.rst:18
msgid ":doc:`pgr_aStarCost` - Get the aggregate cost of the shortest paths."
msgstr ""

#: ../../build/doc/aStar-family.rst:19
msgid ":doc:`pgr_aStarCostMatrix` - Get the cost matrix of the shortest paths."
msgstr ""

#: ../../build/doc/aStar-family.rst:31
msgid "Previous versions of this page"
msgstr ""

#: ../../build/doc/aStar-family.rst:32
msgid "**Supported versions:** current(`3.1 <https://docs.pgrouting.org/3.1/en/aStar-family.html>`__) `3.0 <https://docs.pgrouting.org/3.0/en/aStar-family.html>`__ `2.6 <https://docs.pgrouting.org/2.6/en/aStar-family.html>`__"
msgstr ""

#: ../../build/doc/aStar-family.rst:37
msgid "**Unsupported versions:** `2.5 <https://docs.pgrouting.org/2.5/en/aStar-family.html>`__ `2.4 <https://docs.pgrouting.org/2.4/en/aStar-family.html>`__"
msgstr ""

#: ../../build/doc/aStar-family.rst:42
msgid "General Information"
msgstr ""

#: ../../build/doc/aStar-family.rst:44
msgid "The main Characteristics are:"
msgstr ""

#: ../../build/doc/aStar-family.rst:48
msgid "Default kind of graph is **directed**  when"
msgstr ""

#: ../../build/doc/aStar-family.rst:50
msgid "``directed`` flag is missing."
msgstr ""

#: ../../build/doc/aStar-family.rst:51
msgid "``directed`` flag is set to true"
msgstr ""

#: ../../build/doc/aStar-family.rst:53
msgid "Unless specified otherwise, ordering is:"
msgstr ""

#: ../../build/doc/aStar-family.rst:55
msgid "first by ``start_vid`` (if exists)"
msgstr ""

#: ../../build/doc/aStar-family.rst:56
msgid "then by ``end_vid``"
msgstr ""

#: ../../build/doc/aStar-family.rst:58
msgid "Values are returned when there is a path"
msgstr ""

#: ../../build/doc/aStar-family.rst:59
msgid "Let :math:`v` and :math:`u` be nodes on the graph:"
msgstr ""

#: ../../build/doc/aStar-family.rst:61
msgid "If there is no path from :math:`v` to :math:`u`:"
msgstr ""

#: ../../build/doc/aStar-family.rst:63
#: ../../build/doc/aStar-family.rst:68
msgid "no corresponding row is returned"
msgstr ""

#: ../../build/doc/aStar-family.rst:64
msgid "``agg_cost`` from :math:`v` to :math:`u` is :math:`\\infty`"
msgstr ""

#: ../../build/doc/aStar-family.rst:66
msgid "There is no path when :math:`v = u` therefore"
msgstr ""

#: ../../build/doc/aStar-family.rst:69
msgid "``agg_cost`` from `v` to `u` is :math:`0`"
msgstr ""

#: ../../build/doc/aStar-family.rst:71
msgid "Edges with negative costs are not included in the graph."
msgstr ""

#: ../../build/doc/aStar-family.rst:72
msgid "When (x,y) coordinates for the same vertex identifier differ:"
msgstr ""

#: ../../build/doc/aStar-family.rst:74
msgid "A random selection of the vertex's (x,y) coordinates is used."
msgstr ""

#: ../../build/doc/aStar-family.rst:76
msgid "Running time: :math:`O((E + V) * \\log V)`"
msgstr ""

#: ../../build/doc/aStar-family.rst:81
msgid "Advanced documentation"
msgstr ""

#: ../../build/doc/aStar-family.rst:83
msgid "The A* (pronounced \"A Star\") algorithm is based on Dijkstra's algorithm with a heuristic, that is an estimation of the remaining cost from the vertex to the goal, that allows to solve most shortest path problems by evaluation only a sub-set of the overall graph. Running time: :math:`O((E + V) * \\log V)`"
msgstr ""

#: ../../build/doc/aStar-family.rst:93
msgid "Heuristic"
msgstr ""

#: ../../build/doc/aStar-family.rst:95
msgid "Currently the heuristic functions available are:"
msgstr ""

#: ../../build/doc/aStar-family.rst:97
msgid "0: :math:`h(v) = 0` (Use this value to compare with pgr_dijkstra)"
msgstr ""

#: ../../build/doc/aStar-family.rst:98
msgid "1: :math:`h(v) = abs(max(\\Delta x, \\Delta y))`"
msgstr ""

#: ../../build/doc/aStar-family.rst:99
msgid "2: :math:`h(v) = abs(min(\\Delta x, \\Delta y))`"
msgstr ""

#: ../../build/doc/aStar-family.rst:100
msgid "3: :math:`h(v) = \\Delta x * \\Delta x + \\Delta y * \\Delta y`"
msgstr ""

#: ../../build/doc/aStar-family.rst:101
msgid "4: :math:`h(v) = sqrt(\\Delta x * \\Delta x + \\Delta y * \\Delta y)`"
msgstr ""

#: ../../build/doc/aStar-family.rst:102
msgid "5: :math:`h(v) = abs(\\Delta x) + abs(\\Delta y)`"
msgstr ""

#: ../../build/doc/aStar-family.rst:104
msgid "where :math:`\\Delta x = x_1 - x_0` and :math:`\\Delta y = y_1 - y_0`"
msgstr ""

#: ../../build/doc/aStar-family.rst:110
#: ../../build/doc/aStar-family.rst:123
#: ../../build/doc/aStar-family.rst:136
msgid "Factor"
msgstr ""

#: ../../build/doc/aStar-family.rst:113
msgid "Analysis 1"
msgstr ""

#: ../../build/doc/aStar-family.rst:114
msgid "Working with cost/reverse_cost as length in degrees, x/y in lat/lon: Factor = 1   (no need to change units)"
msgstr ""

#: ../../build/doc/aStar-family.rst:118
msgid "Analysis 2"
msgstr ""

#: ../../build/doc/aStar-family.rst:119
msgid "Working with cost/reverse_cost as length in meters, x/y in lat/lon: Factor =  would depend on the location of the points:"
msgstr ""

#: ../../build/doc/aStar-family.rst:123
#: ../../build/doc/aStar-family.rst:136
msgid "Latitude"
msgstr ""

#: ../../build/doc/aStar-family.rst:123
#: ../../build/doc/aStar-family.rst:136
msgid "Conversion"
msgstr ""

#: ../../build/doc/aStar-family.rst:125
#: ../../build/doc/aStar-family.rst:138
msgid "45"
msgstr ""

#: ../../build/doc/aStar-family.rst:125
msgid "1 longitude degree is  78846.81 m"
msgstr ""

#: ../../build/doc/aStar-family.rst:125
msgid "78846"
msgstr ""

#: ../../build/doc/aStar-family.rst:126
#: ../../build/doc/aStar-family.rst:139
msgid "0"
msgstr ""

#: ../../build/doc/aStar-family.rst:126
msgid "1 longitude degree is 111319.46 m"
msgstr ""

#: ../../build/doc/aStar-family.rst:126
msgid "111319"
msgstr ""

#: ../../build/doc/aStar-family.rst:130
msgid "Analysis 3"
msgstr ""

#: ../../build/doc/aStar-family.rst:131
msgid "Working with cost/reverse_cost as time in seconds, x/y in lat/lon: Factor: would depend on the location of the points and on the average speed say 25m/s is the speed."
msgstr ""

#: ../../build/doc/aStar-family.rst:138
msgid "1 longitude degree is (78846.81m)/(25m/s)"
msgstr ""

#: ../../build/doc/aStar-family.rst:138
msgid "3153 s"
msgstr ""

#: ../../build/doc/aStar-family.rst:139
msgid "1 longitude degree is (111319.46 m)/(25m/s)"
msgstr ""

#: ../../build/doc/aStar-family.rst:139
msgid "4452 s"
msgstr ""

#: ../../build/doc/aStar-family.rst:145
msgid "See Also"
msgstr ""

#: ../../build/doc/aStar-family.rst:147
msgid ":doc:`pgr_aStar`"
msgstr ""

#: ../../build/doc/aStar-family.rst:148
msgid ":doc:`pgr_aStarCost`"
msgstr ""

#: ../../build/doc/aStar-family.rst:149
msgid ":doc:`pgr_aStarCostMatrix`"
msgstr ""

#: ../../build/doc/aStar-family.rst:150
msgid "https://www.boost.org/libs/graph/doc/astar_search.html"
msgstr ""

#: ../../build/doc/aStar-family.rst:151
msgid "https://en.wikipedia.org/wiki/A*_search_algorithm"
msgstr ""

#: ../../build/doc/aStar-family.rst:154
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/aStar-family.rst:155
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/aStar-family.rst:156
msgid ":ref:`search`"
msgstr ""

