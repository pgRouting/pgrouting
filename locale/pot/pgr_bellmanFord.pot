# SOME DESCRIPTIVE TITLE.
# Copyright (C) pgRouting Contributors - Version v3.2.0-dev
# This file is distributed under the same license as the pgRouting package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pgRouting v3.2.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 10:56-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../build/doc/pgr_bellmanFord.rst:12
msgid "**Supported versions:** `Latest <https://docs.pgrouting.org/latest/en/pgr_bellmanFord.html>`__ (`3.2 <https://docs.pgrouting.org/3.2/en/pgr_bellmanFord.html>`__) `3.1 <https://docs.pgrouting.org/3.1/en/pgr_bellmanFord.html>`__ `3.0 <https://docs.pgrouting.org/3.0/en/pgr_bellmanFord.html>`__"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:19
msgid "pgr_bellmanFord - Experimental"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:21
msgid "``pgr_bellmanFord`` — Returns the shortest path(s) using Bellman-Ford algorithm. In particular, the Bellman-Ford algorithm implemented by Boost.Graph."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:27
msgid "Boost Graph Inside"
msgstr ""

#: ../../build/doc/experimental.rst:3
msgid "Possible server crash"
msgstr ""

#: ../../build/doc/experimental.rst:5
msgid "These functions might create a server crash"
msgstr ""

#: ../../build/doc/experimental.rst:7
msgid "Experimental functions"
msgstr ""

#: ../../build/doc/experimental.rst:9
msgid "They are not officially of the current release."
msgstr ""

#: ../../build/doc/experimental.rst:10
msgid "They likely will not be officially be part of the next release:"
msgstr ""

#: ../../build/doc/experimental.rst:12
msgid "The functions might not make use of ANY-INTEGER and ANY-NUMERICAL"
msgstr ""

#: ../../build/doc/experimental.rst:13
msgid "Name might change."
msgstr ""

#: ../../build/doc/experimental.rst:14
msgid "Signature might change."
msgstr ""

#: ../../build/doc/experimental.rst:15
msgid "Functionality might change."
msgstr ""

#: ../../build/doc/experimental.rst:16
msgid "pgTap tests might be missing."
msgstr ""

#: ../../build/doc/experimental.rst:17
msgid "Might need c/c++ coding."
msgstr ""

#: ../../build/doc/experimental.rst:18
msgid "May lack documentation."
msgstr ""

#: ../../build/doc/experimental.rst:19
msgid "Documentation if any might need to be rewritten."
msgstr ""

#: ../../build/doc/experimental.rst:20
msgid "Documentation examples might need to be automatically generated."
msgstr ""

#: ../../build/doc/experimental.rst:21
msgid "Might need a lot of feedback from the comunity."
msgstr ""

#: ../../build/doc/experimental.rst:22
msgid "Might depend on a proposed function of pgRouting"
msgstr ""

#: ../../build/doc/experimental.rst:23
msgid "Might depend on a deprecated function of pgRouting"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:34
msgid "Availability"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:35
msgid "Version 3.2.0"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:37
msgid "New **experimental** function:"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:39
msgid "pgr_bellmanFord(Combinations)"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:41
msgid "Version 3.0.0"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:43
msgid "New **experimental** function"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:47
#: ../../build/doc/pgr_bellmanFord.rst:203
#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgRouting-concepts.rst:6
msgid "Description"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:49
msgid "Bellman-Ford's algorithm, is named after Richard Bellman and Lester Ford, who first published it in 1958 and 1956, respectively. It is a graph search algorithm that computes shortest paths from a starting vertex (``start_vid``) to an ending vertex (``end_vid``) in a graph where some of the edge weights may be negative number. Though it is more versatile, it is slower than Dijkstra's algorithm/ This implementation can be used with a directed graph and an undirected graph."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:73
msgid "The main characteristics are:"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:55
msgid "Process is valid for edges with both positive and negative edge weights."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:56
msgid "Values are returned when there is a path."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:58
msgid "When the start vertex and the end vertex are the same, there is no path. The agg_cost would be 0."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:60
msgid "When the start vertex and the end vertex are different, and there exists a path between them without having a *negative cycle*. The agg_cost would be some finite value denoting the shortest distance between them."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:61
msgid "When the start vertex and the end vertex are different, and there exists a path between them, but it contains a *negative cycle*. In such case, agg_cost for those vertices keep on decreasing furthermore, Hence agg_cost can’t be defined for them."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:63
msgid "When the start vertex and the end vertex are different, and there is no path. The agg_cost is :math:`\\infty`."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:65
msgid "For optimization purposes, any duplicated value in the `start_vids` or `end_vids` are ignored."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:67
msgid "The returned values are ordered:"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:69
msgid "`start_vid` ascending"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:70
msgid "`end_vid` ascending"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:72
msgid "Running time: :math:`O(| start\\_vids | * ( V * E))`"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:76
msgid "Signatures"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:79
msgid "Summary"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:92
msgid "Using defaults"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:0
#: ../../build/doc/pgr_bellmanFord.rst:0
#: ../../build/doc/pgr_bellmanFord.rst:0
#: ../../build/doc/pgr_bellmanFord.rst:0
#: ../../build/doc/pgr_bellmanFord.rst:0
#: ../../build/doc/pgr_bellmanFord.rst:0
msgid "Example"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:99
msgid "From vertex :math:`2` to vertex :math:`3` on a **directed** graph"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:109
msgid "One to One"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:117
msgid "From vertex :math:`2` to vertex :math:`3` on an **undirected** graph"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:127
msgid "One to many"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:135
msgid "From vertex :math:`2` to vertices :math:`\\{ 3, 5\\}` on an **undirected** graph"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:145
msgid "Many to One"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:153
msgid "From vertices :math:`\\{2, 11\\}` to vertex :math:`5` on a **directed** graph"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:163
msgid "Many to Many"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:171
msgid "From vertices :math:`\\{2, 11\\}` to vertices :math:`\\{3, 5\\}` on an **undirected** graph"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:181
msgid "Combinations"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:189
msgid "Using a combinations table on an **undirected** graph."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:196
msgid "Parameters"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:201
msgid "Description of the parameters of the signatures"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:203
msgid "Parameter"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:203
#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgRouting-concepts.rst:6
msgid "Type"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:203
#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgRouting-concepts.rst:4
msgid "Default"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:205
msgid "**Edges SQL**"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:205
#: ../../build/doc/pgr_bellmanFord.rst:206
msgid "``TEXT``"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:205
msgid "Edges query as described below."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:206
msgid "**Combinations SQL**"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:206
msgid "Combinations query as described below."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:207
#: ../../build/doc/pgRouting-concepts.rst:10
msgid "**start_vid**"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:207
#: ../../build/doc/pgr_bellmanFord.rst:209
#: ../../build/doc/pgRouting-concepts.rst:10
#: ../../build/doc/pgRouting-concepts.rst:16
#: ../../build/doc/pgRouting-concepts.rst:22
#: ../../build/doc/pgRouting-concepts.rst:23
msgid "``BIGINT``"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:207
msgid "Identifier of the starting vertex of the path."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:208
msgid "**start_vids**"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:208
#: ../../build/doc/pgr_bellmanFord.rst:210
msgid "``ARRAY[BIGINT]``"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:208
msgid "Array of identifiers of starting vertices."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:209
#: ../../build/doc/pgRouting-concepts.rst:16
msgid "**end_vid**"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:209
msgid "Identifier of the ending vertex of the path."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:210
msgid "**end_vids**"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:210
msgid "Array of identifiers of ending vertices."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:211
msgid "**directed**"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:211
msgid "``BOOLEAN``"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:211
msgid "``true``"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:211
msgid "When ``true`` Graph is considered `Directed`"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:212
msgid "When ``false`` the graph is considered as `Undirected`."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:218
msgid "Inner Queries"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:221
msgid "Edges query"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgRouting-concepts.rst:4
#: ../../build/doc/pgRouting-concepts.rst:6
msgid "Column"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:6
msgid "**id**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:6
#: ../../build/doc/pgRouting-concepts.rst:7
#: ../../build/doc/pgRouting-concepts.rst:8
#: ../../build/doc/pgRouting-concepts.rst:6
#: ../../build/doc/pgRouting-concepts.rst:7
msgid "``ANY-INTEGER``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:6
msgid "Identifier of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:7
#: ../../build/doc/pgRouting-concepts.rst:6
msgid "**source**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:7
#: ../../build/doc/pgRouting-concepts.rst:6
msgid "Identifier of the first end point vertex of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
#: ../../build/doc/pgRouting-concepts.rst:7
msgid "**target**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
#: ../../build/doc/pgRouting-concepts.rst:7
msgid "Identifier of the second end point vertex of the edge."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
#: ../../build/doc/pgRouting-concepts.rst:24
msgid "**cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
#: ../../build/doc/pgRouting-concepts.rst:13
msgid "``ANY-NUMERICAL``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
msgid "Weight of the edge  `(source, target)`"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:11
msgid "When negative: edge `(source, target)` does not exist, therefore it's not part of the graph."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "**reverse_cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "-1"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "Weight of the edge `(target, source)`,"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:15
msgid "When negative: edge `(target, source)` does not exist, therefore it's not part of the graph."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:19
#: ../../build/doc/pgRouting-concepts.rst:11
msgid "Where:"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
#: ../../build/doc/pgRouting-concepts.rst:0
msgid "ANY-INTEGER"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:21
#: ../../build/doc/pgRouting-concepts.rst:13
msgid "SMALLINT, INTEGER, BIGINT"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:0
msgid "ANY-NUMERICAL"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:22
msgid "SMALLINT, INTEGER, BIGINT, REAL, FLOAT"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:228
msgid "Combinations query"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:235
msgid "Results Columns"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:3
msgid "Returns set of ``(seq, path_seq [, start_vid] [, end_vid], node, edge, cost, agg_cost)``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
msgid "**seq**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
#: ../../build/doc/pgRouting-concepts.rst:9
msgid "``INT``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:8
msgid "Sequential value starting from **1**."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
msgid "**path_seq**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:9
msgid "Relative position in the path. Has value **1** for the beginning of a path."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:10
msgid "Identifier of the starting vertex. Returned when multiple starting vetrices are in the query."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:13
msgid "`Many to One`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:14
#: ../../build/doc/pgRouting-concepts.rst:20
msgid "`Many to Many`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:16
msgid "Identifier of the ending vertex. Returned when multiple ending vertices are in the query."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:19
msgid "`One to Many`_"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:22
msgid "**node**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:22
msgid "Identifier of the node in the path from ``start_vid`` to ``end_vid``."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:23
msgid "**edge**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:23
msgid "Identifier of the edge used to go from ``node`` to the next node in the path sequence. ``-1`` for the last node of the path."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:24
#: ../../build/doc/pgRouting-concepts.rst:25
msgid "``FLOAT``"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:24
msgid "Cost to traverse from ``node`` using ``edge`` to the next node in the path sequence."
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:25
msgid "**agg_cost**"
msgstr ""

#: ../../build/doc/pgRouting-concepts.rst:25
msgid "Aggregate cost from ``start_v`` to ``node``."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:242
msgid "See Also"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:244
msgid "https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:245
msgid "The queries use the :doc:`sampledata` network."
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:248
msgid "Indices and tables"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:249
msgid ":ref:`genindex`"
msgstr ""

#: ../../build/doc/pgr_bellmanFord.rst:250
msgid ":ref:`search`"
msgstr ""

