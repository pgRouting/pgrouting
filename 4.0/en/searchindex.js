Search.setIndex({"docnames": ["BFS-category", "DFS-category", "KSP-category", "TRSP-family", "TSP-family", "VRP-category", "aStar-family", "allpairs-family", "bdAstar-family", "bdDijkstra-family", "chinesePostmanProblem-family", "coloring-family", "components-family", "contraction-family", "cost-category", "costMatrix-category", "dijkstra-family", "drivingDistance-category", "experimental", "flow-family", "index", "kruskal-family", "metrics-family", "migration", "ordering-family", "pgRouting-concepts", "pgRouting-installation", "pgRouting-introduction", "pgr_KSP", "pgr_TSP", "pgr_TSPeuclidean", "pgr_aStar", "pgr_aStarCost", "pgr_aStarCostMatrix", "pgr_articulationPoints", "pgr_bdAstar", "pgr_bdAstarCost", "pgr_bdAstarCostMatrix", "pgr_bdDijkstra", "pgr_bdDijkstraCost", "pgr_bdDijkstraCostMatrix", "pgr_bellmanFord", "pgr_betweennessCentrality", "pgr_biconnectedComponents", "pgr_binaryBreadthFirstSearch", "pgr_bipartite", "pgr_boykovKolmogorov", "pgr_breadthFirstSearch", "pgr_bridges", "pgr_chinesePostman", "pgr_chinesePostmanCost", "pgr_connectedComponents", "pgr_contraction", "pgr_contractionDeadEnd", "pgr_contractionHierarchies", "pgr_contractionLinear", "pgr_cuthillMckeeOrdering", "pgr_dagShortestPath", "pgr_degree", "pgr_depthFirstSearch", "pgr_dijkstra", "pgr_dijkstraCost", "pgr_dijkstraCostMatrix", "pgr_dijkstraNear", "pgr_dijkstraNearCost", "pgr_dijkstraVia", "pgr_drivingDistance", "pgr_edgeColoring", "pgr_edgeDisjointPaths", "pgr_edmondsKarp", "pgr_edwardMoore", "pgr_extractVertices", "pgr_findCloseEdges", "pgr_floydWarshall", "pgr_full_version", "pgr_hawickCircuits", "pgr_isPlanar", "pgr_johnson", "pgr_kruskal", "pgr_kruskalBFS", "pgr_kruskalDD", "pgr_kruskalDFS", "pgr_lengauerTarjanDominatorTree", "pgr_lineGraph", "pgr_lineGraphFull", "pgr_makeConnected", "pgr_maxCardinalityMatch", "pgr_maxFlow", "pgr_maxFlowMinCost", "pgr_maxFlowMinCost_Cost", "pgr_pickDeliver", "pgr_pickDeliverEuclidean", "pgr_prim", "pgr_primBFS", "pgr_primDD", "pgr_primDFS", "pgr_pushRelabel", "pgr_separateCrossing", "pgr_separateTouching", "pgr_sequentialVertexColoring", "pgr_stoerWagner", "pgr_strongComponents", "pgr_topologicalSort", "pgr_transitiveClosure", "pgr_trsp", "pgr_trspVia", "pgr_trspVia_withPoints", "pgr_trsp_withPoints", "pgr_turnRestrictedPath", "pgr_version", "pgr_vrpOneDepot", "pgr_withPoints", "pgr_withPointsCost", "pgr_withPointsCostMatrix", "pgr_withPointsDD", "pgr_withPointsKSP", "pgr_withPointsVia", "prim-family", "proposed", "reference", "release_notes", "routingFunctions", "sampledata", "spanningTree-category", "support", "transformation-family", "traversal-family", "utilities-family", "via-category", "withPoints-category", "withPoints-family"], "filenames": ["BFS-category.rst", "DFS-category.rst", "KSP-category.rst", "TRSP-family.rst", "TSP-family.rst", "VRP-category.rst", "aStar-family.rst", "allpairs-family.rst", "bdAstar-family.rst", "bdDijkstra-family.rst", "chinesePostmanProblem-family.rst", "coloring-family.rst", "components-family.rst", "contraction-family.rst", "cost-category.rst", "costMatrix-category.rst", "dijkstra-family.rst", "drivingDistance-category.rst", "experimental.rst", "flow-family.rst", "index.rst", "kruskal-family.rst", "metrics-family.rst", "migration.rst", "ordering-family.rst", "pgRouting-concepts.rst", "pgRouting-installation.rst", "pgRouting-introduction.rst", "pgr_KSP.rst", "pgr_TSP.rst", "pgr_TSPeuclidean.rst", "pgr_aStar.rst", "pgr_aStarCost.rst", "pgr_aStarCostMatrix.rst", "pgr_articulationPoints.rst", "pgr_bdAstar.rst", "pgr_bdAstarCost.rst", "pgr_bdAstarCostMatrix.rst", "pgr_bdDijkstra.rst", "pgr_bdDijkstraCost.rst", "pgr_bdDijkstraCostMatrix.rst", "pgr_bellmanFord.rst", "pgr_betweennessCentrality.rst", "pgr_biconnectedComponents.rst", "pgr_binaryBreadthFirstSearch.rst", "pgr_bipartite.rst", "pgr_boykovKolmogorov.rst", "pgr_breadthFirstSearch.rst", "pgr_bridges.rst", "pgr_chinesePostman.rst", "pgr_chinesePostmanCost.rst", "pgr_connectedComponents.rst", "pgr_contraction.rst", "pgr_contractionDeadEnd.rst", "pgr_contractionHierarchies.rst", "pgr_contractionLinear.rst", "pgr_cuthillMckeeOrdering.rst", "pgr_dagShortestPath.rst", "pgr_degree.rst", "pgr_depthFirstSearch.rst", "pgr_dijkstra.rst", "pgr_dijkstraCost.rst", "pgr_dijkstraCostMatrix.rst", "pgr_dijkstraNear.rst", "pgr_dijkstraNearCost.rst", "pgr_dijkstraVia.rst", "pgr_drivingDistance.rst", "pgr_edgeColoring.rst", "pgr_edgeDisjointPaths.rst", "pgr_edmondsKarp.rst", "pgr_edwardMoore.rst", "pgr_extractVertices.rst", "pgr_findCloseEdges.rst", "pgr_floydWarshall.rst", "pgr_full_version.rst", "pgr_hawickCircuits.rst", "pgr_isPlanar.rst", "pgr_johnson.rst", "pgr_kruskal.rst", "pgr_kruskalBFS.rst", "pgr_kruskalDD.rst", "pgr_kruskalDFS.rst", "pgr_lengauerTarjanDominatorTree.rst", "pgr_lineGraph.rst", "pgr_lineGraphFull.rst", "pgr_makeConnected.rst", "pgr_maxCardinalityMatch.rst", "pgr_maxFlow.rst", "pgr_maxFlowMinCost.rst", "pgr_maxFlowMinCost_Cost.rst", "pgr_pickDeliver.rst", "pgr_pickDeliverEuclidean.rst", "pgr_prim.rst", "pgr_primBFS.rst", "pgr_primDD.rst", "pgr_primDFS.rst", "pgr_pushRelabel.rst", "pgr_separateCrossing.rst", "pgr_separateTouching.rst", "pgr_sequentialVertexColoring.rst", "pgr_stoerWagner.rst", "pgr_strongComponents.rst", "pgr_topologicalSort.rst", "pgr_transitiveClosure.rst", "pgr_trsp.rst", "pgr_trspVia.rst", "pgr_trspVia_withPoints.rst", "pgr_trsp_withPoints.rst", "pgr_turnRestrictedPath.rst", "pgr_version.rst", "pgr_vrpOneDepot.rst", "pgr_withPoints.rst", "pgr_withPointsCost.rst", "pgr_withPointsCostMatrix.rst", "pgr_withPointsDD.rst", "pgr_withPointsKSP.rst", "pgr_withPointsVia.rst", "prim-family.rst", "proposed.rst", "reference.rst", "release_notes.rst", "routingFunctions.rst", "sampledata.rst", "spanningTree-category.rst", "support.rst", "transformation-family.rst", "traversal-family.rst", "utilities-family.rst", "via-category.rst", "withPoints-category.rst", "withPoints-family.rst"], "titles": ["BFS - Category", "DFS - Category", "K shortest paths - Category", "TRSP - Family of functions", "Traveling Sales Person - Family of functions", "Vehicle Routing Functions - Category", "A* - Family of functions", "All Pairs - Family of Functions", "Bidirectional A* - Family of functions", "Bidirectional Dijkstra - Family of functions", "Chinese Postman Problem - Family of functions (Experimental)", "Coloring - Family of functions", "Components - Family of functions", "Contraction - Family of functions", "Cost - Category", "Cost Matrix - Category", "Dijkstra - Family of functions", "Driving Distance - Category", "Experimental Functions", "Flow - Family of functions", "Table of Contents", "Kruskal - Family of functions", "Metrics - Family of functions", "Migration guide", "Ordering - Family of functions", "pgRouting Concepts", "Installation", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_KSP</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_TSP</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_TSPeuclidean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_aStar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_aStarCost</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_aStarCostMatrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_articulationPoints</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdAstar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdAstarCost</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdAstarCostMatrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdDijkstra</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdDijkstraCost</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bdDijkstraCostMatrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bellmanFord</span> <span class=\"pre\">-</span> <span class=\"pre\">Experimental</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_betweennessCentrality</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_biconnectedComponents</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_binaryBreadthFirstSearch</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bipartite</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_boykovKolmogorov</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_breadthFirstSearch</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_bridges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_chinesePostman</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_chinesePostmanCost</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_connectedComponents</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_contraction</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_contractionDeadEnd</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_contractionHierarchies</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_contractionLinear</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_cuthillMckeeOrdering</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dagShortestPath</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_degree</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_depthFirstSearch</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstra</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstraCost</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstraCostMatrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstraNear</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstraNearCost</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_dijkstraVia</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_drivingDistance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_edgeColoring</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_edgeDisjointPaths</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_edmondsKarp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_edwardMoore</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_extractVertices</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_findCloseEdges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_floydWarshall</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_full_version</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_hawickCircuits</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_isPlanar</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_johnson</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_kruskal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_kruskalBFS</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_kruskalDD</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_kruskalDFS</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_lengauerTarjanDominatorTree</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_lineGraph</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_lineGraphFull</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_makeConnected</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_maxCardinalityMatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_maxFlow</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_maxFlowMinCost</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_maxFlowMinCost_Cost</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_pickDeliver</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_pickDeliverEuclidean</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_prim</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_primBFS</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_primDD</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_primDFS</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_pushRelabel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_separateCrossing</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_separateTouching</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_sequentialVertexColoring</span></code> - Proposed", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_stoerWagner</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_strongComponents</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_topologicalSort</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_transitiveClosure</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_trsp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_trspVia</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_trspVia_withPoints</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_trsp_withPoints</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_turnRestrictedPath</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_version</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_vrpOneDepot</span></code> - Experimental", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_withPoints</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_withPointsCost</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_withPointsCostMatrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_withPointsDD</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_withPointsKSP</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pgr_withPointsVia</span></code>", "Prim - Family of functions", "Proposed Functions", "Reference", "Release Notes", "Function Families", "Sample Data", "Spanning Tree - Category", "Support", "Transformation - Family of functions", "Traversal - Family of functions", "Utility functions", "Via - Category", "withPoints - Category", "withPoints - Family of functions"], "terms": {"pgr_kruskalbf": [0, 20, 21, 23, 25, 120, 121], "pgr_primbf": [0, 20, 23, 25, 117, 120, 121], "travers": [0, 1, 17, 18, 23, 25, 28, 29, 30, 31, 35, 38, 41, 44, 47, 49, 57, 59, 60, 63, 65, 68, 70, 75, 76, 78, 84, 85, 92, 94, 95, 100, 104, 105, 106, 107, 108, 111, 114, 115, 116, 118, 120, 122, 128], "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130], "breadth": [0, 44, 47, 56, 79, 120], "first": [0, 1, 3, 4, 6, 7, 8, 10, 13, 15, 16, 17, 18, 19, 21, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 126, 128, 129, 130], "search": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130], "It": [0, 1, 4, 7, 8, 9, 14, 15, 16, 21, 25, 29, 32, 36, 38, 39, 40, 41, 44, 54, 59, 60, 61, 62, 67, 70, 73, 75, 76, 77, 78, 79, 80, 81, 85, 92, 93, 94, 95, 99, 100, 104, 112, 113, 117, 123, 124, 129, 130], "": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 107, 108, 111, 112, 113, 114, 115, 117, 120, 121, 123, 128, 129, 130], "implement": [0, 1, 4, 5, 8, 9, 13, 16, 19, 21, 29, 30, 34, 41, 42, 47, 48, 52, 54, 56, 57, 59, 60, 61, 62, 67, 73, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 95, 99, 100, 113, 117, 123], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130], "onli": [0, 1, 6, 7, 9, 10, 15, 16, 18, 19, 20, 21, 23, 25, 26, 29, 34, 38, 39, 40, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 61, 62, 63, 64, 66, 69, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 128, 129, 130], "undirect": [0, 1, 4, 6, 7, 8, 9, 12, 15, 16, 18, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 92, 93, 94, 95, 99, 100, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 128, 129, 130], "graph": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 128, 129, 130], "process": [0, 1, 6, 7, 8, 9, 10, 15, 16, 19, 20, 21, 25, 28, 31, 32, 35, 36, 38, 39, 40, 41, 44, 46, 49, 50, 53, 55, 57, 58, 60, 61, 62, 69, 71, 72, 73, 77, 78, 79, 80, 81, 84, 88, 89, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 107, 108, 111, 112, 113, 115, 117, 120, 122, 123, 129, 130], "done": [0, 1, 5, 7, 9, 10, 11, 13, 14, 15, 16, 19, 20, 21, 23, 25, 26, 29, 38, 39, 40, 44, 46, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 69, 73, 77, 78, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 105, 106, 107, 111, 112, 113, 117, 118, 120, 122, 123, 125, 126, 128, 129], "posit": [0, 1, 7, 9, 10, 15, 16, 19, 20, 21, 25, 28, 29, 31, 35, 38, 39, 40, 41, 44, 46, 49, 50, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 68, 69, 70, 72, 73, 75, 77, 78, 79, 80, 81, 83, 84, 86, 88, 89, 92, 93, 94, 95, 96, 100, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 123, 128, 129, 130], "cost": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130], "when": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 19, 20, 21, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 111, 112, 113, 114, 115, 117, 120, 121, 122, 123, 128], "connect": [0, 1, 4, 10, 12, 18, 20, 21, 23, 30, 34, 43, 45, 48, 49, 50, 55, 63, 64, 72, 78, 79, 80, 81, 84, 85, 92, 93, 94, 95, 98, 99, 100, 101, 103, 117, 120, 121, 122, 123], "The": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 110, 111, 112, 113, 114, 117, 120, 123, 124, 125, 126, 129, 130], "make": [0, 1, 3, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 25, 26, 27, 30, 31, 32, 35, 36, 38, 39, 40, 41, 44, 45, 47, 49, 50, 54, 56, 57, 58, 60, 61, 62, 63, 64, 67, 70, 75, 76, 78, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 105, 106, 108, 110, 113, 117, 120, 123, 125, 126], "up": [0, 1, 5, 13, 16, 21, 23, 25, 26, 54, 58, 59, 78, 79, 80, 81, 84, 91, 92, 93, 94, 95, 117, 123], "tree": [0, 1, 17, 20, 21, 47, 59, 66, 78, 79, 80, 81, 82, 92, 93, 94, 95, 114, 117, 120, 121], "find": [0, 1, 3, 8, 9, 20, 21, 27, 54, 60, 63, 64, 65, 75, 78, 79, 80, 81, 92, 93, 94, 95, 100, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 127, 128], "minimum": [0, 1, 11, 21, 29, 43, 45, 50, 51, 67, 78, 79, 80, 81, 85, 89, 92, 93, 94, 95, 99, 100, 101, 117, 120, 123], "span": [0, 1, 17, 20, 21, 47, 59, 66, 78, 79, 80, 81, 92, 93, 94, 95, 114, 117, 120, 121], "each": [0, 1, 4, 7, 14, 15, 18, 19, 20, 21, 25, 26, 27, 29, 30, 32, 36, 39, 40, 43, 44, 45, 46, 47, 51, 54, 56, 58, 59, 61, 62, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 113, 117, 121, 123, 125, 127, 128, 129, 130], "compon": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "forest": [0, 1, 21, 47, 59, 78, 79, 80, 81, 92, 93, 94, 95, 117, 123], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "descript": [0, 3, 4, 5, 7, 11, 15, 16, 17, 19, 25, 90, 91, 122, 128, 129, 130], "text": [0, 3, 5, 7, 10, 15, 16, 17, 19, 20, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 120, 128, 129, 130], "describ": [0, 3, 5, 7, 10, 15, 16, 17, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 128, 129, 130], "below": [0, 5, 7, 10, 15, 16, 17, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 111, 112, 113, 114, 115, 122, 124, 129, 130], "root": [0, 17, 25, 47, 59, 66, 79, 80, 81, 82, 93, 94, 95, 114], "vid": [0, 15, 16, 17, 25, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 57, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 75, 79, 80, 81, 87, 88, 89, 93, 94, 95, 96, 98, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 129, 130], "bigint": [0, 3, 5, 7, 10, 11, 15, 16, 17, 19, 20, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 122, 128, 129, 130], "identifi": [0, 3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 122, 128, 129, 130], "vertex": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 82, 83, 85, 86, 87, 88, 89, 90, 92, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 125, 127, 128, 129, 130], "valu": [0, 3, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 19, 20, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 120, 122, 128, 129, 130], "0": [0, 4, 5, 6, 7, 8, 9, 15, 16, 17, 19, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 128, 129, 130], "get": [0, 4, 5, 6, 7, 16, 20, 23, 25, 28, 47, 51, 58, 59, 63, 64, 71, 72, 74, 75, 83, 84, 105, 106, 115, 118, 120, 121], "start": [0, 4, 5, 7, 8, 9, 14, 15, 16, 17, 19, 23, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 122, 128, 129, 130], "aleatori": [0, 47, 59], "node": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "arrai": [0, 3, 15, 16, 17, 23, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 79, 80, 81, 87, 88, 89, 93, 94, 95, 96, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 120, 122, 128, 129, 130], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "integ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "vertic": [0, 3, 7, 9, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 53, 55, 56, 57, 60, 61, 62, 63, 64, 67, 68, 69, 70, 73, 75, 76, 77, 82, 83, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 111, 112, 113, 115, 118, 120, 121, 123, 128], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130], "ignor": [0, 3, 9, 14, 15, 16, 17, 19, 23, 25, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 44, 46, 47, 57, 59, 60, 61, 62, 65, 66, 69, 70, 71, 79, 80, 81, 87, 88, 89, 93, 94, 95, 96, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 120, 128], "For": [0, 5, 6, 7, 8, 9, 16, 17, 19, 20, 23, 26, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 53, 54, 55, 57, 58, 59, 61, 63, 64, 66, 70, 71, 72, 73, 77, 79, 80, 81, 83, 85, 93, 94, 95, 100, 102, 105, 106, 107, 111, 112, 114, 115, 116, 120, 122, 123, 124, 129, 130], "optim": [0, 4, 5, 9, 13, 16, 17, 29, 30, 38, 39, 40, 41, 44, 47, 54, 57, 59, 60, 61, 66, 67, 70, 79, 80, 81, 90, 91, 93, 94, 95, 99, 102, 107, 111, 112, 114], "purpos": [0, 9, 16, 17, 23, 38, 39, 40, 41, 44, 47, 57, 59, 60, 61, 66, 70, 79, 80, 81, 93, 94, 95, 102, 107, 111, 112, 114], "duplic": [0, 9, 14, 15, 16, 17, 19, 30, 38, 39, 40, 41, 44, 46, 47, 57, 59, 60, 61, 62, 66, 69, 70, 79, 80, 81, 84, 87, 88, 89, 93, 94, 95, 96, 107, 111, 112, 113, 114, 120], "where": [0, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 122, 124, 128, 129, 130], "smallint": [0, 3, 5, 7, 10, 15, 16, 17, 19, 21, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 128, 129, 130], "numer": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "real": [0, 3, 5, 7, 10, 15, 16, 17, 19, 21, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 128, 129, 130], "float": [0, 3, 5, 6, 7, 10, 15, 16, 17, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 122, 128, 129, 130], "default": [0, 3, 4, 5, 6, 7, 10, 15, 16, 17, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 122, 128, 129, 130], "max_depth": [0, 23, 47, 59, 79, 81, 93, 95], "9223372036854775807": [0, 47, 59, 79, 81, 93, 95], "upper": [0, 15, 17, 40, 47, 59, 62, 66, 79, 80, 81, 88, 89, 93, 94, 95, 113, 114], "limit": [0, 5, 17, 25, 47, 58, 59, 63, 64, 66, 72, 79, 80, 81, 91, 93, 94, 95, 114, 122], "depth": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "neg": [0, 3, 7, 9, 10, 15, 16, 17, 19, 21, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 120, 122, 128, 129, 130], "throw": [0, 23, 42, 47, 57, 59, 79, 81, 93, 95, 102], "an": [0, 3, 4, 5, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 75, 79, 81, 83, 84, 90, 91, 93, 95, 98, 99, 100, 103, 104, 105, 106, 107, 108, 111, 112, 113, 115, 117, 120, 121, 122, 123, 124, 128, 129], "error": [0, 23, 47, 58, 59, 71, 72, 79, 81, 93, 95, 102, 120], "id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "end": [0, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 21, 23, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 120, 122, 128, 129, 130], "point": [0, 3, 5, 6, 7, 10, 12, 16, 17, 19, 20, 21, 23, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 117, 120, 121, 124, 127], "target": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "second": [0, 3, 4, 5, 6, 7, 10, 15, 16, 17, 19, 21, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 122, 128, 129, 130], "weight": [0, 3, 5, 7, 10, 15, 16, 17, 19, 21, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 128, 129, 130], "reverse_cost": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130], "1": [0, 3, 4, 5, 6, 7, 10, 11, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 128, 129, 130], "doe": [0, 3, 5, 7, 9, 10, 14, 15, 16, 17, 19, 21, 23, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 115, 116, 117, 120, 128], "exist": [0, 3, 6, 7, 8, 9, 10, 15, 16, 17, 19, 21, 23, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 122, 128, 129, 130], "therefor": [0, 1, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 21, 23, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 122, 125, 126, 128, 129, 130], "part": [0, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 125, 126, 128, 129, 130], "return": [0, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 120, 121, 128], "set": [0, 5, 6, 7, 11, 13, 15, 16, 17, 19, 20, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122, 124, 128, 129], "seq": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "start_vid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "agg_cost": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "sequenti": [0, 3, 5, 15, 17, 19, 25, 28, 31, 35, 38, 41, 43, 44, 46, 47, 49, 51, 57, 59, 60, 63, 65, 68, 69, 70, 75, 82, 83, 84, 85, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 128, 129, 130], "from": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 125, 126, 128, 129, 130], "reach": [0, 17, 25, 47, 59, 68, 72, 94, 95, 114, 120, 122], "arriv": [0, 5, 16, 17, 19, 25, 28, 31, 32, 35, 36, 38, 39, 41, 44, 46, 47, 57, 59, 60, 61, 63, 64, 68, 69, 70, 87, 88, 89, 90, 91, 94, 95, 96, 104, 107, 111, 112, 114, 115, 129, 130], "aggreg": [0, 5, 6, 7, 9, 14, 15, 16, 17, 19, 20, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 46, 47, 49, 57, 59, 60, 61, 62, 63, 64, 68, 69, 70, 73, 75, 77, 80, 88, 89, 94, 95, 96, 104, 107, 108, 111, 112, 113, 114, 115, 121, 128], "boost": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "prim": [0, 1, 17, 20, 21, 25, 92, 93, 94, 95, 120, 121, 123], "algorithm": [0, 1, 2, 4, 6, 7, 8, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 87, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 129, 130], "kruskal": [0, 1, 17, 20, 25, 78, 79, 80, 81, 120, 121, 123], "wikipedia": [0, 1, 4, 5, 6, 8, 19, 21, 25, 28, 29, 30, 31, 34, 35, 38, 39, 41, 43, 44, 45, 47, 48, 51, 56, 57, 59, 60, 61, 63, 64, 65, 67, 69, 70, 78, 79, 80, 81, 82, 83, 84, 86, 87, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 110, 117, 123], "indic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130], "tabl": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130], "index": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130], "page": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130], "path_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "path_seq": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "end_vid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "route_agg_cost": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "pred": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "color": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "sub_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "geom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "degre": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "in_edg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "out_edg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "x": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "y": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "edge_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "fraction": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "side": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "distanc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "build_typ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "compile_d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "librari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "system": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "postgresql": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "compil": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "hash": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "contracted_vertic": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "metric": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "vertex_ord": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "vertex_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "idom": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "flow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "residual_capac": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "mincut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "vehicle_numb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "vehicle_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "stop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "order_id": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "stop_typ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "cargo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "travel_tim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "arrival_tim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "wait_tim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "service_tim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "departure_tim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "just": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "marker": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "notes2new": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "pgr_kruskaldf": [1, 20, 21, 25, 120, 121], "pgr_primdf": [1, 20, 23, 25, 117, 120, 121], "function": [1, 14, 15, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 128, 129], "next": [1, 3, 5, 10, 11, 12, 13, 14, 16, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 35, 38, 41, 44, 45, 47, 49, 50, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 70, 71, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 125, 126, 128], "mayor": [1, 11, 13, 14, 16, 23, 53, 58, 59, 63, 64, 65, 83, 99, 118, 125, 126, 128], "releas": [1, 3, 5, 10, 11, 12, 13, 14, 16, 18, 19, 22, 24, 26, 41, 44, 45, 47, 49, 50, 53, 56, 57, 58, 59, 63, 64, 65, 67, 70, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 99, 100, 102, 103, 108, 110, 118, 125, 126, 128], "thei": [1, 3, 5, 10, 11, 12, 13, 14, 16, 18, 19, 22, 23, 24, 25, 29, 41, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 63, 64, 65, 67, 70, 72, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 97, 98, 99, 100, 102, 103, 108, 110, 118, 120, 122, 125, 126, 128], "offici": [1, 3, 5, 10, 11, 12, 13, 14, 16, 18, 19, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 125, 126, 128], "current": [1, 3, 5, 6, 10, 11, 12, 13, 14, 16, 18, 19, 22, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 44, 45, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 70, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 116, 118, 125, 126, 128], "code": [1, 11, 13, 14, 16, 23, 26, 27, 53, 58, 59, 63, 64, 65, 71, 72, 83, 99, 118, 124, 125, 126, 128], "ha": [1, 3, 5, 11, 13, 14, 16, 17, 19, 23, 25, 26, 28, 29, 31, 35, 38, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 72, 75, 76, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 114, 115, 116, 118, 120, 122, 124, 125, 126, 128, 129], "been": [1, 4, 5, 11, 13, 14, 16, 23, 25, 26, 52, 53, 54, 58, 59, 63, 64, 65, 71, 83, 99, 106, 118, 120, 124, 125, 126, 128, 129], "review": [1, 3, 5, 10, 11, 12, 13, 14, 16, 18, 19, 22, 24, 41, 44, 45, 47, 49, 50, 53, 56, 57, 58, 59, 63, 64, 65, 67, 70, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 99, 100, 102, 103, 108, 110, 118, 125, 126, 128], "experiment": [1, 14, 16, 20, 23, 25, 34, 43, 46, 48, 51, 52, 53, 58, 59, 63, 64, 65, 68, 69, 71, 83, 86, 96, 99, 101, 118, 120, 128], "name": [1, 3, 5, 10, 11, 12, 13, 14, 16, 18, 19, 22, 24, 25, 30, 31, 35, 41, 44, 45, 47, 49, 50, 52, 53, 56, 57, 58, 59, 63, 64, 65, 66, 67, 70, 74, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 99, 100, 102, 103, 108, 110, 118, 120, 122, 125, 126, 128, 130], "signatur": [1, 3, 5, 10, 11, 12, 13, 14, 16, 18, 19, 22, 23, 24, 25, 118, 125, 126, 128], "might": [1, 3, 5, 10, 11, 12, 13, 14, 16, 18, 19, 22, 24, 25, 29, 41, 44, 45, 47, 49, 50, 52, 53, 55, 56, 57, 58, 59, 63, 64, 65, 67, 70, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 99, 100, 102, 103, 104, 108, 110, 118, 122, 124, 125, 126, 128, 129], "chang": [1, 3, 5, 6, 10, 11, 12, 13, 14, 16, 18, 19, 22, 24, 25, 28, 29, 30, 31, 34, 35, 38, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 73, 75, 76, 77, 82, 83, 84, 85, 86, 88, 89, 90, 91, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 125, 126, 128, 129], "pgtap": [1, 3, 5, 10, 11, 12, 13, 14, 16, 18, 19, 22, 24, 26, 41, 44, 45, 47, 49, 50, 53, 56, 57, 58, 59, 63, 64, 65, 67, 70, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 99, 100, 102, 103, 108, 110, 118, 120, 125, 126, 128], "test": [1, 3, 5, 7, 10, 11, 12, 13, 14, 16, 18, 19, 20, 22, 24, 41, 44, 45, 47, 49, 50, 53, 56, 57, 58, 59, 63, 64, 65, 67, 70, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 99, 100, 102, 103, 108, 110, 118, 120, 124, 125, 126, 128], "have": [1, 3, 4, 5, 11, 13, 14, 16, 17, 23, 25, 26, 27, 31, 35, 41, 42, 44, 53, 54, 58, 59, 63, 64, 65, 66, 67, 72, 75, 79, 80, 81, 83, 84, 90, 91, 93, 94, 95, 99, 100, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 118, 120, 122, 124, 125, 126, 128, 129, 130], "being": [1, 11, 13, 14, 16, 23, 53, 58, 59, 63, 64, 65, 83, 99, 118, 120, 125, 126, 128, 129], "But": [1, 3, 11, 13, 14, 16, 25, 53, 58, 59, 63, 64, 65, 83, 99, 105, 106, 118, 125, 126, 128], "need": [1, 3, 5, 6, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 41, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 63, 64, 65, 67, 70, 71, 72, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 97, 98, 99, 100, 102, 103, 108, 110, 118, 120, 122, 125, 126, 128], "more": [1, 5, 7, 11, 13, 14, 16, 20, 23, 25, 26, 29, 34, 41, 44, 52, 53, 54, 55, 57, 58, 59, 63, 64, 65, 67, 73, 75, 77, 83, 84, 90, 91, 99, 102, 108, 118, 120, 122, 125, 126, 128, 129, 130], "document": [1, 3, 5, 10, 11, 12, 13, 14, 18, 22, 23, 24, 25, 26, 27, 41, 44, 45, 47, 49, 50, 52, 53, 56, 57, 58, 59, 63, 64, 65, 67, 70, 72, 74, 75, 76, 82, 83, 84, 85, 88, 89, 90, 91, 92, 99, 100, 102, 103, 104, 108, 109, 110, 118, 122, 124, 125, 126, 128], "refin": [1, 11, 13, 14, 16, 53, 58, 59, 63, 64, 65, 71, 83, 99, 118, 125, 126, 128], "pgr_depthfirstsearch": [1, 20, 23, 25, 118, 120, 126], "In": [1, 13, 15, 16, 19, 23, 25, 27, 41, 46, 51, 52, 55, 56, 57, 63, 64, 67, 69, 72, 75, 83, 84, 88, 89, 96, 97, 98, 100, 106, 107, 111, 112, 113, 114, 115, 116, 120, 122, 124, 128, 129, 130], "gener": [1, 18, 23, 27, 30, 44, 52, 53, 55, 58, 71, 72, 84, 97, 98, 104, 105, 106, 116, 118, 120, 122, 124, 125], "edg": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 18, 20, 21, 22, 24, 26, 27, 29, 30, 74, 90, 91, 109, 110, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127], "result": [1, 6, 14, 16, 20, 21, 57, 89, 97, 98, 117, 120, 123, 129, 130], "pgr_ksp": [2, 16, 20, 25, 120, 121, 130], "yen": [2, 16, 20, 28, 108, 115, 121], "base": [2, 5, 6, 8, 9, 11, 16, 17, 18, 20, 23, 28, 51, 58, 60, 71, 72, 83, 84, 97, 98, 101, 120, 121, 122, 127, 129, 130], "pgr_dijkstra": [2, 6, 9, 16, 20, 25, 31, 32, 33, 35, 36, 37, 38, 39, 40, 53, 55, 62, 84, 97, 98, 120, 121, 130], "pgr_withpointsksp": [2, 20, 25, 120, 121, 130], "pgr_withpoint": [2, 17, 20, 25, 72, 113, 120, 121, 130], "given": [3, 4, 5, 7, 15, 16, 19, 20, 25, 26, 29, 30, 52, 54, 63, 64, 65, 71, 83, 84, 90, 91, 105, 106, 107, 111, 112, 113, 114, 115, 116, 121, 125, 128, 129, 130], "input": [3, 4, 7, 15, 18, 20, 29, 30, 40, 52, 62, 84, 85, 88, 89, 103, 107, 111, 112, 113, 121, 125, 130], "pgr_trsp": [3, 20, 25, 105, 106, 120, 121], "rout": [3, 4, 16, 18, 20, 26, 27, 28, 29, 30, 63, 64, 90, 91, 97, 98, 104, 107, 108, 111, 112, 113, 118, 120, 121, 122, 128, 129, 130], "pgr_trspvia": [3, 20, 120, 121, 128], "via": [3, 13, 20, 23, 118, 120, 121, 129, 130], "pgr_trsp_withpoint": [3, 20, 25, 106, 120, 121, 129], "pgr_trspvia_withpoint": [3, 20, 120, 121, 128, 129], "like": [3, 5, 10, 11, 12, 13, 18, 19, 20, 22, 24, 25, 41, 44, 45, 47, 49, 50, 54, 56, 57, 58, 67, 70, 72, 75, 76, 82, 84, 85, 88, 89, 90, 91, 100, 102, 103, 104, 108, 110, 125, 126, 129, 130], "miss": [3, 5, 10, 11, 12, 13, 18, 19, 22, 24, 25, 29, 41, 44, 45, 47, 49, 50, 56, 57, 58, 65, 67, 70, 75, 76, 82, 84, 85, 88, 89, 90, 91, 100, 102, 103, 105, 106, 108, 110, 116, 120, 125, 126, 128], "c": [3, 5, 7, 10, 11, 12, 13, 18, 19, 20, 22, 24, 25, 26, 27, 41, 44, 45, 47, 49, 50, 52, 54, 56, 57, 67, 70, 75, 76, 82, 84, 85, 88, 89, 90, 91, 97, 98, 100, 102, 103, 108, 110, 120, 124, 125, 126], "rewritten": [3, 5, 10, 11, 12, 13, 18, 19, 22, 24, 41, 44, 45, 47, 49, 50, 56, 57, 67, 70, 75, 76, 82, 84, 85, 88, 89, 90, 91, 100, 102, 103, 108, 110, 125, 126], "lot": [3, 5, 10, 11, 12, 13, 18, 19, 22, 24, 25, 41, 44, 45, 47, 49, 50, 56, 57, 67, 70, 75, 76, 82, 84, 85, 88, 89, 90, 91, 100, 102, 103, 108, 110, 125, 126], "feedback": [3, 5, 10, 11, 12, 13, 18, 19, 22, 24, 41, 44, 45, 47, 49, 50, 56, 57, 67, 70, 75, 76, 82, 84, 85, 88, 89, 90, 91, 100, 102, 103, 108, 110, 125, 126], "commun": [3, 5, 10, 11, 12, 13, 18, 19, 22, 24, 27, 41, 44, 45, 47, 49, 50, 56, 57, 67, 70, 75, 76, 82, 84, 85, 88, 89, 90, 91, 100, 102, 103, 108, 110, 124, 125, 126], "pgr_turnrestrictedpath": [3, 18, 20, 120], "road": [3, 13, 25, 54, 58, 104, 120], "sequenc": [3, 5, 13, 16, 25, 28, 29, 30, 31, 35, 38, 41, 44, 49, 52, 53, 54, 55, 56, 57, 60, 63, 65, 68, 70, 75, 84, 104, 105, 106, 107, 108, 111, 115, 116, 118, 122, 128], "segment": [3, 23, 25, 58, 72, 76, 97, 98, 102, 122, 129], "can": [3, 4, 5, 8, 9, 13, 14, 15, 16, 19, 23, 25, 26, 27, 29, 30, 34, 39, 40, 41, 43, 44, 45, 46, 48, 52, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 76, 82, 83, 84, 88, 89, 96, 97, 98, 106, 107, 111, 112, 113, 114, 115, 116, 120, 122, 124, 128, 129, 130], "taken": [3, 4, 25, 29, 54, 58, 97, 98, 104, 105, 106, 107, 108, 128], "manner": [3, 25, 99], "some": [3, 13, 25, 26, 27, 29, 41, 52, 53, 54, 55, 67, 72, 84, 120, 122, 129, 130], "implicit": [3, 120], "direct": [3, 4, 6, 7, 8, 9, 10, 12, 15, 16, 18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 49, 50, 52, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 75, 77, 82, 84, 86, 87, 88, 89, 96, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 120, 121, 128, 129, 130], "exampl": [3, 20, 26, 34, 42, 43, 48, 49, 50, 56, 63, 64, 67, 73, 74, 75, 77, 78, 79, 80, 81, 85, 86, 90, 92, 93, 94, 95, 99, 101, 103, 104, 109, 120, 122, 129, 130], "one": [3, 8, 9, 13, 25, 29, 34, 52, 53, 54, 55, 63, 64, 67, 83, 84, 85, 86, 100, 102, 117, 120, 122, 128, 130], "wai": [3, 7, 13, 20, 23, 25, 51, 83, 102, 130], "wrong": 3, "even": [3, 25, 58], "insert": [3, 5, 23, 30, 45, 51, 52, 54, 55, 72, 76, 83, 84, 90, 91, 97, 98, 110, 122, 129, 130], "normal": [3, 25], "turn": [3, 25, 26, 84, 104, 105, 106, 120], "left": [3, 15, 25, 47, 52, 59, 72, 84, 97, 98, 105, 106, 113, 114, 116, 122, 128], "right": [3, 15, 25, 47, 54, 59, 72, 106, 113, 114, 116, 122, 128], "henc": [3, 41], "sometim": [3, 100, 105, 106], "intern": [3, 15, 25, 33, 37, 106, 107, 111, 112, 113, 114, 115, 116, 128, 129, 130], "perform": [3, 4, 5, 20, 29, 30, 33, 37, 52, 53, 54, 55, 58, 72, 75, 90, 91, 105, 106, 120], "lookahead": 3, "over": [3, 23, 25, 42, 65, 71, 72, 91, 97, 98, 105, 106, 116, 122], "dijkstra": [3, 6, 17, 20, 25, 28, 29, 38, 39, 40, 41, 44, 57, 60, 61, 62, 65, 66, 104, 107, 111, 112, 113, 114, 115, 118, 120, 121, 129, 130], "order": [3, 6, 8, 14, 15, 18, 23, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 84, 86, 92, 93, 94, 95, 97, 99, 101, 102, 103, 105, 106, 107, 111, 112, 113, 114, 115, 116, 120, 128, 129, 130], "out": [3, 7, 18, 23, 25, 71, 75, 125], "attempt": [3, 29], "path": [3, 6, 7, 8, 9, 13, 14, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 49, 50, 52, 57, 59, 61, 62, 63, 64, 68, 69, 70, 73, 75, 77, 85, 87, 88, 89, 96, 97, 98, 104, 107, 108, 111, 112, 113, 114, 115, 120, 121, 122, 128, 129, 130], "thi": [3, 4, 5, 6, 7, 8, 9, 13, 15, 16, 19, 20, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 44, 48, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 74, 75, 76, 78, 83, 84, 88, 91, 92, 97, 98, 99, 100, 105, 106, 109, 113, 116, 117, 120, 122, 124, 125, 126, 128, 129, 130], "allow": [3, 5, 6, 13, 25, 58, 63, 64, 90, 91, 104, 105, 106, 107, 108, 120, 128], "pass": [3, 7, 42, 104, 120], "twice": [3, 4, 29, 30], "same": [3, 5, 6, 7, 8, 9, 14, 15, 16, 19, 25, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 49, 50, 55, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 72, 73, 77, 83, 84, 87, 88, 89, 90, 91, 96, 100, 103, 105, 106, 107, 111, 112, 113, 120, 122, 129, 130], "queri": [3, 20, 23, 90, 109, 120, 122], "go": [3, 16, 23, 25, 26, 28, 29, 31, 35, 38, 41, 44, 49, 57, 60, 63, 65, 68, 70, 75, 84, 104, 105, 106, 107, 108, 111, 115, 116, 120, 128], "visit": [3, 4, 5, 25, 29, 30, 59, 79, 81, 93, 95, 120, 128], "On": [3, 4, 23, 52, 53, 63, 64, 72, 84, 97, 98, 120, 122, 124], "network": [3, 13, 19, 20, 25, 27, 42, 44, 54, 58, 60, 84, 97, 98, 104, 120, 122], "u": [3, 4, 6, 7, 8, 9, 14, 15, 16, 17, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 54, 57, 60, 61, 62, 70, 73, 77, 80, 84, 88, 89, 94, 97, 98, 102, 105, 106, 107, 111, 112, 113, 124], "A": [3, 4, 5, 9, 16, 19, 20, 23, 25, 27, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 48, 51, 53, 54, 55, 58, 60, 61, 63, 64, 75, 76, 84, 85, 86, 90, 91, 100, 101, 110, 114, 120, 121, 122, 123], "call": [3, 23, 25, 34, 54, 58, 66, 72, 76, 82, 84, 97, 98, 114, 117, 120, 122], "avoid": [3, 25, 65, 105, 106, 116, 120, 128, 129], "These": [3, 25, 27, 58], "repres": [3, 7, 10, 13, 23, 25, 45, 49, 50, 52, 53, 54, 55, 73, 76, 77, 86, 105, 114, 128], "follow": [3, 4, 5, 7, 10, 16, 19, 23, 25, 26, 27, 29, 30, 49, 50, 52, 53, 54, 55, 58, 60, 63, 64, 76, 83, 84, 86, 90, 91, 99, 103, 104, 105, 106, 108, 116, 120, 122, 124, 129, 130], "r1": 3, "creat": [3, 7, 9, 16, 17, 19, 20, 23, 26, 42, 46, 51, 54, 58, 69, 72, 79, 80, 81, 83, 88, 89, 91, 93, 94, 95, 96, 102, 110, 120, 121, 122, 124], "serial": [3, 23, 25, 122], "primari": [3, 23, 72, 91, 110, 122], "kei": [3, 23, 72, 91, 110, 122], "r2": 3, "INTO": [3, 23, 25, 30, 45, 51, 52, 53, 54, 55, 71, 72, 76, 83, 84, 91, 97, 98, 110, 122], "4": [3, 5, 6, 7, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 129, 130], "7": [3, 5, 7, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 122, 129, 130], "100": [3, 5, 23, 46, 69, 84, 88, 91, 96, 122], "8": [3, 7, 23, 25, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 122, 129, 130], "11": [3, 7, 23, 25, 26, 28, 29, 30, 31, 35, 38, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 120, 122, 129, 130], "10": [3, 4, 5, 7, 23, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 120, 122, 129, 130], "3": [3, 5, 6, 7, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 129, 130], "5": [3, 5, 6, 7, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 122, 129, 130], "9": [3, 5, 7, 23, 25, 28, 29, 30, 31, 35, 38, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 79, 80, 81, 82, 83, 84, 88, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 122], "16": [3, 5, 7, 23, 25, 28, 29, 30, 31, 35, 38, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 84, 86, 88, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 115, 116, 122, 129, 130], "r3": 3, "select": [3, 6, 7, 8, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 129, 130], "r4": 3, "which": [3, 4, 5, 7, 19, 23, 25, 29, 30, 42, 44, 45, 49, 50, 54, 59, 66, 73, 76, 77, 84, 85, 86, 88, 90, 91, 99, 100, 105, 106, 114, 122, 124, 129], "mayb": [3, 25, 75], "administr": [3, 84], "do": [3, 4, 23, 25, 26, 29, 52, 54, 58, 71, 72, 90, 91, 97, 98, 105, 106, 108, 120, 122, 124], "inform": [3, 16, 20, 23, 26, 29, 51, 53, 55, 58, 71, 72, 74, 79, 81, 84, 91, 93, 95, 97, 98, 109, 120, 121, 122, 127, 129], "If": [3, 5, 6, 8, 15, 16, 20, 23, 25, 26, 31, 32, 35, 36, 44, 45, 54, 58, 82, 90, 104, 106, 107, 111, 112, 113, 114, 115, 116, 120, 124, 128, 129, 130], "column": [3, 4, 9, 10, 16, 20, 21, 97, 98, 117, 120, 122, 129, 130], "form": [3, 4, 7, 15, 25, 54, 56, 73, 77, 104, 105, 106, 107, 108, 112, 117, 128], "empti": [3, 16, 19, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 82, 83, 84, 85, 86, 88, 89, 92, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 120, 128], "null": [3, 15, 23, 25, 51, 52, 71, 84, 91, 97, 98, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 122, 128, 129, 130], "element": [3, 25, 104, 105, 106, 107, 108, 128], "rais": [3, 25, 90, 104, 105, 106, 107, 108, 128], "except": [3, 19, 25, 54, 56, 90, 104, 105, 106, 107, 108, 122, 128], "take": [3, 25, 42, 54, 58, 71, 72, 104, 105, 106, 107, 108, 128], "forbidden": [3, 23, 25, 52, 53, 55, 104, 105, 106, 107, 108, 120, 128], "pgr_tsp": [4, 15, 20, 33, 37, 40, 62, 120, 121], "matrix": [4, 6, 7, 8, 9, 16, 18, 20, 25, 33, 37, 40, 56, 62, 73, 77, 113, 120, 121], "cell": [4, 20, 121], "pgr_tspeuclidean": [4, 20, 120, 121], "coordin": [4, 6, 8, 20, 25, 29, 31, 32, 33, 35, 36, 37, 72, 121, 122], "salesperson": [4, 29, 30], "ask": [4, 20, 29, 30, 124], "question": [4, 23, 25, 29, 30, 58, 124], "list": [4, 20, 29, 30, 65, 66, 75, 85, 105, 106, 114, 116, 120, 128], "citi": [4, 29, 122, 129, 130], "between": [4, 5, 7, 16, 18, 19, 20, 22, 23, 29, 30, 41, 42, 44, 52, 54, 63, 64, 65, 68, 70, 72, 73, 77, 84, 90, 91, 100, 103, 105, 106, 116, 121, 122, 128, 129], "pair": [4, 5, 14, 15, 20, 25, 29, 30, 32, 36, 39, 40, 42, 61, 62, 73, 77, 83, 90, 91, 112, 113, 120, 121, 122], "shortest": [4, 6, 7, 8, 9, 14, 15, 16, 18, 20, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 42, 44, 49, 52, 57, 59, 60, 61, 62, 63, 64, 65, 70, 73, 77, 104, 105, 106, 107, 108, 111, 112, 113, 115, 116, 120, 121, 128, 130], "possibl": [4, 5, 20, 21, 25, 29, 30, 45, 59, 67, 84, 86, 87, 89, 99, 117, 123, 129], "exactli": [4, 29, 30, 100], "onc": [4, 25, 26, 29, 30, 54, 59, 82], "wa": [4, 7, 23, 25, 27, 52, 74, 84, 117, 120, 122, 129], "studi": 4, "18th": 4, "centuri": 4, "mathematician": [4, 117], "sir": 4, "william": 4, "rowam": 4, "hamilton": 4, "thoma": 4, "penyngton": 4, "kirkman": 4, "discuss": 4, "about": [4, 26, 28, 65, 74, 105, 106, 107, 108, 111, 115, 116, 122, 124], "work": [4, 5, 6, 7, 8, 14, 15, 20, 23, 25, 31, 32, 34, 35, 36, 40, 42, 43, 45, 47, 48, 51, 54, 58, 59, 62, 63, 64, 72, 75, 82, 83, 84, 85, 86, 101, 113, 120, 122, 129, 130], "found": [4, 20, 23, 25, 26, 27, 44, 65, 90, 91, 100, 104, 105, 106, 108, 112, 116, 120, 124, 128], "book": 4, "theori": [4, 25, 100], "bigg": 4, "et": [4, 54], "al": [4, 54], "1976": 4, "isbn": 4, "13": [4, 7, 23, 25, 26, 28, 29, 30, 31, 35, 38, 41, 43, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 70, 71, 73, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 91, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 115, 116, 120, 122], "978": 4, "0198539162": 4, "0198539169": 4, "believ": 4, "kalr": 4, "menger": 4, "vienna": 4, "harvard": 4, "later": [4, 27], "promot": [4, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 48, 51, 52, 58, 59, 60, 61, 62, 63, 64, 68, 69, 71, 72, 83, 86, 87, 96, 97, 98, 99, 101, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116], "hassler": 4, "whitnei": 4, "merril": 4, "princeton": 4, "detail": [4, 12, 18, 19, 20, 23, 74, 97, 98, 106, 107, 111, 112, 113, 114, 115, 116, 120, 121, 129, 130], "develop": [4, 20, 25, 26, 27, 58, 71, 117, 120, 124], "histori": [4, 120], "combinatori": 4, "till": 4, "1960": 4, "To": [4, 5, 20, 23, 25, 26, 29, 51, 58, 71, 83, 120, 122], "calcul": [4, 5, 8, 9, 16, 17, 18, 19, 20, 22, 23, 25, 28, 29, 33, 37, 40, 42, 46, 49, 50, 52, 54, 58, 62, 68, 69, 71, 72, 73, 76, 77, 80, 82, 85, 86, 87, 88, 89, 94, 96, 108, 112, 113, 115, 121, 122], "number": [4, 5, 6, 7, 23, 25, 28, 31, 32, 33, 34, 35, 36, 37, 44, 48, 52, 53, 54, 55, 56, 58, 63, 64, 67, 75, 83, 85, 86, 88, 89, 90, 91, 99, 108, 115, 123, 129], "differ": [4, 6, 8, 9, 15, 16, 20, 23, 25, 26, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 45, 47, 54, 57, 59, 60, 61, 62, 70, 90, 91, 107, 111, 112, 113, 114, 120, 122, 129, 130], "tour": [4, 29], "through": [4, 13, 19, 25, 42, 46, 52, 54, 58, 65, 69, 88, 89, 96, 99, 105, 106, 116, 124, 129], "n": [4, 28, 108, 115], "There": [4, 5, 6, 8, 19, 23, 25, 31, 32, 35, 36, 46, 51, 52, 58, 69, 75, 83, 86, 87, 88, 89, 90, 91, 96, 112, 113, 122, 124, 129], "choic": [4, 73, 77], "And": [4, 5, 23, 27, 120], "2": [4, 5, 6, 7, 20, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 126, 128, 129, 130], "third": [4, 13, 25], "etc": [4, 23, 27, 120, 129, 130], "multipli": [4, 5, 90, 91], "togeth": [4, 85], "we": [4, 7, 20, 26, 44, 54, 73, 75, 77, 84], "now": [4, 27, 52, 53, 54, 84, 120], "sinc": [4, 23], "depend": [4, 5, 6, 14, 15, 20, 23, 25, 29, 30, 39, 40, 52, 58, 61, 62, 76, 106, 107, 111, 112, 113, 114, 115, 116, 120, 122, 128, 129, 130], "around": 4, "np": [4, 5, 29, 30, 56, 67, 90, 91, 99], "hard": [4, 5, 29, 30, 67, 90, 91, 99], "solut": [4, 5, 25, 29, 30, 51, 90, 91, 97, 98, 104, 105, 106, 120], "long": [4, 29, 30, 54], "worst": [4, 29, 30, 70], "case": [4, 7, 9, 14, 15, 16, 19, 23, 25, 29, 30, 32, 36, 38, 39, 40, 41, 52, 54, 55, 61, 62, 65, 70, 72, 73, 75, 77, 88, 89, 105, 106, 107, 111, 113, 116, 122], "best": [4, 29, 30, 58, 63, 64, 70, 90, 91, 124], "fulli": [4, 29, 30], "obei": [4, 29, 30], "triangl": [4, 15, 29, 30, 40, 62, 113], "inequ": [4, 29, 30], "symmetr": [4, 7, 14, 15, 29, 30, 32, 33, 36, 37, 39, 40, 56, 61, 62, 73, 77, 112, 113], "v": [4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 19, 23, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 111, 112, 113, 117, 122, 125], "much": [4, 29, 30, 88, 89, 120], "start_id": [4, 29, 30], "becom": [4, 5, 29, 30, 129, 130], "end_id": [4, 29, 30], "last": [4, 23, 25, 28, 29, 30, 31, 35, 38, 41, 44, 49, 57, 60, 63, 65, 68, 70, 75, 104, 105, 106, 107, 108, 111, 115, 116, 128], "befor": [4, 5, 23, 29, 30, 54, 58, 66, 79, 80, 81, 90, 91, 93, 97, 98, 102, 120], "NOT": [4, 23, 25, 29, 30, 46, 52, 55, 68, 69, 84, 87, 88, 89, 91, 96, 97, 98, 110, 120, 122], "refer": [4, 5, 20, 74, 109, 120, 121], "approx": [4, 5, 29, 30], "univers": [4, 27, 30], "waterloo": [4, 30], "salesman": [4, 5, 29, 30], "pickup": [5, 18, 90, 91, 122], "problem": [5, 6, 18, 19, 20, 23, 25, 44, 49, 50, 54, 56, 57, 58, 60, 61, 62, 67, 75, 90, 91, 99, 100, 113, 120, 122, 128, 129, 130], "pgr_pickdeliv": [5, 18, 120], "pgr_pickdelivereuclidean": [5, 18, 120], "euclidean": [5, 18], "distribut": [5, 18, 90, 91], "pgr_vrponedepot": [5, 18, 120], "singl": [5, 18, 43, 44, 52, 53, 55, 70, 83, 120, 123], "depot": [5, 18], "vrp": [5, 120], "generalis": 5, "travel": [5, 15, 20, 29, 30, 33, 37, 40, 62, 84, 90, 91, 107, 111, 112, 113, 121], "tsp": [5, 120], "object": 5, "minim": [5, 21, 44, 56, 59, 78, 79, 80, 81, 88, 117, 120], "total": [5, 7, 13, 21, 32, 36, 52, 53, 54, 55, 58, 61, 65, 78, 79, 80, 81, 88, 89, 90, 91, 105, 106, 116, 117, 128, 129, 130], "sever": [5, 23, 25, 26, 66, 114, 120], "variant": 5, "pgrout": [5, 7, 23, 26, 27, 56, 67, 74, 75, 99, 109, 122, 124], "try": [5, 25, 65, 105, 106, 116, 128], "all": [5, 13, 17, 19, 21, 23, 25, 26, 27, 28, 29, 42, 44, 46, 51, 52, 53, 54, 55, 59, 63, 64, 65, 66, 67, 69, 70, 72, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 99, 100, 101, 105, 106, 107, 108, 111, 114, 115, 116, 117, 120, 121, 122, 123, 124, 128, 129, 130], "capacit": [5, 91], "cvrp": 5, "carri": 5, "good": [5, 25, 63, 64, 70, 73, 77], "window": [5, 90, 91, 120], "vrptw": 5, "within": [5, 17, 20, 25, 45, 63, 64, 80, 94, 114, 120, 129], "must": [5, 10, 15, 19, 23, 25, 49, 50, 58, 72, 88, 89, 90], "made": [5, 54, 84, 90, 91, 120], "vrppd": 5, "move": [5, 120], "certain": 5, "other": [5, 16, 20, 23, 25, 27, 42, 44, 45, 51, 54, 67, 70, 71, 72, 83, 97, 98, 100, 101, 112, 113, 115, 120, 121, 122, 124, 127, 128, 129], "No": [5, 17, 25, 33, 37, 53, 58, 80, 90, 91, 94, 108, 110, 115, 120], "multipl": [5, 43, 75, 90, 91, 100, 120], "less": [5, 6, 17, 31, 32, 33, 35, 36, 37, 54, 66, 80, 90, 91, 94, 114], "consid": [5, 7, 15, 16, 23, 25, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 72, 73, 75, 76, 77, 83, 85, 90, 91, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 124, 128, 129, 130], "better": [5, 90, 91, 120], "durat": [5, 90, 91], "wait": [5, 54, 90, 91], "cvrppdtw": 5, "rel": [5, 15, 16, 18, 22, 25, 28, 31, 35, 38, 41, 42, 44, 57, 60, 63, 65, 68, 70, 72, 75, 90, 91, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 128, 129, 130], "servic": [5, 90, 91, 122, 124], "open": [5, 25, 90, 91, 122], "close": [5, 20, 25, 58, 72, 90, 91, 106, 107, 111, 112, 113, 114, 116, 120, 121, 122, 127], "request": [5, 14, 20, 27, 32, 36, 39, 61, 120], "custom": [5, 90, 91], "speed": [5, 6, 13, 25, 54, 58, 70, 90, 91, 122], "max_cycl": [5, 52, 90, 91], "maximum": [5, 19, 20, 46, 56, 59, 68, 69, 86, 87, 88, 89, 90, 91, 96, 99, 121], "cycl": [5, 21, 29, 41, 45, 55, 57, 90, 91], "initial_sol": [5, 90, 91], "initi": [5, 90, 91], "One": [5, 7, 20, 29, 84, 90, 91, 120], "per": [5, 25, 54, 63, 64, 90, 91], "truck": [5, 90, 91, 120], "push": [5, 19, 20, 87, 88, 89, 90, 91, 96, 121], "front": [5, 90, 91, 122], "back": [5, 20, 54, 90, 91, 120], "6": [5, 7, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 122, 129, 130], "common": [5, 20, 25, 27, 83, 86, 124], "both": [5, 15, 23, 25, 26, 29, 41, 42, 52, 59, 63, 64, 72, 106, 107, 111, 112, 113, 114, 115, 116, 120, 122, 128, 129, 130], "p_open": [5, 90, 91, 122], "p_close": [5, 90, 91, 122], "p_servic": [5, 90, 91, 122], "load": [5, 90, 91], "d_open": [5, 90, 91, 122], "d_close": [5, 90, 91, 122], "d_servic": [5, 90, 91, 122], "unload": [5, 90, 91], "p_node_id": [5, 90, 91, 122], "match": [5, 19, 20, 86, 90, 120, 121], "d_node_id": [5, 90, 91, 122], "p_x": [5, 91, 122], "p_y": [5, 91, 122], "d_x": [5, 91, 122], "d_y": [5, 91, 122], "maiximum": [5, 90, 91], "start_open": [5, 90, 91, 122], "start_clos": [5, 90, 91, 122], "start_servic": [5, 90, 91], "end_open": [5, 90, 91], "end_clos": [5, 90, 91], "end_servic": [5, 90, 91], "start_node_id": [5, 90], "end_node_id": [5, 90], "start_x": [5, 91, 122], "start_i": [5, 91, 122], "end_x": [5, 91], "end_i": [5, 91], "vehicle_seq": [5, 90, 91], "stop_seq": [5, 90, 91], "union": [5, 25, 31, 35, 51, 52, 53, 55, 63, 64, 90, 91, 97, 102, 105, 106, 120], "n_": [5, 90, 91], "th": [5, 90, 91, 107, 111], "violat": [5, 90, 91, 108], "happen": [5, 25, 29, 58, 84, 90, 91, 103], "overload": [5, 20, 90, 91, 120], "underload": [5, 90, 91], "m_": [5, 90, 91], "after": [5, 23, 26, 41, 52, 53, 54, 56, 71, 75, 90, 91, 122], "kind": [5, 20, 25, 90, 91, 106, 107, 111, 112, 113, 114, 115, 116, 120, 128, 129], "involv": [5, 23, 25, 26, 54, 84, 90, 91, 129], "leav": [5, 90, 91], "previou": [5, 72, 84, 90, 91, 120], "sum": [5, 7, 14, 15, 19, 32, 36, 39, 40, 61, 62, 73, 77, 90, 91, 100, 105, 106, 112, 113], "spent": [5, 90, 91], "depart": [5, 25, 63, 64, 65, 90, 91, 105, 106, 116, 128], "_time": [5, 90, 91], "continu": [5, 59, 128], "defin": [5, 16, 19, 25, 29, 41, 58, 75, 107, 111, 112, 115], "consider": [5, 42, 72], "consist": [5, 25, 85, 122, 123], "section": [5, 25, 52, 60, 65, 84, 105, 106, 116, 120, 128, 129, 130], "give": [5, 13, 23, 25, 27, 54, 83, 85, 97, 98, 120, 129], "insight": 5, "how": [5, 20, 30, 54, 84, 124, 129, 130], "measur": [5, 42], "volum": 5, "m": [5, 6, 56], "area": [5, 25], "stack": 5, "kg": 5, "box": [5, 7, 73, 77], "fit": [5, 120], "seat": 5, "equal": [5, 17, 19, 63, 64, 66, 67, 80, 90, 94, 114, 129, 130], "dimens": 5, "appl": 5, "feather": 5, "transport": 5, "pack": 5, "convers": [5, 6, 25], "show": [5, 30, 47, 54, 59, 63, 64, 91, 106, 107, 111, 116, 129, 130], "let": [5, 6, 7, 8, 14, 15, 31, 32, 33, 35, 36, 37, 39, 40, 61, 62, 73, 77, 113], "f": [5, 7, 23, 76], "_box": 5, "_weight": 5, "convert": [5, 15, 25, 84, 91, 106, 107, 111, 112, 113, 114, 115, 116, 120, 122, 128, 129, 130], "suppos": [5, 25], "driver": [5, 20, 120], "shift": 5, "00": 5, "am": 5, "30": [5, 7, 28, 30, 46, 49, 68, 69, 75, 88, 90, 91, 96, 107, 110, 111, 122], "pm": 5, "minut": 5, "mean": [5, 112, 113, 117, 122], "min": [5, 6, 15, 18, 19, 29, 31, 32, 33, 35, 36, 37, 40, 62, 100, 113, 120], "sec": 5, "hour": 5, "60": [5, 7, 28, 75, 88, 91, 107, 110, 111, 122], "175": [5, 110], "54": [5, 28, 75, 91, 107, 111, 120, 122], "990": 5, "540": 5, "act": [5, 83], "alreadi": [5, 23, 54, 58, 124], "desir": [5, 25, 28], "should": [5, 25, 27, 52, 71, 86, 120], "faster": [5, 8, 9, 25, 38, 39, 40, 44, 70, 120], "slower": [5, 41], "lat": [5, 6], "lon": [5, 6], "would": [5, 6, 7, 14, 15, 32, 34, 36, 39, 40, 41, 61, 62, 73, 77, 100, 112, 113], "averag": [5, 6, 7, 15, 40, 62, 70, 113], "veloc": 5, "sai": [5, 6, 27], "25m": [5, 6], "latitud": [5, 6], "45": [5, 6, 7, 28, 75, 91, 107, 111, 122], "longitud": [5, 6], "78846": [5, 6], "81m": [5, 6], "3153": [5, 6], "111319": [5, 6], "46": [5, 6, 28, 75, 91, 107, 111, 122], "4452": [5, 6], "d": [5, 7, 23, 91, 99, 122], "t": [5, 23, 25, 41, 46, 53, 55, 68, 69, 76, 87, 88, 89, 96, 98, 100, 120], "equival": [5, 31, 34, 35, 46, 65, 68, 69, 87, 88, 89, 96, 105, 106, 116], "10m": 5, "600m": 5, "36": [5, 28, 68, 75, 91, 107, 111, 122], "km": 5, "hr": 5, "meter": [5, 6], "1000m": 5, "length": [5, 6, 30, 45, 51, 97, 98], "frac": [5, 25, 72, 122], "600": [5, 88, 91, 122], "0016min": 5, "6min": 5, "0277hr": 5, "1km": 5, "http": [5, 6, 7, 8, 13, 19, 20, 26, 27, 28, 31, 35, 38, 39, 41, 44, 48, 57, 60, 61, 63, 64, 65, 69, 70, 84, 86, 87, 91, 96, 100, 102, 103, 110, 120, 122, 124], "en": [5, 6, 8, 19, 20, 26, 28, 31, 35, 38, 39, 41, 44, 48, 57, 60, 61, 63, 64, 65, 69, 70, 84, 86, 87, 96, 100, 102, 103, 110, 120], "org": [5, 6, 8, 19, 20, 26, 27, 28, 31, 35, 38, 39, 41, 44, 48, 57, 60, 61, 63, 64, 65, 69, 70, 84, 86, 87, 96, 100, 102, 103, 110, 120, 124], "wiki": [5, 6, 8, 19, 26, 28, 31, 35, 38, 39, 41, 44, 48, 57, 60, 61, 63, 64, 65, 69, 70, 84, 86, 87, 96, 100, 102, 103, 110], "vehicle_routing_problem": [5, 110], "sampl": [5, 20, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 129, 130], "data": [5, 20, 23, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 120, 129, 130], "pronounc": [6, 8], "star": [6, 8, 120], "solv": [6, 16, 25, 44, 57, 60, 61, 62, 75, 90, 91, 100, 113, 120, 128], "most": [6, 25, 26, 27, 28, 42, 54, 63, 64, 67, 75, 100, 108, 115, 117, 120], "evalu": [6, 42, 120], "sub": [6, 25, 105], "overal": 6, "pgr_astar": [6, 8, 20, 23, 25, 33, 37, 120, 121], "pgr_astarcost": [6, 14, 20, 120, 121], "pgr_astarcostmatrix": [6, 15, 20, 120, 121], "main": [6, 7, 8, 9, 10, 14, 15, 16, 19, 21, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 62, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 107, 111, 112, 113, 117, 120], "characterist": [6, 7, 8, 10, 16, 19, 21, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 62, 67, 69, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 107, 111, 112, 113, 117, 122, 123], "correspond": [6, 8, 17, 20, 22, 23, 31, 32, 33, 35, 36, 37, 54, 66, 80, 83, 94, 106, 107, 111, 112, 113, 114, 115, 116, 121, 122], "row": [6, 7, 8, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 129, 130], "infti": [6, 8, 9, 15, 16, 31, 32, 35, 36, 38, 39, 40, 41, 57, 60, 61, 62, 70, 107, 111, 112, 113], "random": [6, 8, 29, 30, 31, 32, 35, 36, 70], "run": [6, 8, 9, 10, 16, 21, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 59, 60, 61, 63, 64, 67, 69, 70, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 107, 111, 112, 117, 120], "time": [6, 7, 8, 9, 10, 13, 16, 21, 25, 27, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 67, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 107, 111, 112, 117, 122], "o": [6, 7, 8, 9, 10, 16, 21, 26, 31, 32, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 56, 57, 59, 60, 61, 63, 64, 67, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 107, 111, 112, 117], "e": [6, 7, 8, 9, 10, 16, 19, 20, 21, 23, 25, 26, 31, 32, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 67, 69, 70, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 106, 107, 111, 112, 113, 114, 115, 116, 117, 120, 122, 125], "log": [6, 8, 9, 16, 21, 31, 32, 35, 36, 38, 39, 40, 44, 56, 60, 61, 63, 64, 71, 77, 78, 79, 80, 81, 82, 92, 93, 94, 95, 100, 107, 111, 112, 117], "valid": [6, 20, 23, 25, 31, 32, 33, 35, 36, 37, 41, 57, 102, 103, 106, 107, 111, 112, 113, 114, 115, 116, 120, 129, 130], "h": [6, 31, 32, 33, 35, 36, 37], "compar": [6, 30, 31, 32, 33, 35, 36, 37, 91, 120], "ab": [6, 31, 32, 33, 35, 36, 37, 107, 111], "max": [6, 15, 19, 20, 31, 32, 33, 35, 36, 37, 40, 46, 62, 68, 69, 72, 84, 87, 88, 89, 96, 113, 120, 121, 122], "delta": [6, 31, 32, 33, 35, 36, 37, 67], "sqrt": [6, 31, 32, 33, 35, 36, 37, 110], "unit": [6, 31, 32, 33, 35, 36, 37, 83, 90, 91, 124], "manipul": [6, 31, 32, 33, 35, 36, 37, 54], "epsilon": [6, 31, 32, 33, 35, 36, 37], "restrict": [6, 18, 20, 31, 32, 33, 35, 36, 37, 120, 121, 129], "avail": [6, 8, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 124], "handl": [6, 8, 31, 32, 33, 35, 36, 37, 72, 90, 91, 129], "x_1": 6, "x_0": 6, "y_1": 6, "y_0": 6, "analysi": [6, 20, 25, 27, 97, 98], "locat": [6, 20, 72, 90, 91, 106, 107, 111, 112, 113, 114, 115, 116, 120, 122, 129, 130], "81": [6, 75, 91, 122], "bidirect": [6, 20, 25, 31, 35, 36, 37, 38, 39, 40, 54, 120, 121], "_search_algorithm": [6, 8, 31, 35], "combin": [7, 13, 14, 15, 20, 40, 62, 100, 113, 120], "pgr_floydwarshal": [7, 20, 77, 120, 121], "floyd": [7, 20, 73, 120, 121], "warshal": [7, 20, 73, 120, 121], "pgr_johnson": [7, 20, 73, 120, 121], "johnson": [7, 20, 75, 77, 120, 121], "infin": [7, 73, 77, 108], "non": [7, 9, 15, 16, 25, 38, 39, 40, 44, 57, 59, 60, 61, 62, 70, 73, 77, 100, 107, 111, 112, 113], "store": [7, 14, 15, 23, 25, 32, 36, 39, 40, 54, 61, 62, 72, 73, 77, 97, 98, 112, 113, 122, 129], "so": [7, 14, 17, 25, 32, 36, 39, 61, 67, 73, 77, 80, 94, 120, 124], "uniqu": [7, 14, 15, 32, 36, 39, 40, 61, 62, 72, 73, 77, 112, 113, 122], "recommend": [7, 23, 25, 73, 77, 122, 124], "bound": [7, 25, 73, 77, 88, 89], "than": [7, 8, 9, 17, 23, 25, 28, 29, 34, 38, 39, 40, 41, 42, 52, 53, 54, 57, 58, 63, 64, 66, 67, 70, 73, 77, 80, 84, 88, 89, 90, 94, 100, 102, 108, 114, 115], "3500": [7, 73, 77], "boolean": [7, 15, 16, 20, 23, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 75, 76, 77, 83, 86, 97, 98, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 120, 128, 129, 130], "true": [7, 15, 16, 23, 25, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 75, 76, 77, 83, 88, 97, 98, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 128, 129, 130], "fals": [7, 15, 16, 23, 25, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 75, 76, 77, 83, 86, 97, 98, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 120, 128, 129, 130], "server": [7, 26, 27, 120, 124], "comput": [7, 16, 41, 54, 60, 61, 62, 70, 113], "amd": 7, "64": [7, 28, 75, 91, 107, 120, 122], "cpu": 7, "4g": 7, "memori": [7, 75], "trusti": 7, "bbox": 7, "122": 7, "wget": [7, 26], "progress": 7, "dot": 7, "mega": 7, "sampledata": [7, 25, 120], "osm": [7, 25], "www": [7, 13, 26, 27, 91, 122, 124], "overpass": 7, "api": 7, "de": [7, 25, 58], "xapi": 7, "meta": 7, "osm2pgrout": [7, 25, 27], "alpha": [7, 86, 120], "createdb": [7, 25, 26], "portland": 7, "psql": [7, 25, 26], "extens": [7, 23, 25, 26, 27, 75, 120], "postgi": [7, 20, 23, 25, 26, 27, 120, 124], "densiti": 7, "extrem": 7, "low": [7, 54, 120], "size": [7, 13, 23, 25, 52, 53, 55, 58, 65, 100, 105, 106, 116], "were": [7, 23, 53, 55, 84, 120], "execut": [7, 19, 25, 46, 69, 88, 89, 96, 104, 105, 106, 116, 120, 122], "count": [7, 20, 22, 23, 58, 75, 121], "gid": 7, "present": [7, 15, 25, 43, 67, 75, 82, 84, 99, 106, 107, 111, 112, 113, 114, 115, 116, 128, 129, 130], "record": [7, 120], "dfrac": 7, "500": 7, "18e": 7, "1346": 7, "14": [7, 20, 23, 25, 26, 28, 29, 30, 31, 32, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 70, 71, 75, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 106, 107, 108, 110, 111, 114, 115, 116, 120, 122], "1000": 7, "36e": 7, "2655": 7, "23": [7, 28, 30, 49, 66, 68, 75, 84, 91, 104, 107, 111, 115, 122], "18": [7, 23, 25, 28, 30, 31, 35, 38, 41, 43, 44, 48, 49, 51, 54, 55, 66, 67, 68, 70, 71, 75, 78, 84, 86, 90, 91, 97, 100, 104, 107, 110, 111, 114, 115, 120, 122], "1500": 7, "55e": 7, "4110": 7, "37": [7, 28, 68, 75, 84, 91, 107, 111, 122], "34": [7, 28, 49, 50, 68, 75, 90, 91, 107, 110, 111, 122], "2000": 7, "73e": 7, "5676": 7, "56": [7, 26, 28, 75, 91, 107, 111, 120, 122], "2500": 7, "89e": 7, "7177": 7, "84": [7, 75, 91, 122], "51": [7, 28, 75, 91, 107, 110, 111, 122], "3000": 7, "07e": 7, "8778": 7, "28": [7, 28, 30, 49, 68, 75, 84, 91, 107, 111, 115, 122], "68": [7, 28, 75, 91, 107, 122], "24e": 7, "10526": 7, "08": 7, "95": [7, 91, 110, 122], "4000": 7, "41e": 7, "12484": 7, "24": [7, 23, 25, 28, 30, 49, 51, 68, 75, 84, 91, 104, 107, 111, 115, 120, 122], "4500": 7, "58e": 7, "14354": 7, "49": [7, 28, 75, 91, 107, 111, 122], "47": [7, 28, 75, 91, 107, 111, 122], "5000": [7, 30], "76e": 7, "16503": 7, "05": 7, "78": [7, 28, 75, 91, 122], "5500": 7, "93e": 7, "18623": 7, "53": [7, 28, 75, 91, 107, 111, 120, 122], "03": [7, 26], "6000": 7, "11e": 7, "20710": 7, "6500": 7, "28e": 7, "22752": 7, "99": [7, 91, 122], "7000": 7, "46e": 7, "24687": 7, "82": [7, 75, 91, 122], "12": [7, 23, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 78, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 120, 122, 129, 130], "7500": 7, "64e": 7, "26861": 7, "94": [7, 75, 91, 110, 122], "8000": 7, "83e": 7, "29050": 7, "15": [7, 23, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 115, 116, 122, 129, 130], "61": [7, 28, 75, 91, 107, 111, 122], "09": 7, "8500": 7, "01e": 7, "31693": 7, "17": [7, 23, 25, 28, 29, 30, 31, 35, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 67, 68, 69, 70, 71, 75, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 114, 115, 116, 122, 129, 130], "43": [7, 28, 75, 91, 107, 111, 122], "63": [7, 28, 75, 91, 107, 111, 122], "9000": 7, "17e": 7, "33879": 7, "19": [7, 25, 28, 30, 31, 35, 38, 41, 49, 52, 55, 66, 68, 70, 75, 84, 91, 97, 98, 104, 107, 111, 114, 115, 122], "9500": 7, "35e": 7, "36287": 7, "20": [7, 25, 28, 29, 30, 31, 35, 38, 41, 46, 49, 52, 55, 66, 68, 69, 70, 75, 84, 88, 90, 91, 96, 104, 107, 110, 111, 114, 115, 120, 122], "77": [7, 28, 75, 91, 122], "10000": 7, "52e": 7, "38491": 7, "26": [7, 28, 30, 49, 53, 54, 68, 75, 84, 91, 107, 111, 115, 122], "two": [7, 8, 9, 13, 19, 20, 21, 23, 25, 42, 45, 52, 54, 55, 63, 64, 67, 68, 71, 76, 83, 84, 85, 99, 100, 106, 107, 111, 112, 113, 114, 116, 120, 121, 124, 129, 130], "higher": [7, 42], "WITH": [7, 20, 23, 25, 30, 52, 53, 55, 58, 71, 72, 84, 91, 97, 98, 105, 106, 110, 120, 122], "buffer": 7, "AS": [7, 23, 25, 30, 31, 32, 35, 36, 38, 39, 41, 44, 46, 51, 52, 53, 55, 57, 58, 60, 61, 63, 64, 68, 69, 70, 71, 72, 84, 87, 88, 89, 90, 91, 96, 97, 98, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 122], "st_buffer": [7, 25, 72], "st_centroid": 7, "st_extent": 7, "the_geom": [7, 120], "st_envelop": 7, "001": [7, 23], "44": [7, 28, 75, 91, 107, 111, 122], "0608": 7, "1197": 7, "002": 7, "0251": 7, "4330": 7, "003": 7, "223": 7, "0122": 7, "18849": 7, "004": 7, "358": [7, 91, 122], "0085": 7, "71834": 7, "005": 7, "470": 7, "0070": 7, "116290": 7, "22": [7, 28, 30, 31, 35, 38, 41, 49, 52, 66, 68, 70, 75, 84, 91, 104, 107, 110, 111, 115, 120, 122], "006": 7, "639": 7, "0055": 7, "207030": 7, "27": [7, 28, 30, 49, 68, 75, 84, 91, 107, 110, 111, 115, 122], "007": 7, "843": 7, "0043": 7, "346930": 7, "38": [7, 28, 68, 75, 91, 107, 111, 122], "008": 7, "996": 7, "0037": 7, "469936": 7, "90": [7, 75, 91, 122], "009": 7, "1146": 7, "0032": 7, "613135": 7, "62": [7, 28, 75, 91, 107, 110, 111, 122], "010": 7, "1360": 7, "0027": 7, "849304": 7, "87": [7, 75, 91, 122], "011": 7, "1573": 7, "0024": 7, "1147101": 7, "65": [7, 28, 75, 91, 107, 122], "04": [7, 120], "012": 7, "1789": 7, "0021": 7, "1483629": 7, "72": [7, 28, 75, 91, 122], "35": [7, 28, 49, 68, 75, 84, 91, 107, 110, 111, 122], "013": 7, "1975": 7, "0019": 7, "1846897": 7, "86": [7, 75, 91, 122], "014": 7, "2281": 7, "0017": 7, "2438298": 7, "015": 7, "2588": [7, 120], "0015": 7, "3156007": 7, "80": [7, 28, 41, 46, 69, 75, 87, 88, 91, 96, 100, 110, 122], "016": 7, "2958": 7, "0013": 7, "4090618": 7, "67": [7, 28, 75, 91, 107, 122], "76": [7, 28, 75, 91, 122], "017": 7, "3247": 7, "0012": 7, "4868919": 7, "48": [7, 28, 75, 91, 107, 111, 122], "pgr_bdastar": [8, 20, 23, 25, 37, 120, 121], "obtain": [8, 19, 20, 25, 30, 54, 72, 97, 98, 108, 121], "pgr_bdastarcost": [8, 14, 20, 120, 121], "pgr_bdastarcostmatrix": [8, 15, 20, 120, 121], "simultan": [8, 9], "forward": [8, 9], "backward": [8, 9, 120], "meet": [8, 9], "middl": [8, 9], "larg": [8, 9, 13, 25, 38, 39, 40], "bewtween": [8, 9, 38, 39, 40], "expect": [8, 9, 38, 39, 40], "termin": [8, 9, 38, 39, 40], "heurist": [8, 23, 31, 32, 33, 35, 36, 37, 54, 120], "factor": [8, 23, 25, 31, 32, 33, 35, 36, 37, 90, 91, 120], "pgr_bddijkstra": [9, 20, 23, 25, 40, 54, 120, 121], "pgr_bddijkstracost": [9, 14, 20, 120, 121], "pgr_bddijkstracostmatrix": [9, 15, 20, 120, 121], "interpret": [9, 16, 38, 39, 40, 44, 60, 61, 129, 130], "includ": [9, 15, 16, 17, 25, 26, 27, 29, 38, 39, 40, 52, 53, 55, 57, 60, 61, 62, 70, 80, 84, 94, 106, 107, 111, 112, 113, 114, 115, 116, 117, 120, 123, 124, 129, 130], "wors": [9, 38, 39, 40], "scenario": [9, 38, 39, 40], "pgr_chinesepostman": [10, 18, 120], "pgr_chinesepostmancost": [10, 18, 120], "logv": [10, 49, 50, 88, 89], "pgr_sequentialvertexcolor": [11, 20, 23, 118, 120], "greedi": [11, 21, 99, 117, 118], "approach": [11, 18, 51, 54, 99, 118], "pgr_bipartit": [11, 18, 20, 23, 120], "bipartit": [11, 18, 45, 67], "df": [11, 18, 20, 51, 101, 121, 126], "pgr_edgecolor": [11, 18, 20, 23, 120], "vize": [11, 18, 67], "theorem": [11, 18, 67], "pgr_connectedcompon": [12, 20, 23, 25, 100, 103, 120, 121], "pgr_strongcompon": [12, 20, 23, 120, 121], "strongli": [12, 20, 23, 25, 101, 121], "pgr_biconnectedcompon": [12, 20, 23, 120, 121], "biconnect": [12, 20, 34, 43, 121], "pgr_articulationpoint": [12, 20, 120, 121], "articul": [12, 20, 34, 43, 121], "pgr_bridg": [12, 20, 23, 120, 121], "bridg": [12, 20, 23, 25, 48, 121], "pgr_makeconnect": [12, 18, 120], "pgr_contract": [13, 20, 25, 55, 120, 121], "pgr_contractiondeadend": [13, 52, 118, 120], "pgr_contractionlinear": [13, 52, 118, 120], "pgr_contractionhierarchi": [13, 18, 120], "electr": [13, 25, 58], "reduc": [13, 23, 25, 52, 53, 54, 55], "remov": [13, 23, 25, 29, 34, 42, 43, 48, 51, 52, 53, 54, 55, 72, 101, 105, 106, 129, 130], "ad": [13, 23, 25, 28, 31, 35, 52, 54, 60, 66, 79, 80, 81, 85, 93, 94, 95, 97, 98, 117, 120, 122, 129, 130], "origin": [13, 19, 23, 25, 29, 30, 46, 52, 53, 54, 55, 69, 72, 83, 86, 88, 96, 97, 98, 120, 129, 130], "ones": [13, 25, 54], "kept": [13, 25, 30, 51, 54, 97, 98, 120, 129, 130], "method": [13, 25, 52, 54, 84, 120], "decreas": [13, 41, 52, 53, 54, 55], "space": [13, 23, 42, 52, 53, 55, 76], "particularli": 13, "those": [13, 25, 34, 41, 52, 58, 72, 85, 104, 122, 129], "flexibl": 13, "framework": 13, "futur": [13, 54, 75, 120], "support": [13, 20, 26, 27, 28, 29, 30, 31, 35, 38, 73, 77, 109, 120], "three": [13, 25, 42, 51, 52, 55, 85], "dead": [13, 23, 55], "linear": [13, 18, 24, 53, 56, 57, 102, 120], "hierarchi": [13, 120], "iter": [13, 88, 89, 99], "procedur": [13, 54], "its": [13, 14, 15, 23, 29, 39, 40, 48, 52, 53, 54, 55, 61, 62, 76, 82, 83, 99, 100, 113, 129], "own": [13, 84, 122], "user": [13, 15, 20, 23, 25, 26, 27, 40, 62, 113, 120, 124], "forbid": [13, 84], "cmu": 13, "edu": 13, "af": 13, "academ": 13, "class": 13, "15210": 13, "f12": 13, "lectur": 13, "lecture16": 13, "pdf": [13, 26], "ae": 13, "iti": 13, "kit": 13, "download": [13, 26], "diploma_thesis_geisberg": 13, "jlazarsfeld": 13, "github": [13, 20, 26, 120], "io": 13, "ch": 13, "150": [13, 88], "project": [13, 20, 25, 27, 120], "content": [13, 26, 63, 64], "pgr_dijkstracost": [14, 16, 20, 52, 120, 121, 130], "pgr_withpointscost": [14, 20, 23, 120, 121, 130], "pgr_dijkstranearcost": [14, 16, 63, 118, 120], "famili": [14, 15, 18, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 46, 49, 50, 51, 52, 53, 54, 55, 58, 61, 62, 63, 64, 65, 68, 69, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 94, 95, 96, 101, 104, 106, 107, 111, 112, 113, 115, 116, 118, 120, 123, 129], "belong": [14, 15, 34, 40, 43, 44, 51, 52, 53, 54, 62, 101, 103, 107, 111, 112, 113, 120, 130], "paramet": [14, 19, 20, 23, 120], "ascend": [14, 15, 32, 34, 36, 39, 40, 41, 43, 44, 47, 48, 51, 52, 53, 54, 55, 57, 59, 61, 62, 67, 70, 99, 101, 107, 111, 112, 113], "pgr_dijkstracostmatrix": [15, 16, 20, 29, 90, 120, 121, 130], "pgr_withpointscostmatrix": [15, 20, 23, 29, 120, 121, 130], "sale": [15, 20, 29, 30, 33, 37, 40, 62, 113, 121], "person": [15, 20, 25, 29, 30, 33, 37, 40, 62, 113, 121], "collect": [15, 97, 98, 120], "directli": [15, 23, 40, 58, 62, 113], "respons": [15, 23, 40, 62, 113], "By": [15, 19, 23, 40, 46, 62, 69, 88, 89, 96, 113], "geometr": [15, 23, 40, 62, 85, 113], "harmon": [15, 40, 62, 113], "mirror": [15, 40, 62, 113], "imag": [15, 30, 40, 47, 59, 62, 83, 113, 129, 130], "lower": [15, 20, 40, 62, 113, 120], "fix": [15, 29, 40, 52, 54, 62, 72, 113, 120, 122, 129], "pid": [15, 23, 25, 29, 72, 106, 107, 111, 112, 113, 114, 115, 116, 122, 128, 129, 130], "automat": [15, 25, 106, 107, 111, 112, 113, 114, 115, 116, 120, 128, 129, 130], "closest": [15, 25, 51, 66, 72, 106, 107, 111, 112, 113, 114, 115, 116, 120, 122, 128, 129, 130], "char": [15, 25, 72, 106, 107, 111, 112, 113, 114, 115, 116, 122, 128, 129, 130], "b": [15, 23, 25, 63, 64, 72, 85, 106, 107, 110, 111, 112, 113, 114, 115, 116, 122, 128, 129, 130], "r": [15, 23, 25, 29, 54, 72, 106, 107, 111, 112, 113, 114, 115, 116, 122, 128, 129, 130], "l": [15, 23, 25, 26, 72, 83, 106, 107, 111, 112, 113, 114, 115, 116, 122, 128, 129, 130], "pgr_drivingdist": [16, 17, 20, 25, 114, 120, 121, 130], "catchament": [16, 20, 80, 94, 121], "k": [16, 20, 28, 99, 108, 115, 120, 121, 130], "pgr_dijkstravia": [16, 25, 105, 116, 118, 120, 128, 130], "pgr_dijkstranear": [16, 25, 64, 84, 118, 120], "nearest": [16, 63, 64, 72, 118, 122], "conceiv": [16, 60, 61, 62, 113], "dutch": [16, 60, 61, 62, 113], "scientist": [16, 60, 61, 62, 113], "edsger": [16, 60, 61, 62, 113], "1956": [16, 41, 60, 61, 62, 113], "produc": [16, 54, 57, 59, 60, 61, 62, 67, 99, 103, 113, 117], "departur": [16, 19, 25, 28, 31, 32, 35, 36, 38, 39, 41, 44, 46, 57, 60, 61, 63, 64, 68, 69, 70, 87, 88, 89, 96, 104, 107, 108, 111, 112, 115, 129, 130], "start_": 16, "end_": 16, "id_i": [16, 19], "source_i": [16, 19, 25], "target_i": [16, 19, 25], "cost_i": 16, "revers": [16, 18, 19, 23, 24, 25, 56, 60, 83, 84, 122], "_cost_i": 16, "bigcup": [16, 19], "g_d": [16, 25], "cup": [16, 19, 25, 60], "begin": [16, 19, 25, 28, 31, 35, 38, 41, 44, 57, 60, 63, 65, 68, 70, 75, 104, 105, 106, 107, 108, 110, 111, 115, 116, 128], "quad": [16, 19], "_cost": [16, 29], "varnoth": [16, 19], "neq": [16, 19, 25], "g_u": 16, "start_v": [16, 49, 75], "g": [16, 19, 25, 67, 83, 120, 123, 124, 125], "if6": 16, "if5": 16, "Then": [16, 19, 54, 100], "boldsymbol": [16, 19], "pi": 16, "_seq_i": 16, "node_i": 16, "edge_i": 16, "agg": [16, 29], "_seq_": 16, "node_1": 16, "node_": 16, "foral": 16, "id_": 16, "cost_": [16, 25], "displaystyl": 16, "sum_": 16, "node_k": 16, "word": [16, 25, 128], "term": [16, 25, 44, 70], "_seq": 16, "pgr_primdd": [17, 20, 23, 25, 117, 120, 121], "pgr_kruskaldd": [17, 20, 21, 25, 120, 121], "pgr_withpointsdd": [17, 20, 25, 120, 121, 130], "extract": [17, 20, 26, 58, 66, 71, 79, 80, 81, 93, 94, 95, 114, 121, 127], "conform": [17, 66, 80, 94, 114], "new": [17, 20, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 120, 124, 125, 129, 130], "inclus": [17, 66, 79, 80, 81, 93, 94, 95, 114], "predecessor": [17, 25, 27, 54, 94, 95, 114], "pgr_maxflowmincost": [18, 19, 25, 89, 120], "pgr_maxflowmincost_cost": [18, 19, 25, 120], "chines": [18, 26, 49, 50, 120], "postman": [18, 49, 50, 120], "contract": [18, 20, 58, 118, 120, 121], "transform": [18, 23, 29, 83, 103, 118, 129], "pgr_linegraphful": [18, 120, 125], "line": [18, 25, 29, 55, 58, 63, 64, 72, 76, 84, 118, 125], "pgr_breadthfirstsearch": [18, 20, 23, 25, 120, 126], "breath": [18, 79, 93, 126], "pgr_binarybreadthfirstsearch": [18, 20, 23, 25, 120, 126], "pgr_cuthillmckeeord": [18, 24, 120], "cuthil": [18, 24, 56], "mckee": [18, 24, 56], "pgr_topologicalsort": [18, 20, 23, 24, 120], "acycl": [18, 24, 57, 102], "pgr_betweennesscentr": [18, 22, 120], "central": [18, 22, 42], "brand": [18, 22, 42], "trsp": [18, 20, 104, 105, 106, 107, 120, 121, 129, 130], "categori": [18, 21, 25, 28, 29, 32, 33, 36, 37, 40, 47, 59, 62, 65, 72, 78, 79, 80, 81, 90, 91, 92, 93, 94, 95, 105, 106, 107, 108, 111, 112, 113, 115, 116, 117, 118, 120, 122, 126, 130], "vehicl": [18, 25, 58, 129], "deliveri": [18, 90, 91, 122], "pgr_bellmanford": [18, 20, 23, 25, 120], "pgr_dagshortestpath": [18, 20, 23, 120], "pgr_edwardmoor": [18, 20, 23, 25, 120], "planar": [18, 76], "pgr_isplanar": [18, 120], "miscellan": 18, "pgr_lengauertarjandominatortre": [18, 120], "pgr_stoerwagn": [18, 120], "pgr_transitiveclosur": [18, 20, 23, 120], "pgr_hawickcircuit": [18, 120], "pgr_maxflow": [19, 20, 46, 69, 88, 89, 96, 120, 121], "relabel": [19, 20, 87, 88, 89, 96, 121], "pgr_boykovkolmogorov": [19, 20, 25, 68, 69, 96, 120, 121], "boykov": [19, 20, 46, 68, 121], "kolmogorov": [19, 20, 46, 68, 121], "pgr_edmondskarp": [19, 20, 25, 46, 96, 120, 121], "edmond": [19, 20, 69, 121], "karp": [19, 20, 69, 121], "pgr_pushrelabel": [19, 20, 25, 46, 69, 87, 120, 121], "applic": [19, 20, 23, 25, 52, 58, 72, 76, 84, 97, 98, 99, 121, 122, 129], "pgr_edgedisjointpath": [19, 20, 25, 120, 121], "disjoint": [19, 20, 45, 68, 100, 121], "group": [19, 20, 58, 68, 71, 97, 98, 120, 121], "pgr_maxcardinalitymatch": [19, 20, 120, 121], "cardin": [19, 20, 86, 121], "capac": [19, 23, 25, 46, 69, 87, 88, 89, 90, 91, 96, 110, 122], "residu": [19, 25, 46, 69, 88, 89, 96], "output": [19, 28, 31, 35, 38, 41, 44, 45, 46, 47, 52, 57, 58, 59, 60, 66, 67, 68, 69, 70, 72, 75, 79, 80, 81, 88, 89, 93, 94, 95, 96, 99, 102, 103, 108, 111, 112, 113, 114, 115, 129], "zero": [19, 46, 69, 88, 89, 96], "omit": [19, 25, 46, 69, 88, 89, 96], "super": [19, 46, 69, 88, 89, 96], "targetss": [19, 46, 69, 88, 89, 96], "guarante": [19, 29, 46, 59, 69, 88, 89, 96, 104], "outgo": [19, 46, 53, 69, 88, 89, 96], "incom": [19, 46, 53, 69, 88, 89, 96], "actual": [19, 25], "mai": [19, 23, 25, 41, 42, 43, 86], "vari": [19, 25], "reverse_capac": [19, 23, 25, 46, 69, 87, 88, 89, 96, 122], "int": [19, 25, 46, 49, 69, 88, 96, 100], "edges_sql": [19, 25, 46, 69, 72, 88, 96, 112], "send": [19, 25, 88], "exce": 19, "addition": [19, 126], "destin": [19, 25, 28, 68, 104, 107, 108], "sink": 19, "_sql": 19, "_vertex": 19, "capacity_i": 19, "_capacity_i": 19, "definit": [19, 122], "_capac": 19, "pgr": [19, 77], "_maxflow": 19, "phi": 19, "_id_i": 19, "flow_i": 19, "subset": [19, 43, 58, 100, 117], "particular": [19, 43, 47, 57, 58, 59], "_id": 19, "maximum_flow_problem": 19, "extend": [20, 25, 27, 58], "geospati": [20, 27], "databas": [20, 23, 27, 83, 122, 129], "provid": [20, 26, 47, 59, 67, 71, 99, 122, 124], "manual": [20, 25, 27, 31, 32, 35, 36, 38, 39, 41, 44, 46, 57, 60, 61, 68, 69, 70, 72, 87, 88, 89, 96, 122], "v4": [20, 23, 26], "dev": [20, 26, 74, 109, 120, 124], "licens": 20, "under": [20, 27, 120, 124, 126], "creativ": [20, 27], "attribut": [20, 25, 27, 54], "share": [20, 27, 98], "alik": [20, 27], "feel": 20, "free": [20, 67], "materi": 20, "you": [20, 23, 26, 44, 54, 75, 124], "credit": 20, "wherev": 20, "link": [20, 120], "see": [20, 120, 124], "introduct": 20, "contributor": [20, 124], "instal": [20, 23, 25, 120], "short": [20, 54, 120], "enabl": 20, "upgrad": [20, 120], "configur": 20, "also": [20, 120, 124], "report": [20, 120], "mail": 20, "gi": 20, "stackexchang": 20, "commerci": 20, "without": [20, 41, 54, 86, 97, 98, 107, 111, 120], "geometri": [20, 23, 51, 72, 83, 97, 98, 120, 121, 122, 127], "check": [20, 26, 45, 88, 120], "topologi": [20, 51, 85, 97, 98, 114, 115, 120], "structur": [20, 54, 120, 122], "inner": [20, 23], "tip": 20, "contribut": [20, 27, 58, 120, 124], "pgr_kruskal": [20, 21, 25, 120, 121], "pgr_degre": [20, 22, 23, 120, 121], "incid": [20, 22, 54, 58, 121], "pgr_prim": [20, 25, 117, 120, 121], "pgr_version": [20, 26, 74, 119, 120, 121], "pgr_full_vers": [20, 109, 119, 121], "util": [20, 25, 58, 68, 71, 72, 97, 98, 120, 121], "pgr_extractvertic": [20, 23, 25, 51, 58, 84, 97, 98, 120, 121, 122, 127], "pgr_findcloseedg": [20, 23, 120, 121, 122, 127, 129], "fly": [20, 72, 121, 122, 127, 129], "pgr_separatecross": [20, 23, 25, 51, 120, 121, 127], "break": [20, 23, 29, 30, 52, 86, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 120, 121, 127], "cross": [20, 29, 76, 97, 98, 121, 127], "pgr_separatetouch": [20, 23, 25, 51, 120, 121, 127], "almost": [20, 121, 127], "touch": [20, 98, 121, 127], "withpoint": [20, 25, 72, 106, 107, 111, 112, 113, 115, 116, 120, 121], "anywher": [20, 121, 130], "drive": [20, 23, 106, 113, 116, 120, 121, 128], "pgr_withpointsvia": [20, 106, 120, 121, 128, 130], "bf": [20, 44, 47, 121, 126], "propos": [20, 23, 25, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 52, 60, 61, 62, 68, 69, 71, 72, 84, 86, 87, 96, 97, 98, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 120], "issu": [20, 27, 120, 124], "pull": [20, 27, 120], "mileston": [20, 120], "std17": [20, 120], "yet": [20, 120], "modifi": [20, 52, 53, 54, 55, 107, 111, 112, 114, 115, 120, 129], "dcmake_cxx_standard": [20, 120], "doxygen": [20, 26, 120], "duse_clang_tidi": [20, 120], "ON": [20, 23, 25, 26, 30, 58, 84, 91, 97, 98, 105, 106, 120, 122], "clang": [20, 120], "tidi": [20, 120], "ci": [20, 120], "html": [20, 26, 44, 120], "translat": [20, 120], "languag": [20, 52, 120], "zh_han": [20, 26, 120], "doc": [20, 26, 120], "anymor": [20, 120], "sphinx": [20, 26, 120], "format": [20, 120], "off": [20, 26, 63, 64, 120], "_build": [20, 120], "directori": [20, 26, 120], "doubl": [20, 25, 29, 30, 83, 91, 104, 106, 114, 120, 122], "precis": [20, 29, 30, 91, 104, 106, 114, 120, 122], "pgr_trspviavertic": [20, 104, 105, 120], "anyarrai": [20, 104, 105, 106, 107, 111, 112, 113, 114, 116, 120], "unnam": [20, 23, 106, 107, 111, 112, 113, 114, 115, 116, 120], "compulsori": [20, 23, 25, 52, 106, 107, 111, 112, 113, 114, 115, 116, 120, 128, 129], "charact": [20, 106, 107, 111, 112, 113, 114, 115, 116, 120], "pgr_trspviaedg": [20, 104, 106, 120], "2701": [20, 120], "2700": [20, 120], "2718": [20, 120], "2904": [20, 120], "2905": [20, 120], "2906": [20, 120], "2907": [20, 120], "2908": [20, 120], "2910": [20, 120], "2913": [20, 120], "2909": [20, 120], "2924": [20, 120], "2927": [20, 120], "2931": [20, 120], "2934": [20, 120], "2798": [20, 120], "2683": [20, 120], "2888": [20, 120], "2890": [20, 120], "2895": [20, 120], "2899": [20, 120], "2901": [20, 120], "2681": [20, 120], "2682": [20, 120], "2748": [20, 120], "pgr_alphashap": [20, 120], "2751": [20, 120], "pgr_createtopologi": [20, 120], "2752": [20, 120], "pgr_analyzegraph": [20, 120], "2755": [20, 120], "pgr_analyzeonewai": [20, 120], "2827": [20, 120], "pgr_createverticest": [20, 120], "2886": [20, 120], "pgr_nodenetwork": [20, 120], "_pgr_alphashap": [20, 120], "2861": [20, 120], "_pgr_checkverttab": [20, 120], "_pgr_createindex": [20, 120], "_pgr_dagshortestpath": [20, 120], "2730": [20, 120], "_pgr_dijkstranear": [20, 120], "_pgr_dijkstra": [20, 120], "2735": [20, 120], "_pgr_drivingdist": [20, 120], "_pgr_endpoint": [20, 120], "_pgr_getcolumnnam": [20, 120], "_pgr_getcolumntyp": [20, 120], "_pgr_gettablenam": [20, 120], "_pgr_iscolumnindex": [20, 120], "_pgr_iscolumnint": [20, 120], "2745": [20, 120], "_pgr_kruskal": [20, 120], "2897": [20, 120], "_pgr_ksp": [20, 120], "_pgr_maxcardinalitymatch": [20, 120], "_pgr_msg": [20, 120], "_pgr_onerror": [20, 120], "_pgr_pointtoid": [20, 120], "2743": [20, 120], "_pgr_prim": [20, 120], "_pgr_quote_id": [20, 120], "_pgr_startpoint": [20, 120], "_pgr_trsp": [20, 120], "_pgr_trspviavertic": [20, 120], "2919": [20, 120], "_pgr_trspvia_withpoint": [20, 120], "_pgr_trsp_withpoint": [20, 120], "_pgr_tspeuclidean": [20, 120], "_pgr_tsp": [20, 120], "_pgr_versionless": [20, 120], "_pgr_withpointsdd": [20, 120], "_pgr_withpointsksp": [20, 120], "2741": [20, 120], "_pgr_withpointsvia": [20, 120], "_trsp": [20, 120], "_v4trsp": [20, 120], "unus": [20, 120], "refactor": [20, 120], "script": [20, 120], "updat": [20, 23, 26, 30, 51, 53, 54, 55, 71, 72, 84, 97, 98, 120, 122], "file": [20, 25, 26, 27, 120], "allpair": [20, 120], "substitut": [20, 120], "_pgr_drivingdistancev4": [20, 120], "_pgr_withpointsddv4": [20, 120], "_pgr_kruskalv4": [20, 120], "_pgr_primv4": [20, 120], "_pgr_dijkstra_v4": [20, 120], "_pgr_withpointsksp_v4": [20, 120], "_pgr_trspvia_withpoints_v4": [20, 120], "_pgr_trsp_withpoints_v4": [20, 120], "_pgr_withpointsvia_v4": [20, 120], "legaci": [20, 120], "add": [21, 25, 27, 51, 53, 55, 85, 97, 98, 120, 124, 129, 130], "least": [21, 67, 99, 100, 120, 124], "replac": [23, 52, 54, 55, 91, 120], "becaus": [23, 25, 29, 52, 53, 63, 64, 76, 84, 97, 98, 105, 106, 108, 120, 122], "deprec": [23, 52, 86, 104, 105, 106, 114, 115], "major": [23, 25, 120, 122], "start_pid": 23, "end_pid": 23, "effort": [23, 26, 120], "renam": [23, 27, 46, 69, 86, 96, 120], "v3": [23, 120], "BY": [23, 25, 29, 30, 42, 45, 47, 52, 53, 54, 55, 58, 59, 63, 64, 65, 67, 71, 72, 73, 77, 78, 79, 80, 81, 82, 84, 92, 93, 94, 95, 97, 98, 99, 103, 105, 106, 107, 111, 112, 113, 114, 115, 116, 122, 129, 130], "pointsofinterest": [23, 29, 72, 106, 107, 111, 112, 113, 114, 115, 116, 122, 129, 130], "enumer": [23, 75], "skip": [23, 52, 53, 71, 122], "filter": [23, 75], "x1": [23, 25, 31, 32, 33, 35, 36, 37, 51, 71, 97, 98, 122], "y1": [23, 25, 31, 32, 33, 35, 36, 37, 51, 71, 97, 98, 122], "x2": [23, 25, 31, 32, 33, 35, 36, 37, 51, 71, 97, 98, 122], "y2": [23, 25, 31, 32, 33, 35, 36, 37, 51, 71, 97, 98, 122], "appli": [23, 52, 54, 120], "pgr_breadthfisrtsearch": 23, "pgr_depthfisrtsearch": 23, "equicost": [23, 66, 114], "invalid": [23, 107], "OR": [23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 82, 83, 84, 85, 86, 88, 92, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116], "longer": [23, 28, 29, 30, 31, 35, 38, 52, 73, 77, 86, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116], "alphashap": 23, "sfcgal": 23, "postgis_sfcg": 23, "cg_alphashap": 23, "st_alphashap": 23, "option": [23, 25, 26, 120, 122], "st_convexhul": 23, "st_concavehul": 23, "_nod": 23, "split": [23, 25, 51, 84, 98], "_vertices_pgr": 23, "complet": [23, 25, 29, 51, 56, 74, 83], "basic": [23, 25, 51, 54, 56, 117], "what": [23, 25, 54, 120], "due": [23, 25, 29, 128], "said": [23, 25], "come": [23, 25, 29, 54, 91, 102, 122], "step": [23, 25, 26, 56, 84, 105, 106, 107, 111, 117, 124], "likewis": [23, 25], "alter": [23, 25, 26, 51, 52, 53, 54, 55, 71, 84, 97, 98, 122], "final": [23, 25, 52, 97, 98], "fill": [23, 25, 52, 53], "st_startpoint": [23, 25, 51, 71, 97, 98, 122], "st_endpoint": [23, 25, 51, 71, 72, 97, 98, 122], "potenti": 23, "direction": [23, 25, 51, 84, 97, 98], "aris": 23, "either": [23, 57, 129], "save": [23, 53, 55, 58, 122], "determin": [23, 100], "adjac": [23, 45, 53, 54, 55, 56, 59, 67, 83, 84], "deadend": [23, 25, 98], "array_length": [23, 25, 58, 98], "join": [23, 25, 30, 52, 58, 71, 84, 91, 97, 98, 105, 106, 122, 124], "anoth": [23, 25, 44, 52, 54, 82, 117, 130], "whose": [23, 34, 44, 48], "increas": [23, 34, 48, 56, 63, 64, 84], "is_onewwai": 23, "isol": [23, 58], "gap": 23, "intersect": [23, 58, 84, 98], "subgraph": [23, 45, 52, 58, 73, 76, 77, 84, 92, 100, 103], "larger": [23, 25, 29, 58, 100], "particip": [23, 58], "topolog": [23, 57, 102], "relationship": [23, 25], "instead": [23, 120], "requir": [23, 25, 26, 28, 29, 51, 58, 72, 108, 115, 120, 124, 129], "inher": 23, "st_astext": [23, 25, 72, 97, 98, 122], "00008890058e": 23, "999999999999": [23, 25, 71, 98, 122], "linestr": [23, 25, 71, 72, 97, 98, 122], "st_intersect": [23, 25, 72, 97, 98], "st_cross": [23, 25, 97], "st_overlap": 23, "e1": [23, 25, 51, 97, 98], "id1": [23, 25, 97, 98], "e2": [23, 25, 41, 69, 87, 96, 97, 98, 100], "id2": [23, 25, 97, 98], "AND": [23, 25, 29, 51, 52, 53, 54, 55, 65, 84, 97, 98, 105, 106, 116], "sql": [23, 26, 124], "has_rcost": 23, "restrict_sql": 23, "setof": [23, 52, 58, 71], "new_restrict": 23, "source_edg": 23, "source_po": 23, "float8": [23, 110, 120], "target_edg": 23, "target_po": 23, "turn_restrict_sql": 23, "id3": 23, "row_numb": [23, 65, 71, 72, 91, 97, 98, 105, 106, 116, 122], "THEN": [23, 25, 65, 72, 105, 106, 107, 111, 116, 122], "els": [23, 25, 65, 72, 105, 106, 107, 111, 116, 122], "eid": [23, 58, 71, 84], "pct": 23, "IN": [23, 25, 29, 33, 37, 40, 46, 52, 53, 55, 58, 62, 68, 69, 83, 84, 87, 88, 89, 96, 100, 103, 107, 111, 120], "Be": 23, "awar": 23, "addit": [23, 25, 26, 97, 98, 120, 122, 129, 130], "contain": [23, 25, 28, 41, 43, 49, 50, 85, 86, 100, 104, 108, 115], "flag": [23, 97, 98, 105, 106, 108, 112, 113, 120], "regardless": [23, 53], "rid": 23, "via_path": [23, 120], "separ": [23, 83, 97, 117, 120], "target_id": 23, "to_cost": 23, "creation": [23, 120, 122], "old_restrict": 23, "rightarrow": [23, 25, 29, 45, 55, 60, 63, 64, 72, 83, 105, 106], "rightarrow9": 23, "rightarrow5": 23, "inspect": [23, 84], "clear": 23, "suppli": 23, "auxiliari": [23, 71, 97, 98], "_pgr_array_revers": 23, "tempor": [23, 129], "Will": [23, 29], "array_prepend": 23, "string_to_arrai": 23, "concept": [23, 120], "guid": [25, 26, 27, 86, 104], "cover": 25, "subseteq": 25, "mid": 25, "With": [25, 29, 30, 55, 120], "decis": 25, "source_": 25, "target_": 25, "ge": 25, "leftrightarrow": [25, 58, 83], "align": 25, "_cost_": 25, "four": [25, 55, 129, 130], "genealogi": 25, "associ": 25, "although": 25, "visual": [25, 52, 58, 120, 129, 130], "look": [25, 58, 124], "draw": [25, 76], "scale": 25, "access": 25, "cascad": [25, 26, 110], "design": [25, 83, 120, 122], "goe": [25, 54, 58, 59, 65, 105, 106, 116], "thru": [25, 104], "typic": 25, "your": [25, 26, 58, 124], "small": [25, 28, 56, 58, 108, 115, 122], "variou": 25, "tool": [25, 26, 120], "help": [25, 54, 124], "shp2pgsql": 25, "shapefil": 25, "loader": 25, "ogr2ogr": 25, "vector": 25, "osm2pgsql": 25, "pleas": [25, 26, 124], "note": [25, 26, 44, 105, 106, 124], "import": [25, 54, 58, 120], "compat": [25, 120], "breakup": 25, "assign": [25, 31, 32, 35, 36, 38, 39, 41, 44, 46, 56, 57, 60, 61, 67, 68, 69, 70, 87, 88, 89, 96, 99], "disconnect": [25, 43, 49, 50, 78, 92, 117, 123], "high": [25, 42, 54, 75], "state": [25, 124], "countri": [25, 129], "few": 25, "qualiti": [25, 97, 98], "usabl": 25, "mention": 25, "oper": [25, 26, 52, 54, 55, 74, 117, 124], "workshop": [25, 27], "street": 25, "map": [25, 129], "consult": [25, 124], "sign": [25, 51, 97, 98, 129], "st_length": [25, 51, 97, 98], "999999999998": 25, "4000000000000004": 25, "abl": [25, 26, 54, 122], "everyth": [25, 122], "dataset": [25, 30], "ft": 25, "tf": 25, "opposit": [25, 122], "linesstr": 25, "unknown": 25, "drop": [25, 51, 52, 53, 71, 110, 120], "mind": 25, "veri": [25, 54, 122], "specif": [25, 54, 72, 120], "unwant": 25, "too": [25, 120, 124], "encount": 25, "That": [25, 58], "correct": [25, 26, 58, 117, 120], "tunnel": 25, "incorrect": 25, "switch": 25, "pedestrian": [25, 58, 63, 64, 122], "portal": 25, "again": [25, 54], "supplier": 25, "view": [25, 52, 53, 55, 58, 122], "local": [25, 54, 83, 84], "analyz": [25, 97, 98, 108], "rest": [25, 53, 72, 84, 122], "old": [25, 28, 29, 31, 35, 38, 73, 77, 109, 120], "tell": [25, 97, 98], "control": [25, 42, 97, 98], "old_id": [25, 51, 97, 98], "new_vertex": [25, 97, 98], "ev": [25, 97, 98], "seem": 25, "barrier": 25, "vgeom": [25, 98], "st_distanc": [25, 98], "000088900582341e": [25, 98], "rebuilt": [25, 51], "fairli": 25, "cul": [25, 58], "sac": [25, 58], "exit": [25, 58], "answer": [25, 58, 102], "curb": [25, 58], "easili": [25, 58], "walk": [25, 58], "top": [25, 54, 58, 91, 122], "big": [25, 58, 71], "cliff": [25, 58], "eagl": [25, 58], "modif": [25, 58, 72, 122], "bump": [25, 58], "signal": [25, 58], "them": [25, 26, 41, 42, 54, 58, 98, 102, 129, 130], "account": [25, 54, 58], "abov": [25, 52, 53, 54, 82], "pgr_": [25, 120], "string": [25, 120], "idea": [25, 54, 100], "fourth": 25, "full": [25, 52, 53, 54, 55, 71, 84, 120], "remain": [25, 54, 106, 116, 129, 130], "everi": [25, 44, 49, 50, 54, 67, 76, 82, 84, 99, 117, 120], "tupl": 25, "specifi": 25, "simplifi": [25, 26, 120], "varieti": 25, "uncategoris": 25, "nameless": 25, "strict": [25, 65, 105, 106, 108, 116, 128], "u_turn_on_edg": [25, 65, 105, 106, 116, 128], "tri": [25, 67, 99], "interest": [25, 129, 130], "myarea": 25, "edit": 25, "Or": 25, "titl": 25, "appropri": [25, 91, 122], "instruct": [26, 122, 124], "binari": [26, 44], "read": [26, 120], "tar": 26, "ball": 26, "xvfz": 26, "gz": 26, "cd": 26, "assum": 26, "mkdir": 26, "cmake": [26, 120], "sudo": 26, "individu": 26, "want": [26, 58, 75, 84, 122, 124], "latest": [26, 27], "com": [26, 27, 44, 124], "archiv": 26, "git": [26, 74, 120], "repositori": 26, "clone": 26, "checkout": 26, "while": [26, 28, 108, 115], "demonstr": [26, 31, 32, 35, 36, 38, 39, 41, 57, 60, 61, 70, 129, 130], "postgis_full_vers": 26, "command": 26, "TO": [26, 110, 124], "createextens": 26, "sure": 26, "met": 26, "0x": 26, "74": [26, 28, 75, 91, 122], "standard": [26, 28, 31, 35, 38, 41, 44, 45, 47, 57, 59, 60, 66, 67, 68, 70, 79, 80, 81, 93, 94, 95, 99, 102, 103, 108, 111, 112, 113, 114, 115], "75": [26, 28, 75, 91, 110, 120, 122], "bgl": 26, "pg_prove": 26, "linux": [26, 120], "apt": 26, "essenti": [26, 100], "libboost": 26, "python3": [26, 120], "bootstrap": 26, "theme": 26, "texliv": 26, "libtap": 26, "parser": 26, "sourcehandl": 26, "perl": 26, "prerequisit": [26, 120], "comment": [26, 27], "build_html": 26, "bool": 26, "build_doxi": 26, "build_latex": 26, "build_man": 26, "man": 26, "doc_use_bootstrap": 26, "english": 26, "built": [26, 54, 58, 74, 82, 120], "spaish": 26, "doxi": 26, "platform": [26, 120], "reinstal": 26, "tester": [26, 120], "doc_queries_gener": 26, "pl": 26, "___pgr___test___": 26, "sh": [26, 120], "pg_prove_test": [26, 120], "dropdb": 26, "pgdijkstra": 27, "written": 27, "sylvain": 27, "pasch": 27, "camptocamp": 27, "orknei": 27, "maintain": 27, "georepubl": [27, 124], "paragon": [27, 124], "broad": 27, "osgeo": [27, 124], "foundat": 27, "osgeol": 27, "gnu": 27, "public": [27, 122], "v2": [27, 120], "featur": 27, "softwar": 27, "mit": 27, "imaptool": 27, "header": [27, 120], "regina": 27, "ob": 27, "vicki": 27, "vergara": 27, "peopl": 27, "littl": 27, "our": [27, 124], "product": 27, "pgroutinglay": 27, "dapeng": 27, "wang": 27, "entiti": 27, "host": [27, 124], "monetari": 27, "fund": 27, "uk": 27, "googl": 27, "summer": 27, "highgo": 27, "aasheesh": 27, "tiwari": 27, "abhinav": 27, "jain": 27, "aditya": 27, "pratap": 27, "singh": 27, "adrien": 27, "berchet": 27, "akio": 27, "takubo": 27, "andrea": 27, "nardelli": 27, "anthoni": 27, "tasca": 27, "anton": 27, "patrushev": 27, "aryan": 27, "gupta": 27, "ashraf": 27, "hossain": 27, "ashish": 27, "kumar": 27, "aur\u00e9li": 27, "bousquet": 27, "cayetano": 27, "benav": 27, "christian": 27, "gonzalez": 27, "daniel": 27, "kastl": 27, "dave": 27, "pott": 27, "david": 27, "techer": 27, "deni": 27, "rykov": 27, "ema": 27, "miyawaki": 27, "esteban": 27, "zimanyi": 27, "florian": 27, "thurkow": 27, "freder": 27, "junod": 27, "gerald": 27, "fenoi": 27, "gudesa": 27, "venkata": 27, "akhil": 27, "hang": 27, "wu": 27, "himanshu": 27, "raj": 27, "imr": 27, "samu": 27, "jai": 27, "mahadeokar": 27, "jinfu": 27, "leng": 27, "kai": 27, "behnck": 27, "kishor": 27, "ko": 27, "nagas": 27, "mahmoud": 27, "sakr": 27, "manikata": 27, "kondeti": 27, "mario": 27, "basa": 27, "martin": 27, "wiesenhaan": 27, "maxim": [27, 43, 46, 69, 96], "dubinin": 27, "maoguang": 27, "moham": 27, "bakli": 27, "zia": 27, "mukul": 27, "priya": 27, "nitish": 27, "chauhan": 27, "rajat": 27, "shind": 27, "razequl": 27, "islam": 27, "rohith": 27, "reddi": 27, "sarthak": 27, "agarw": 27, "shobhit": 27, "chaurasia": 27, "sourabh": 27, "garg": 27, "stephen": 27, "woodbridg": [27, 120], "swapnil": 27, "joshi": 27, "housseman": 27, "veenit": 27, "vidhan": 27, "virginia": 27, "yige": 27, "huang": 27, "csi": 27, "tokyo": 27, "leopark": 27, "versaterm": 27, "inc": 27, "item": 27, "web": [27, 129], "site": 27, "net": 27, "migrat": [27, 86, 104, 120], "insid": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116], "summari": [28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 44, 46, 47, 54, 57, 59, 60, 61, 62, 63, 64, 68, 69, 70, 72, 73, 76, 77, 78, 82, 84, 87, 88, 89, 90, 91, 92, 96, 102, 103, 104, 107, 111, 112], "heap_path": [28, 108, 115], "21": [28, 30, 31, 35, 38, 41, 49, 52, 54, 55, 66, 68, 70, 75, 84, 91, 104, 107, 111, 114, 115, 122], "25": [28, 29, 30, 42, 49, 53, 68, 75, 84, 91, 104, 107, 110, 111, 115, 122], "29": [28, 48, 49, 68, 75, 86, 91, 107, 111, 115, 122], "31": [28, 49, 68, 75, 91, 107, 110, 111, 122], "32": [28, 49, 68, 75, 91, 107, 111, 122], "33": [28, 49, 68, 75, 91, 107, 111, 122], "39": [28, 68, 75, 91, 107, 111, 122], "40": [28, 68, 75, 84, 91, 107, 110, 111, 122], "41": [28, 68, 75, 84, 91, 107, 110, 111, 122], "42": [28, 68, 75, 91, 107, 111, 122], "50": [28, 46, 69, 75, 88, 90, 91, 96, 107, 110, 111, 122], "52": [28, 75, 91, 107, 111, 122], "roughli": [28, 108, 115], "heap": [28, 108, 115], "55": [28, 75, 91, 107, 111, 120, 122], "57": [28, 75, 91, 107, 111, 122], "58": [28, 75, 91, 107, 111, 122], "59": [28, 75, 91, 107, 111, 122], "66": [28, 75, 91, 107, 122], "69": [28, 75, 91, 107, 122], "70": [28, 75, 91, 122], "71": [28, 75, 91, 110, 122], "73": [28, 75, 91, 122], "79": [28, 75, 91, 110, 122], "k_shortest_path_rout": 28, "approxim": [29, 30], "simul": [29, 30, 54], "anneal": [29, 30], "relat": [29, 30, 120, 129, 130], "max_processing_tim": [29, 30], "tries_per_temperatur": [29, 30], "max_changes_per_temperatur": [29, 30], "max_consecutive_non_chang": [29, 30], "initial_temperatur": [29, 30], "final_temperatur": [29, 30], "cooling_factor": [29, 30], "prefer": [29, 129, 130], "As": [29, 54, 72, 120], "fact": 29, "forc": 29, "denot": [29, 41], "instanc": 29, "still": [29, 84], "estim": [29, 54], "could": [29, 84, 120], "array_agg": [29, 33, 37, 40, 62, 71, 72, 84, 90, 122], "OF": [29, 30], "pointsofinterset": 29, "satisfi": 29, "q1": 29, "pgr_euclediantsp": [30, 120], "arbitrarili": 30, "quit": [30, 54], "similar": [30, 70], "499999999999": 30, "9999999": 30, "st_x": [30, 71, 122], "st_y": [30, 71, 122], "2360679775": [30, 91], "41421356237": [30, 91], "65028153987": 30, "06449510225": 30, "12132034356": 30, "18581544581": 30, "58113883008": 30, "76695427589": 30, "2669542759": 30, "58113883009": 30, "848093106": 30, "11803398875": 30, "9661270947": 30, "3803406571": 30, "583095189485": 30, "9634358466": 30, "860232526704": 30, "8236683733": 30, "2378819357": 30, "wi29": 30, "20833": 30, "3333": 30, "17100": 30, "0000": 30, "20900": 30, "17066": 30, "6667": 30, "21300": 30, "13016": 30, "21600": 30, "14150": 30, "14966": 30, "16500": 30, "22183": 30, "13133": 30, "22583": 30, "14300": 30, "22683": 30, "12716": 30, "23616": 30, "15866": 30, "23700": 30, "15933": 30, "23883": 30, "14533": 30, "24166": 30, "13250": 30, "25149": 30, "1667": 30, "12365": 30, "8333": 30, "26133": 30, "14500": 30, "26150": 30, "10550": 30, "26283": 30, "12766": 30, "26433": 30, "13433": 30, "26550": 30, "13850": 30, "26733": 30, "11683": 30, "27026": 30, "1111": 30, "13051": 30, "9444": 30, "27096": 30, "13415": 30, "27153": 30, "6111": 30, "13203": 30, "27166": 30, "9833": 30, "27233": 30, "10450": 30, "11783": 30, "27266": 30, "10383": 30, "27433": 30, "12400": 30, "27462": 30, "12992": 30, "2222": 30, "st_makepoint": [30, 72], "27603": 30, "2266": [30, 120], "91173136": 30, "28777": 30, "4854127": 30, "tsp_result": 30, "st_makelin": [30, 72, 83, 122], "01020000001e000000f085c9545558d4400000000000b3d040000000000069d440107a36abaaaad040000000000018d54000000000001dd040107a36ab2a10d7401ff46c5655fdce40000000000025d740e10b93a9aa1ecf40f085c954d552d740e10b93a9aa62cc40107a36abaa99d7400000000000e1c940107a36ab4a8fd840e10b93a9ea26c840f085c954d5aad9401ff46c5655efc840f085c95455d0d940e10b93a9aa3cca40f085c9545585d940000000000052cc400000000080edd94000000000000dcb40a52c431c0776da40e10b93a9ea33ca40a52c431c6784da40e10b93a9aac9c940a52c431c8764da402c6519e2f87dc94000000000a0d1da4096b20c711c60c940f085c95455cada40000000000038c840f085c9545598da40e10b93a9aa03c740f085c954551bda40e10b93a9aad1c640f085c9545598da40000000000069c440107a36abaaa0da40e10b93a9aa47c440107a36abaa87da40e10b93a9aa34c340000000008089d94000000000009bc440f085c954d526d6401ff46c5655d6c840f085c954d5a9d540e10b93a9aaa6c9400000000000cdd4401ff46c56556cc940000000000018d5400000000000a3cb40f085c954d50dd6400000000000eecb40000000000018d5401ff46c56553bcd40f085c9545558d4400000000000b3d040": 30, "repeat": [31, 32, 35, 36, 38, 39, 41, 57, 60, 61, 70, 129, 130], "sort": [31, 32, 35, 36, 38, 39, 41, 54, 57, 60, 61, 63, 64, 70, 102], "summar": [32, 36, 39, 61], "inf": [33, 37], "cut": [34, 100], "red": [34, 55, 122, 129, 130], "pgr_bddijsktra": 38, "bidirectional_search": [38, 39], "bellman": [41, 57, 70, 120], "ford": [41, 57, 70, 120], "richard": 41, "lester": 41, "who": [41, 124], "publish": [41, 75, 91, 122], "1958": 41, "respect": [41, 83, 84], "though": 41, "versatil": 41, "finit": 41, "keep": [41, 54, 84, 122], "furthermor": [41, 54], "_vid": [41, 44, 57, 107, 111, 112], "93ford_algorithm": 41, "advantag": 42, "spars": [42, 56, 77], "score": 42, "extent": 42, "li": [42, 70, 91, 122], "influenc": 42, "virtu": 42, "affect": [42, 52, 129, 130], "disrupt": 42, "theta": [42, 73], "ve": 42, "explan": 42, "parenthesi": 42, "leaf": 42, "rang": [42, 99], "n_seq": [43, 51, 101], "unlik": [43, 112, 113], "well": [44, 54, 100, 129], "known": [44, 73, 122], "unweight": [44, 100], "howev": [44, 70, 117], "constrain": 44, "variat": [44, 75], "sssp": 44, "cp": 44, "01_bf": 44, "27s_algorithm": [44, 60, 61, 63, 64, 65], "specialized_vari": 44, "themselv": 45, "along": [45, 129], "odd": 45, "cyclic": 45, "blue": [45, 53, 76, 122, 129, 130], "is_bipartit": 45, "pgr_maxflowboykovkolmogorov": [46, 120], "polynomi": 46, "130": [46, 69, 88, 96, 122], "level": [47, 54], "descend": [47, 52, 53, 55, 59], "desc": [47, 59, 84], "delet": [48, 54, 84], "bridge_": 48, "28graph_theori": [48, 86], "circuit": [49, 50, 75], "reachabl": [51, 59, 101, 103], "prepar": [51, 52, 58, 71, 97, 98, 120], "previous": [52, 120], "pgr_contractgraph": [52, 120], "bug": [52, 120, 124], "distinct": [52, 53, 54, 55, 75, 84], "pseudo": [52, 53, 54, 55], "incorpor": [52, 54], "operations_ord": 52, "build": [52, 74, 105, 106, 116, 117], "shown": [52, 58], "observ": 52, "appear": [52, 66, 71, 102, 114, 124], "extra": [52, 120, 124], "is_contract": [52, 53, 55], "is_new": [52, 54, 55], "contraction_result": [52, 53, 54, 55], "unnest": [52, 53, 55, 58, 63, 64, 71, 72], "vertices_in_graph": [52, 53, 55], "IF": [52, 53, 71, 72, 110, 122], "contracted_graph": [52, 53, 55], "notic": [52, 53, 58, 71, 72, 97, 98, 110, 124], "path_cost": 52, "bodi": 52, "cul_de_sac": [52, 53], "linears_to_expand": 52, "additional_vertic": 52, "green": [53, 55, 72], "unlimit": 53, "reason": 53, "ye": 53, "mani": [53, 54, 58, 86, 120, 122, 129], "otherwis": [53, 54, 57, 102], "until": [53, 54, 59, 100], "accord": [54, 129, 130], "hierarch": 54, "prioriti": 54, "dure": 54, "label": 54, "put": 54, "highwai": 54, "arteri": 54, "secondari": 54, "assumpt": 54, "valuabl": 54, "basi": 54, "attract": 54, "aim": 54, "explor": 54, "feed": [54, 124], "orient": 54, "lose": 54, "difficult": 54, "nevertheless": 54, "simpl": [54, 120, 122], "geisberg": 54, "principl": 54, "here": [54, 58, 75, 122], "priori": 54, "reinsert": 54, "place": [54, 56], "necessari": [54, 124], "rememb": 54, "At": [54, 67, 72, 100], "had": 54, "whole": [54, 58], "consequ": 54, "cours": 54, "surpris": 54, "tendenc": 54, "former": 54, "w": [54, 55], "destruct": 54, "copi": [54, 120], "discov": 54, "p": [54, 72, 91, 106, 107, 111, 112, 113, 114, 115, 116, 122], "successor": 54, "destroi": 54, "construct": 54, "brows": 54, "greater": 54, "perman": [54, 129], "readi": 54, "special": [54, 97, 98], "adapt": 54, "contraction_ord": 55, "z": 55, "in_lin": 55, "algebra": 56, "cm": 56, "elizabeth": 56, "jame": [56, 75], "permut": 56, "sparsiti": 56, "pattern": 56, "band": 56, "bandwidth": 56, "queue": 56, "complex": [56, 70, 75], "dag": [57, 102], "rubric": [57, 120], "reli": 57, "impos": 57, "thu": [57, 70], "effici": [57, 67, 75, 99], "warn": [57, 102, 120], "topological_sort": [57, 102], "messag": [58, 71, 72, 120], "adjust": [58, 71, 72, 120], "valenc": 58, "dryrun": [58, 71, 72, 97, 98], "embed": 58, "decent": 58, "hand": 58, "backend": [58, 71], "g_edg": 58, "all_vertic": 58, "g_vertic": 58, "coalesc": [58, 71, 105, 106, 122], "rather": 58, "forgo": 58, "deep": 59, "backtrack": 59, "lead": [63, 64], "drt": [63, 64], "cap": [63, 64, 72, 106, 107, 111, 112, 113, 114, 115, 116], "global": [63, 64], "car": [63, 64], "subwai": [63, 64], "station": [63, 64], "buse": [63, 64], "vertex_i": [65, 105, 106, 116, 128], "vertex_": [65, 105, 106, 116, 128], "_of": [65, 105, 106, 116], "node_seq": [65, 105, 106, 116], "from_v": [66, 120], "equi": 66, "tie": [66, 114], "brake": [66, 114], "arbitrari": [66, 114, 117, 129], "resembl": [66, 114, 122], "loop": [67, 120], "self": [67, 75, 120], "parallel": [67, 75, 117], "chromat": 67, "proper": 67, "alwai": [67, 83, 99, 122], "implelent": 67, "underli": 68, "character": 68, "cannot": 68, "pgr_maxflowedmondskarp": [69, 120], "93karp_algorithm": 69, "edward": 70, "moor": 70, "improv": [70, 98, 120], "experi": 70, "suggest": 70, "significantli": [70, 124], "shortest_path_faster_algorithm": 70, "010100000000000000000000000000000000000040": [71, 72, 122], "0101000000000000000000e03f0000000000000c40": [71, 122], "0101000000000000000000f03f0000000000000040": [71, 122], "010100000068eeffffffffff3f0000000000000c40": [71, 122], "010100000000000000000000400000000000000000": [71, 122], "01010000000000000000000040000000000000f03f": [71, 122], "010100000000000000000000400000000000000040": [71, 122], "010100000000000000000000400000000000000840": [71, 122], "010100000000000000000000400000000000001040": [71, 122], "01010000000000000000000840000000000000f03f": [71, 72, 122], "010100000000000000000008400000000000000040": [71, 122], "010100000000000000000008400000000000000840": [71, 122], "01010000000000000000000c406666666666660240": [71, 122], "01010000000000000000000c400000000000001040": [71, 122], "01010000000000000000001040000000000000f03f": [71, 122], "010100000000000000000010400000000000000040": [71, 122], "010100000000000000000010400000000000000840": [71, 122], "preced": 71, "startpoint": 71, "endpoint": [71, 83, 98], "main_sql": 71, "the_out": 71, "agg_out": 71, "the_in": 71, "agg_in": 71, "the_point": 71, "outer": 71, "srid": [71, 72], "unlog": 71, "out_go": 71, "in_com": 71, "partial": [72, 120], "further": 72, "toler": [72, 97, 98], "expos": 72, "sp": 72, "ep": 72, "point_sql": 72, "01010000000000000000000000000000000000f83f": 72, "st_linelocatepoint": 72, "endcap": 72, "flat": 72, "st_closestpoint": 72, "new_lin": 72, "st_dwithin": [72, 98], "prepare_cap": 72, "partit": [72, 100], "rn": 72, "mark": 72, "g1": [72, 97, 98], "g2": [72, 97, 98], "edge1": 72, "edge2": 72, "666666666667": 72, "333333333333": 72, "outsid": [72, 129], "pgrrout": [72, 122], "newpoint": [72, 122], "bigseri": [72, 122], "st_point": [72, 83, 106, 107, 111, 112, 113, 114, 115, 116, 122], "poi": [72, 122], "round": [72, 106, 107, 111, 112, 113, 114, 115, 116, 122], "dist": [72, 122], "dens": 73, "date": 74, "pgsql": 74, "hawick": 75, "2008": 75, "ken": 75, "health": 75, "detect": [75, 105, 106, 120], "capabl": 75, "arc": 75, "im": 75, "plement": 75, "elementari": 75, "2nd": 75, "serv": 75, "suitabl": 75, "practic": 75, "usecas": 75, "caus": [75, 124], "implemen": 75, "83": [75, 91, 120, 122], "85": [75, 91, 110, 122], "88": [75, 91, 122], "89": [75, 91, 110, 122], "91": [75, 91, 110, 122], "92": [75, 91, 122], "93": [75, 91, 122], "upon": 76, "drawn": 76, "dimension": 76, "Such": 76, "plane": 76, "admit": 76, "straight": 76, "k_5": 76, "k_": 76, "boyer": 76, "myrvold": 76, "k_1": 76, "possibli": [78, 92, 117], "leq": [79, 80, 81, 93, 94, 95], "immedi": 82, "domin": 82, "parent": 82, "lengauer": 82, "tarjan": [82, 101], "math": 83, "simplic": 83, "digit": 83, "hundr": 83, "ten": 83, "head": 83, "arrow": [83, 122, 129, 130], "yellow": [83, 84], "shadow": 83, "203": [83, 91, 122], "304": 83, "edges_shar": 83, "102": [83, 91, 122], "104": [83, 91, 110, 122], "301": 83, "302": 83, "403": 83, "edges_uniqu": 83, "mathworld": 83, "across": 84, "undefin": 84, "tbd": [84, 110], "displai": 84, "orang": 84, "unless": 84, "linegraph_edg": 84, "original_id": 84, "vertex_map": 84, "targets_original_id": 84, "self_loop": 84, "assigned_vertic": 84, "cross_edg": 84, "source_original_id": 84, "dn": 84, "v1": [84, 120], "u_turn": 84, "new_graph": 84, "task": 84, "new_graph_id_seq": 84, "nextval": [84, 122], "setval": [84, 122], "uturn": 84, "line_graph": 84, "complete_graph": 84, "make_connect": 85, "pgr_maximumcardinalitymatch": [86, 120], "independ": 86, "largest": 86, "invers": 86, "ackermann": 86, "maximum_match": 86, "matching_": 86, "ackermann_funct": 86, "230": 87, "340": 87, "360": [87, 91, 122], "93relabel_maximum_flow_algorithm": [87, 96], "todo": 88, "statement": [88, 90, 91, 102, 122], "nonneg": [88, 89], "world": [88, 89, 104, 129], "smaller": [88, 89], "200": [88, 91, 110, 122], "300": 88, "430": [88, 89], "160": 88, "260": [88, 91, 122], "390": 88, "520": 88, "680": 88, "760": [88, 89], "250": 88, "350": 88, "450": [88, 91, 122], "580": 88, "610": [88, 91, 122], "690": 88, "770": 88, "820": [88, 89, 91, 122], "240": [88, 110], "320": [88, 89], "fleet": [90, 91], "ma_capac": 90, "illeg": 90, "six": [90, 91], "demand": [90, 91, 122], "stop_id": 90, "pgr_gsoc_vrppdtw": [91, 120], "8284271247": 91, "2426406871": 91, "4787086646": 91, "lc101": [91, 122], "sintef": [91, 122], "projectweb": [91, 122], "pdptw": [91, 122], "lim": [91, 122], "benchmark": [91, 122], "v_lc101": [91, 122], "1236": [91, 122], "vehcil": [91, 122], "generate_seri": [91, 122], "lc101_c": [91, 122], "pindex": [91, 122], "dindex": [91, 122], "912": [91, 122], "967": [91, 122], "825": [91, 122], "870": [91, 122], "146": [91, 122], "727": [91, 122], "782": [91, 122], "621": [91, 122], "702": [91, 122], "170": [91, 122], "225": [91, 122], "255": [91, 122], "324": [91, 122], "534": [91, 122], "605": [91, 122], "357": [91, 122], "410": [91, 122], "448": [91, 122], "505": [91, 122], "652": [91, 122], "721": [91, 122], "567": [91, 122], "620": [91, 122], "384": [91, 122], "429": [91, 122], "475": [91, 122], "528": [91, 122], "148": [91, 122], "179": [91, 122], "254": [91, 122], "278": [91, 122], "345": [91, 122], "914": [91, 122], "965": [91, 122], "812": [91, 122], "883": [91, 122], "732": [91, 122], "777": [91, 122], "103": [91, 104, 105, 122], "144": [91, 110, 122], "169": [91, 122], "224": [91, 122], "622": [91, 122], "701": [91, 122], "261": [91, 122], "316": [91, 122], "546": [91, 122], "593": [91, 122], "405": [91, 122], "449": [91, 122], "504": [91, 122], "237": [91, 122], "158": [91, 122], "751": [91, 122], "816": [91, 122], "283": [91, 122], "344": [91, 122], "665": [91, 122], "716": [91, 122], "105": [91, 122], "383": [91, 122], "434": [91, 122], "479": [91, 122], "522": [91, 122], "624": [91, 122], "264": [91, 122], "321": [91, 122], "166": [91, 122], "235": [91, 122], "149": [91, 110, 122], "359": [91, 122], "412": [91, 122], "541": [91, 122], "509": [91, 122], "1054": [91, 122], "1127": [91, 122], "632": [91, 122], "693": [91, 122], "1001": [91, 122], "1066": [91, 122], "815": [91, 122], "880": [91, 122], "725": [91, 122], "786": [91, 122], "101": [91, 104, 105, 110, 122], "969": [91, 122], "286": [91, 122], "347": [91, 122], "186": [91, 122], "257": [91, 122], "385": [91, 122], "436": [91, 122], "471": [91, 122], "651": [91, 122], "740": [91, 122], "562": [91, 122], "629": [91, 122], "531": [91, 122], "262": [91, 122], "317": [91, 122], "171": [91, 110, 122], "218": [91, 122], "129": [91, 110, 122], "826": [91, 122], "875": [91, 122], "734": [91, 122], "916": [91, 122], "387": [91, 122], "456": [91, 122], "293": [91, 122], "478": [91, 122], "551": [91, 122], "353": [91, 122], "997": [91, 122], "1068": [91, 122], "574": [91, 122], "643": [91, 122], "109": [91, 105, 110, 122], "668": [91, 122], "731": [91, 122], "769": [91, 122], "124": [91, 122], "369": [91, 122], "420": [91, 122], "265": [91, 122], "338": [91, 122], "458": [91, 122], "523": [91, 122], "555": [91, 122], "612": [91, 122], "173": [91, 122], "238": [91, 122], "645": [91, 122], "708": [91, 122], "737": [91, 122], "802": [91, 122], "836": [91, 122], "889": [91, 122], "368": [91, 122], "441": [91, 122], "518": [91, 122], "285": [91, 122], "336": [91, 122], "96": [91, 122], "196": [91, 122], "239": [91, 122], "98": [91, 122], "156": [91, 122], "97": [91, 122], "561": [91, 122], "106": [91, 110, 122], "743": [91, 122], "647": [91, 122], "726": [91, 122], "c_lc101": [91, 122], "relev": 91, "828": 91, "854": 91, "5412705652799": 91, "pgr_maxflowpushrelabel": [96, 120], "01": [97, 98], "st_snap": [97, 98], "st_split": [97, 98], "care": [97, 98], "edges_t": [97, 98], "get_cross": 97, "blade": [97, 98], "st_unaryunion": [97, 98], "st_collect": [97, 98], "st_dump": [97, 98], "properli": 98, "don": 98, "exact": [98, 124], "0102000000020000000000000000000040000000000000084068eeffffffffff3f0000000000000c40": 98, "01020000000200000068eeffffffffff3f0000000000000c4000000000000000400000000000001040": 98, "get_touch": 98, "st_touch": 98, "ident": 99, "strategi": 99, "smallest": 99, "neighbor": 99, "stoerwagn": 100, "stoer": 100, "wagner": 100, "recurs": 100, "shrink": 100, "merg": 100, "intens": 100, "phase": 100, "chosen": 100, "simpli": 100, "whether": 100, "unconnect": 100, "divid": 100, "93wagner_algorithm": 100, "strong": 101, "context": [102, 124], "transit": 103, "closur": 103, "cluster": 103, "compress": 103, "rechabl": 103, "target_arrai": 103, "transitive_closur": 103, "prototyp": 104, "receiv": 104, "navig": 104, "113": 105, "107": 105, "108": 105, "110": [105, 110], "111": 105, "conflict": [105, 106], "with_seq": [105, 106], "driving_sid": [107, 113, 115], "path_at": [107, 111], "statu": [107, 111], "is_a": [107, 111], "4th": [107, 111], "6th": [107, 111], "3th": [107, 111], "5th": [107, 111], "stop_on_first": 108, "altern": [108, 120], "client_min_messag": [110, 124], "solomon_100_rc_101": 110, "vrp_vehicl": 110, "vrp_distanc": 110, "oid": 110, "opo": 110, "tarriv": 110, "tdepart": 110, "120": 110, "131": 110, "141": 110, "155": 110, "162": 110, "172": 110, "208": 110, "161": 110, "460": 110, "rollback": 110, "order_unit": 110, "open_tim": 110, "close_tim": 110, "000000": 110, "145": 110, "139": 110, "125": 110, "121": 110, "119": 110, "case_no": 110, "the_matrix_info": 110, "src_id": 110, "dest_id": 110, "traveltim": 110, "temporari": 111, "points_sql": [112, 113, 120], "member": [112, 113], "Being": [112, 113], "shorter": [112, 113], "1930": 117, "czech": 117, "vojt\u011bch": 117, "jarn\u00edk": 117, "cheapest": 117, "contrast": 117, "pgr_linegraph": [118, 120, 125], "commit": 120, "2760": 120, "2772": 120, "2774": 120, "2873": 120, "2874": 120, "2790": 120, "2791": 120, "2536": 120, "2848": 120, "2849": 120, "2786": 120, "2802": 120, "reorgan": 120, "2869": 120, "2850": 120, "rewrit": 120, "2749": 120, "2750": 120, "2753": 120, "2754": 120, "2826": 120, "2731": 120, "failur": 120, "ubuntu": 120, "2713": 120, "polici": 120, "cmp0148": 120, "cmp0144": 120, "cmp0167": 120, "2707": 120, "alpin": 120, "2706": 120, "winni": 120, "crash": 120, "2680": 120, "fail": 120, "mingw64": 120, "gcc": 120, "2689": 120, "enhancemet": 120, "2656": 120, "postgresql12": 120, "2605": 120, "2635": 120, "2599": 120, "cleanup": 120, "2607": 120, "2614": 120, "explicit": [120, 124], "postgr": 120, "cpplint": 120, "adujst": 120, "md": 120, "osx": 120, "2516": 120, "2523": 120, "2547": 120, "2548": 120, "2544": 120, "2546": 120, "2504": 120, "pg": 120, "fetch": 120, "msvc": 120, "2505": 120, "namespac": 120, "2512": 120, "2517": 120, "astar": 120, "simplif": 120, "2521": 120, "2522": 120, "bdastar": 120, "2490": 120, "2555": 120, "bootstrap_vers": 120, "dropdown": 120, "2565": 120, "trigger": 120, "assert": 120, "2561": 120, "Not": 120, "wildcard": 120, "2559": 120, "reader": 120, "2394": 120, "accumul": 120, "2427": 120, "variabl": 120, "2401": 120, "2398": 120, "1891": 120, "doesn": 120, "unclassifi": 120, "2400": 120, "focal": 120, "revis": 120, "edge_t": 120, "category_id": 120, "reverse_category_id": 120, "combinations_t": 120, "usag": [120, 129, 130], "restructur": 120, "2276": 120, "edgedisjointpath": 120, "2312": 120, "2357": 120, "2216": 120, "2057": 120, "trspviaedg": 120, "2087": 120, "2201": 120, "2202": 120, "2203": 120, "2093": 120, "studio": 120, "2189": 120, "rhel": 120, "1883": 120, "metric_tsp_approx": 120, "annael": 120, "1850": 120, "Near": 120, "1825": 120, "honor": 120, "1849": 120, "point_xi": 120, "hpp": 120, "maco": 120, "environ": 120, "1861": 120, "1304": 120, "freebsd": 120, "bit": 120, "pgr_vronedepot": 120, "1356": 120, "port": 120, "1725": 120, "openbsd": 120, "1760": 120, "1770": 120, "1733": 120, "1647": 120, "1640": 120, "1616": 120, "1300": 120, "backport": 120, "1378": 120, "232": 120, "client": [120, 129], "cancel": 120, "1153": 120, "1188": 120, "cgal": 120, "1002": 120, "1004": 120, "1005": 120, "intermid": 120, "elimin": 120, "1006": 120, "loss": 120, "bddijkstra": 120, "unnecessari": 120, "pgr_labelgraph": 120, "pgr_pointsaspolygon": 120, "1219": 120, "cast": 120, "1193": 120, "claus": 120, "1185": 120, "findpostgresql": 120, "1152": 120, "1098": 120, "1165": 120, "perl5": 120, "pgr_bddijstra": 120, "fallthrugh": 120, "clean": 120, "pointer": 120, "accept": [120, 122], "condit": 120, "pgr_pointtoedgenod": 120, "unexpect": 120, "cname": 120, "__linux__": 120, "__glibc__": 120, "glibc": 120, "pgr_pointstovid": 120, "realiti": 120, "ambigu": 120, "leak": 120, "max_flow": 120, "regress": 120, "discrep": 120, "pgr_flip_edg": 120, "pgr_vidstodmatrix": 120, "pgr_pointstodmatrix": 120, "pgr_texttopoint": 120, "bogu": 120, "extern": 120, "fedora": 120, "row_wher": 120, "outal": 120, "pgr_apspwarshal": 120, "pgr_apspjohnson": 120, "pgr_kdijkstracost": 120, "pgr_kdijkstrapath": 120, "pgr_makedistancematrix": 120, "_pgr_makedistancematrix": 120, "multi": 120, "polygon": 120, "hole": 120, "steve": 120, "classifi": 120, "conveni": [120, 122], "author": 120, "pgr_flipedg": 120, "flip": [120, 129, 130], "vertix_id": 120, "gsoc": 120, "pgr_vrppdtw": 120, "pgr_getcolumnnam": 120, "pgr_gettablenam": 120, "pgr_iscolumncndex": 120, "pgr_iscolumnint": 120, "pgr_quote_id": 120, "pgr_versionless": 120, "pgr_startpoint": 120, "pgr_endpoint": 120, "pgr_pointtoid": 120, "encapsul": 120, "prefix": [120, 122], "track": 120, "abandon": 120, "goal": 120, "signific": 120, "integr": 120, "easier": 120, "analyt": 120, "bi": 120, "pgr_kdijkstra": 120, "solver": 120, "gaul": 120, "shoot": 120, "infrastructur": 120, "outstand": 120, "against": 120, "autom": 120, "modular": 120, "newer": 120, "re": [120, 124], "unifi": 120, "schema": 120, "st_": 120, "shooting_star": 120, "discontinu": 120, "release_not": 120, "core": 120, "wrapper": [120, 124], "renumb": 120, "scheme": 120, "routing_postgi": 120, "reverse_": 122, "reverse_categori": 122, "vertices_id_seq": 122, "collat": 122, "nullabl": 122, "regclass": 122, "soft": 122, "click": 122, "enlarg": 122, "websit": 124, "tutori": 124, "compani": 124, "manag": 124, "tracker": 124, "ticket": 124, "priorit": 124, "unreport": 124, "replic": 124, "older": 124, "earliest": 124, "pin": 124, "debug": 124, "discours": 124, "subscrib": 124, "topic": 124, "write": 124, "chat": 124, "fellow": 124, "channel": 124, "tag": 124, "profession": 124, "contact": 124, "organ": 124, "offic": [124, 129, 130], "germani": 124, "japan": 124, "info": 124, "corpor": 124, "paragoncorpor": 124, "netlab": 124, "capranica": 124, "itali": 124, "intend": 128, "besid": 128, "abil": 129, "thought": 129, "trait": 129, "confus": 129, "restaur": [129, 130], "supermarket": [129, 130], "post": [129, 130], "represent": [129, 130], "squar": [129, 130], "achiev": [129, 130], "recursevli": [129, 130], "compos": 130}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"bf": [0, 79, 93], "categori": [0, 1, 2, 5, 14, 15, 17, 20, 121, 123, 128, 129], "paramet": [0, 3, 4, 5, 6, 7, 10, 15, 16, 17, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 128, 129, 130], "option": [0, 4, 5, 6, 7, 15, 16, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 75, 77, 79, 81, 83, 90, 91, 93, 95, 97, 98, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 128, 129, 130], "inner": [0, 5, 7, 10, 15, 16, 17, 19, 21, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 128, 129, 130], "queri": [0, 5, 7, 10, 15, 16, 17, 19, 21, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 128, 129, 130], "edg": [0, 3, 7, 10, 15, 16, 17, 19, 23, 25, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 122, 128, 129, 130], "sql": [0, 3, 5, 7, 10, 15, 16, 17, 19, 20, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 120, 128, 129, 130], "result": [0, 5, 7, 11, 15, 17, 19, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 128], "column": [0, 5, 7, 11, 15, 17, 19, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 128], "see": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 125, 126, 127, 128, 129, 130], "also": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 125, 126, 127, 128, 129, 130], "df": [1, 47, 59, 81, 95], "propos": [1, 11, 13, 14, 16, 53, 55, 58, 59, 63, 64, 65, 83, 99, 118, 125, 126, 128], "k": 2, "shortest": [2, 25, 54], "path": [2, 23, 25, 54, 60, 65, 105, 106, 116], "trsp": [3, 25], "famili": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 22, 24, 117, 121, 125, 126, 130], "function": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 117, 118, 120, 121, 125, 126, 127, 130], "experiment": [3, 5, 10, 11, 12, 13, 18, 19, 22, 24, 41, 42, 44, 45, 47, 49, 50, 54, 56, 57, 67, 70, 75, 76, 82, 84, 85, 88, 89, 90, 91, 100, 102, 103, 108, 110, 125, 126], "introduct": [3, 5, 7, 13, 16, 27, 125, 129, 130], "algorithm": [3, 54, 105, 106], "restrict": [3, 23, 25, 84, 104, 105, 106, 107, 108, 122, 128], "travel": 4, "sale": 4, "person": 4, "tabl": [4, 20, 25, 30, 52, 54, 58, 71, 72, 84, 122], "content": [4, 5, 20, 23, 120, 129, 130], "gener": [4, 14, 15, 19, 20, 25, 29, 128], "inform": [4, 14, 15, 19, 25, 27, 52, 128], "problem": [4, 10, 16, 29, 30, 124], "definit": [4, 16, 25, 29, 30], "origin": [4, 84, 91, 122], "characterist": [4, 5, 9, 14, 15, 29, 30, 63, 64, 90, 91], "tsp": [4, 29, 30], "vehicl": [5, 90, 91, 122], "rout": [5, 23, 25, 65, 71, 72, 84, 105, 106, 116], "pick": [5, 90, 91, 122], "deliveri": 5, "deliv": [5, 90, 91, 122], "order": [5, 24, 27, 54, 90, 91, 122], "matrix": [5, 15, 29, 90, 124], "summari": [5, 20, 120], "row": 5, "handl": 5, "capac": 5, "demand": 5, "unit": 5, "locat": 5, "time": 5, "factor": [5, 6], "A": [6, 8, 72], "descript": [6, 8, 10, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "astar": [6, 31, 32, 33, 35, 36, 37], "advanc": [6, 16, 19, 129, 130], "document": [6, 16, 19, 20, 120, 129, 130], "heurist": 6, "all": [7, 20], "pair": 7, "perform": [7, 25], "data": [7, 25, 29, 30, 52, 84, 122], "bidirect": [8, 9], "dijkstra": [9, 16, 54, 63, 64], "synopsi": [9, 15, 90, 91], "chines": 10, "postman": 10, "color": 11, "compon": [12, 25, 51], "contract": [13, 25, 52, 53, 54, 55], "cost": [14, 15, 23, 25, 30, 60, 65, 105, 106, 116, 122], "point": [15, 25, 29, 72, 106, 107, 111, 112, 113, 114, 115, 116, 122, 128, 129, 130], "combin": [16, 19, 23, 25, 28, 31, 32, 35, 36, 38, 39, 41, 44, 46, 57, 60, 61, 63, 64, 68, 69, 70, 87, 88, 89, 96, 104, 107, 111, 112, 115, 122, 129, 130], "The": [16, 52, 53, 55, 65, 84, 91, 105, 106, 116, 122], "drive": [17, 66, 107, 111, 112, 114, 115, 129, 130], "distanc": [17, 66, 114], "flow": [19, 25], "pgrout": [20, 25, 120], "concept": [20, 25], "avail": 20, "offici": [20, 120], "releas": [20, 27, 120], "note": [20, 120], "4": [20, 60, 120], "0": [20, 27, 120], "build": [20, 23, 25, 26, 54, 120], "chang": [20, 23, 120], "promot": [20, 120], "signatur": [20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120], "output": [20, 23, 120], "standard": [20, 23, 120], "remov": [20, 84, 120], "deprec": [20, 120], "intern": [20, 120], "longer": [20, 120], "code": [20, 25, 97, 98, 120], "enhanc": [20, 120], "kruskal": 21, "metric": 22, "migrat": 23, "guid": 23, "exampl": [23, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 76, 82, 83, 84, 87, 88, 89, 91, 96, 97, 98, 100, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116], "One": [23, 25, 28, 31, 32, 35, 36, 38, 39, 41, 44, 46, 57, 60, 61, 63, 64, 65, 68, 69, 70, 72, 87, 88, 89, 96, 104, 105, 106, 107, 111, 112, 115, 116], "mani": [23, 25, 28, 31, 32, 35, 36, 38, 39, 41, 44, 46, 57, 60, 61, 63, 64, 68, 69, 70, 72, 87, 88, 89, 96, 104, 107, 111, 112, 115], "multipl": [23, 25, 47, 59, 66, 79, 80, 81, 93, 94, 95, 114], "seq": 23, "path_id": 23, "path_seq": 23, "node": [23, 65, 84, 105, 106, 116], "agg_cost": 23, "us": [23, 29, 52, 53, 54, 55, 58, 60, 84, 106, 107, 111, 112, 113, 114, 115, 116], "pgr_ksp": [23, 28], "start_vid": 23, "end_vid": 23, "pgr_edgedisjointpath": [23, 68], "singl": [23, 25, 47, 59, 66, 79, 80, 81, 93, 94, 95, 114], "one": 23, "span": [23, 25, 123], "tree": [23, 25, 123], "from": [23, 29, 60, 84], "depth": 23, "vertex": [23, 25, 29, 47, 53, 54, 58, 59, 66, 71, 79, 80, 81, 84, 93, 94, 95, 114], "pgr_kruskaldd": [23, 80], "vertic": [23, 47, 52, 54, 58, 59, 65, 66, 71, 79, 80, 81, 84, 93, 94, 95, 105, 106, 114, 116, 122, 129, 130], "pgr_kruskaldf": [23, 81], "from_v": 23, "pgr_drivingdist": [23, 66], "pgr_withpointsdd": [23, 114], "name": 23, "vid": 23, "target_arrai": 23, "sorted_v": 23, "edge_id": 23, "color_id": 23, "vertex_id": 23, "delet": 23, "pgr_alphashap": 23, "pgr_nodenetwork": 23, "pgr_createtopologi": 23, "topologi": [23, 25, 71, 112, 122], "pgr_createverticest": 23, "pgr_analyzeonewai": 23, "pgr_analyzegraph": 23, "pgr_trsp": [23, 104], "pgr_dijkstra": [23, 60], "when": [23, 53, 55, 65, 71, 105, 106, 116, 129, 130], "ar": [23, 53, 55, 65, 71, 105, 106, 116], "pgr_trspviavertic": 23, "pgr_dijkstravia": [23, 65], "pgr_trspvia": [23, 105], "pgr_trspviaedg": 23, "pgr_withpointsvia": [23, 116], "pgr_trspvia_withpoint": [23, 106], "Not": 23, "yet": 23, "classifi": 23, "pgr_withpointsksp": [23, 115], "pgr_withpoint": [23, 111], "pgr_trsp_withpoint": [23, 107], "pgr_maxcardinalitymatch": [23, 86], "old": 23, "structur": [23, 25], "new": 23, "graph": [25, 52, 53, 54, 55, 58, 60, 83, 84, 122], "reverse_cost": [25, 60, 122], "without": 25, "geometri": [25, 30, 71], "wiki": 25, "prepar": 25, "databas": [25, 26, 52, 71], "creat": [25, 30, 52, 53, 55, 71, 84, 129, 130], "insert": 25, "find": [25, 58, 72], "load": 25, "adjust": 25, "updat": [25, 52], "length": 25, "base": 25, "check": 25, "cross": 25, "fix": [25, 97, 98], "an": [25, 29, 54, 72, 97], "intersect": [25, 97], "touch": 25, "gap": [25, 98], "connect": [25, 29, 51], "dead": [25, 52, 53, 58], "end": [25, 52, 53, 58, 65, 105, 106, 116], "linear": [25, 52, 55, 58], "": [25, 65, 105, 106, 116], "overload": 25, "id": 25, "x": [25, 120], "y": 25, "via": [25, 65, 105, 106, 116, 128], "For": [25, 60], "simpl": 25, "tip": 25, "how": [25, 105, 106], "contribut": 25, "instal": 26, "short": 26, "version": 26, "get": [26, 30, 60, 97, 98], "sourc": 26, "enabl": 26, "upgrad": 26, "depend": 26, "configur": 26, "variabl": 26, "test": [26, 30], "licens": 27, "contributor": 27, "thi": 27, "individu": 27, "v4": 27, "alphabet": 27, "translat": 27, "corpor": 27, "sponsor": 27, "past": 27, "present": 27, "more": 27, "ksp": [28, 108, 115], "addit": [28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 76, 82, 83, 84, 87, 88, 89, 96, 100, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116], "pgr_tsp": [29, 113], "start": 29, "1": [29, 60, 120], "interest": [29, 72, 122], "asymmetr": 29, "incomplet": 29, "pgr_tspeuclidean": 30, "coordin": 30, "29": [30, 60], "citi": 30, "western": 30, "sahara": 30, "store": [30, 52, 84], "ad": [30, 84], "visual": 30, "purpos": 30, "total": 30, "tour": 30, "pgr_astar": 31, "pgr_astarcost": 32, "pgr_astarcostmatrix": 33, "pgr_articulationpoint": 34, "pgr_bdastar": 35, "pgr_bdastarcost": 36, "pgr_bdastarcostmatrix": 37, "pgr_bddijkstra": 38, "pgr_bddijkstracost": 39, "pgr_bddijkstracostmatrix": 40, "pgr_bellmanford": 41, "pgr_betweennesscentr": 42, "pgr_biconnectedcompon": 43, "pgr_binarybreadthfirstsearch": 44, "pgr_bipartit": 45, "pgr_boykovkolmogorov": 46, "pgr_breadthfirstsearch": 47, "pgr_bridg": 48, "pgr_chinesepostman": 49, "pgr_chinesepostmancost": 50, "pgr_connectedcompon": 51, "disconnect": 51, "pgr_contract": 52, "onli": [52, 60], "cycl": 52, "sampl": [52, 122], "construct": 52, "process": [52, 54], "add": [52, 54, 84], "pgr_contractiondeadend": 53, "undirect": [53, 54, 60, 122], "direct": [53, 60, 83, 122], "step": [53, 54, 55], "creation": [53, 55], "departur": [53, 55], "destin": [53, 55], "i": [53, 55, 71], "pgr_contractionhierarchi": 54, "hierarchi": 54, "On": [54, 129, 130], "forbidden": 54, "detail": 54, "shortcut": 54, "initi": 54, "queue": 54, "first": 54, "final": 54, "exist": 54, "pgr_contractionlinear": 55, "symmetr": 55, "pgr_cuthillmckeeord": 56, "pgr_dagshortestpath": 57, "return": [57, 89], "pgr_degre": 58, "degre": 58, "loop": [58, 84], "sub": 58, "dry": [58, 71, 72], "run": [58, 71, 72], "execut": [58, 71, 72], "pgr_depthfirstsearch": 59, "6": [60, 120], "10": 60, "2": [60, 120], "7": [60, 120], "3": [60, 120], "12": 60, "5": [60, 120], "solut": 60, "8": [60, 120], "9": [60, 120], "11": 60, "13": 60, "14": 60, "15": 60, "16": 60, "17": 60, "18": 60, "19": 60, "20": 60, "21": 60, "22": 60, "23": 60, "24": 60, "25": 60, "26": 60, "27": 60, "28": 60, "30": 60, "31": 60, "32": 60, "equval": 60, "between": 60, "33": 60, "34": 60, "35": 60, "36": 60, "37": 60, "pgr_dijkstracost": 61, "pgr_dijkstracostmatrix": 62, "pgr_dijkstranear": 63, "Near": [63, 64], "pgr_dijkstranearcost": 64, "main": [65, 105, 122], "aggreg": [65, 105, 106, 116], "third": [65, 105, 106, 116], "visit": [65, 105, 106, 107, 111, 116], "reach": [65, 105, 106, 116], "statu": [65, 105, 106, 116], "pass": [65, 105, 106, 107, 111, 116], "front": [65, 105, 106, 107, 111, 116], "pgr_edgecolor": 67, "pgr_edmondskarp": 69, "pgr_edwardmoor": 70, "pgr_extractvertic": 71, "line": [71, 83], "known": 71, "identifi": [71, 83, 84], "make": 71, "sure": 71, "doe": [71, 112, 114, 129, 130], "have": 71, "vertices_t": 71, "clean": 71, "up": [71, 72, 122], "inspect": 71, "pgr_findcloseedg": [72, 106, 107, 111, 112, 113, 114, 115, 116], "most": 72, "two": 72, "given": 72, "fill": [72, 84, 122], "pgr_floydwarshal": 73, "pgr_full_vers": 74, "pgr_hawickcircuit": 75, "pgr_isplanar": 76, "pgr_johnson": 77, "pgr_kruskal": 78, "pgr_kruskalbf": 79, "pgr_lengauertarjandominatortre": 82, "pgr_linegraph": 83, "represent": 83, "share": 83, "repres": 83, "uniqu": 83, "pgr_linegraphful": 84, "transform": [84, 125], "map": 84, "soft": 84, "valu": 84, "simplifi": 84, "leaf": 84, "give": 84, "veric": 84, "self": 84, "complet": 84, "newli": 84, "calcul": 84, "pgr_makeconnect": 85, "pgr_maxflow": 87, "pgr_maxflowmincost": 88, "pgr_maxflowmincost_cost": 89, "pgr_pickdeliv": 90, "pgr_pickdelivereuclidean": 91, "pgr_prim": 92, "pgr_primbf": 93, "pgr_primdd": 94, "pgr_primdf": 95, "pgr_pushrelabel": 96, "pgr_separatecross": 97, "further": [97, 98], "refin": [97, 98], "pgr_separatetouch": 98, "pgr_sequentialvertexcolor": 99, "pgr_stoerwagn": 100, "pgr_strongcompon": 101, "pgr_topologicalsort": 102, "pgr_transitiveclosur": 103, "simul": [105, 106], "work": [105, 106], "With": [106, 107, 111, 114, 116, 130], "fly": 106, "usag": [106, 107, 111, 116], "variat": [106, 107, 111, 116], "right": [107, 111, 112, 115, 129, 130], "side": [107, 111, 112, 114, 115, 129, 130], "left": [107, 111, 112, 115, 129, 130], "pgr_turnrestrictedpath": 108, "special": 108, "pgr_version": 109, "pgr_vrponedepot": 110, "pgr_withpointscost": 112, "matter": [112, 114, 129, 130], "pgr_withpointscostmatrix": 113, "withpointsksp": 115, "prim": 117, "refer": 119, "mayor": 120, "minor": 120, "05": 120, "03": 120, "02": 120, "01": 120, "0b": 120, "0a": 120, "outsid": 122, "support": [122, 124], "imag": 122, "report": 124, "mail": 124, "list": 124, "gi": 124, "stackexchang": 124, "commerci": 124, "travers": 126, "util": 127, "withpoint": [129, 130], "about": [129, 130], "temporari": [129, 130], "hand": [129, 130], "network": [129, 130]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"BFS - Category": [[0, "bfs-category"]], "Parameters": [[0, "parameters"], [3, "parameters"], [5, "parameters"], [7, "parameters"], [10, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [25, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"]], "BFS optional parameters": [[0, "bfs-optional-parameters"], [79, "bfs-optional-parameters"], [93, "bfs-optional-parameters"]], "Inner Queries": [[0, "inner-queries"], [5, "inner-queries"], [7, "inner-queries"], [10, "inner-queries"], [15, "inner-queries"], [16, "inner-queries"], [17, "inner-queries"], [19, "inner-queries"], [21, "inner-queries"], [25, "inner-queries"], [28, "inner-queries"], [29, "inner-queries"], [30, "inner-queries"], [31, "inner-queries"], [32, "inner-queries"], [33, "inner-queries"], [34, "inner-queries"], [35, "inner-queries"], [36, "inner-queries"], [37, "inner-queries"], [38, "inner-queries"], [39, "inner-queries"], [40, "inner-queries"], [41, "inner-queries"], [42, "inner-queries"], [43, "inner-queries"], [44, "inner-queries"], [45, "inner-queries"], [46, "inner-queries"], [47, "inner-queries"], [48, "inner-queries"], [49, "inner-queries"], [50, "inner-queries"], [51, "inner-queries"], [52, "inner-queries"], [53, "inner-queries"], [54, "inner-queries"], [55, "inner-queries"], [56, "inner-queries"], [57, "inner-queries"], [58, "inner-queries"], [59, "inner-queries"], [60, "inner-queries"], [61, "inner-queries"], [62, "inner-queries"], [63, "inner-queries"], [64, "inner-queries"], [65, "inner-queries"], [66, "inner-queries"], [67, "inner-queries"], [68, "inner-queries"], [69, "inner-queries"], [70, "inner-queries"], [71, "inner-queries"], [72, "inner-queries"], [73, "inner-queries"], [75, "inner-queries"], [76, "inner-queries"], [77, "inner-queries"], [78, "inner-queries"], [79, "inner-queries"], [80, "inner-queries"], [81, "inner-queries"], [82, "inner-queries"], [83, "inner-queries"], [84, "inner-queries"], [85, "inner-queries"], [86, "inner-queries"], [87, "inner-queries"], [88, "inner-queries"], [89, "inner-queries"], [92, "inner-queries"], [93, "inner-queries"], [94, "inner-queries"], [95, "inner-queries"], [96, "inner-queries"], [97, "inner-queries"], [98, "inner-queries"], [99, "inner-queries"], [100, "inner-queries"], [101, "inner-queries"], [102, "inner-queries"], [103, "inner-queries"], [104, "inner-queries"], [105, "inner-queries"], [106, "inner-queries"], [107, "inner-queries"], [108, "inner-queries"], [110, "inner-queries"], [111, "inner-queries"], [112, "inner-queries"], [113, "inner-queries"], [114, "inner-queries"], [115, "inner-queries"], [116, "inner-queries"], [117, "inner-queries"], [128, "inner-queries"], [129, "inner-queries"], [130, "inner-queries"]], "Edges SQL": [[0, "edges-sql"], [3, "edges-sql"], [7, "edges-sql"], [10, "edges-sql"], [15, "edges-sql"], [16, "edges-sql"], [17, "edges-sql"], [19, "edges-sql"], [25, "edges-sql"], [28, "edges-sql"], [31, "edges-sql"], [32, "edges-sql"], [33, "edges-sql"], [34, "edges-sql"], [35, "edges-sql"], [36, "edges-sql"], [37, "edges-sql"], [38, "edges-sql"], [39, "edges-sql"], [40, "edges-sql"], [41, "edges-sql"], [42, "edges-sql"], [43, "edges-sql"], [44, "edges-sql"], [45, "edges-sql"], [46, "edges-sql"], [47, "edges-sql"], [48, "edges-sql"], [49, "edges-sql"], [50, "edges-sql"], [51, "edges-sql"], [52, "edges-sql"], [53, "edges-sql"], [54, "edges-sql"], [55, "edges-sql"], [56, "edges-sql"], [57, "edges-sql"], [58, "edges-sql"], [59, "edges-sql"], [60, "edges-sql"], [61, "edges-sql"], [62, "edges-sql"], [63, "edges-sql"], [64, "edges-sql"], [65, "edges-sql"], [66, "edges-sql"], [67, "edges-sql"], [68, "edges-sql"], [69, "edges-sql"], [70, "edges-sql"], [71, "edges-sql"], [72, "edges-sql"], [73, "edges-sql"], [75, "edges-sql"], [76, "edges-sql"], [77, "edges-sql"], [78, "edges-sql"], [79, "edges-sql"], [80, "edges-sql"], [81, "edges-sql"], [82, "edges-sql"], [83, "edges-sql"], [84, "edges-sql"], [85, "edges-sql"], [86, "edges-sql"], [87, "edges-sql"], [88, "edges-sql"], [89, "edges-sql"], [92, "edges-sql"], [93, "edges-sql"], [94, "edges-sql"], [95, "edges-sql"], [96, "edges-sql"], [97, "edges-sql"], [98, "edges-sql"], [99, "edges-sql"], [100, "edges-sql"], [101, "edges-sql"], [102, "edges-sql"], [103, "edges-sql"], [104, "edges-sql"], [105, "edges-sql"], [106, "edges-sql"], [107, "edges-sql"], [108, "edges-sql"], [111, "edges-sql"], [112, "edges-sql"], [113, "edges-sql"], [114, "edges-sql"], [115, "edges-sql"], [116, "edges-sql"], [128, "edges-sql"], [129, "edges-sql"], [130, "edges-sql"]], "Result columns": [[0, "result-columns"], [5, "result-columns"], [7, "result-columns"], [11, "result-columns"], [15, "result-columns"], [17, "result-columns"], [19, "result-columns"], [25, "result-columns"], [28, "result-columns"], [29, "result-columns"], [30, "result-columns"], [31, "result-columns"], [32, "result-columns"], [33, "result-columns"], [34, "result-columns"], [35, "result-columns"], [36, "result-columns"], [37, "result-columns"], [38, "result-columns"], [39, "result-columns"], [40, "result-columns"], [41, "result-columns"], [42, "result-columns"], [43, "result-columns"], [44, "result-columns"], [45, "result-columns"], [46, "result-columns"], [47, "result-columns"], [48, "result-columns"], [49, "result-columns"], [50, "result-columns"], [51, "result-columns"], [52, "result-columns"], [53, "result-columns"], [54, "result-columns"], [55, "result-columns"], [56, "result-columns"], [58, "result-columns"], [59, "result-columns"], [60, "result-columns"], [61, "result-columns"], [62, "result-columns"], [63, "result-columns"], [64, "result-columns"], [65, "result-columns"], [66, "result-columns"], [67, "result-columns"], [68, "result-columns"], [69, "result-columns"], [70, "result-columns"], [71, "result-columns"], [72, "result-columns"], [73, "result-columns"], [74, "result-columns"], [75, "result-columns"], [76, "result-columns"], [77, "result-columns"], [78, "result-columns"], [79, "result-columns"], [80, "result-columns"], [81, "result-columns"], [82, "result-columns"], [83, "result-columns"], [84, "result-columns"], [85, "result-columns"], [86, "result-columns"], [87, "result-columns"], [88, "result-columns"], [90, "result-columns"], [91, "result-columns"], [92, "result-columns"], [93, "result-columns"], [94, "result-columns"], [95, "result-columns"], [96, "result-columns"], [99, "result-columns"], [100, "result-columns"], [101, "result-columns"], [102, "result-columns"], [103, "result-columns"], [104, "result-columns"], [105, "result-columns"], [106, "result-columns"], [107, "result-columns"], [108, "result-columns"], [109, "result-columns"], [110, "result-columns"], [111, "result-columns"], [112, "result-columns"], [113, "result-columns"], [114, "result-columns"], [115, "result-columns"], [116, "result-columns"], [128, "result-columns"]], "See Also": [[0, "see-also"], [1, "see-also"], [3, "see-also"], [4, "see-also"], [5, "see-also"], [6, "see-also"], [7, "see-also"], [8, "see-also"], [9, "see-also"], [10, "see-also"], [11, "see-also"], [12, "see-also"], [13, "see-also"], [14, "see-also"], [15, "see-also"], [16, "see-also"], [17, "see-also"], [18, "see-also"], [19, "see-also"], [21, "see-also"], [22, "see-also"], [23, "see-also"], [24, "see-also"], [26, "see-also"], [28, "see-also"], [29, "see-also"], [30, "see-also"], [31, "see-also"], [32, "see-also"], [33, "see-also"], [34, "see-also"], [35, "see-also"], [36, "see-also"], [37, "see-also"], [38, "see-also"], [39, "see-also"], [40, "see-also"], [41, "see-also"], [42, "see-also"], [43, "see-also"], [44, "see-also"], [45, "see-also"], [46, "see-also"], [47, "see-also"], [48, "see-also"], [49, "see-also"], [50, "see-also"], [51, "see-also"], [52, "see-also"], [53, "see-also"], [54, "see-also"], [55, "see-also"], [56, "see-also"], [57, "see-also"], [58, "see-also"], [59, "see-also"], [60, "see-also"], [61, "see-also"], [62, "see-also"], [63, "see-also"], [64, "see-also"], [65, "see-also"], [66, "see-also"], [67, "see-also"], [68, "see-also"], [69, "see-also"], [70, "see-also"], [71, "see-also"], [72, "see-also"], [73, "see-also"], [74, "see-also"], [75, "see-also"], [76, "see-also"], [77, "see-also"], [78, "see-also"], [79, "see-also"], [80, "see-also"], [81, "see-also"], [82, "see-also"], [83, "see-also"], [84, "see-also"], [85, "see-also"], [86, "see-also"], [87, "see-also"], [88, "see-also"], [89, "see-also"], [90, "see-also"], [91, "see-also"], [92, "see-also"], [93, "see-also"], [94, "see-also"], [95, "see-also"], [96, "see-also"], [97, "see-also"], [98, "see-also"], [99, "see-also"], [100, "see-also"], [101, "see-also"], [102, "see-also"], [103, "see-also"], [104, "see-also"], [105, "see-also"], [106, "see-also"], [107, "see-also"], [108, "see-also"], [109, "see-also"], [110, "see-also"], [111, "see-also"], [112, "see-also"], [113, "see-also"], [114, "see-also"], [115, "see-also"], [116, "see-also"], [117, "see-also"], [118, "see-also"], [119, "see-also"], [121, "see-also"], [123, "see-also"], [125, "see-also"], [126, "see-also"], [127, "see-also"], [128, "see-also"], [129, "see-also"], [130, "see-also"]], "DFS - Category": [[1, "dfs-category"]], "Proposed": [[1, null], [11, null], [13, null], [14, null], [16, null], [53, null], [58, null], [59, null], [63, null], [64, null], [65, null], [83, null], [99, null], [118, null], [125, null], [126, null], [128, null]], "K shortest paths - Category": [[2, "k-shortest-paths-category"]], "TRSP - Family of functions": [[3, "trsp-family-of-functions"]], "Experimental": [[3, null], [5, null], [10, null], [11, null], [12, null], [13, null], [18, null], [19, null], [22, null], [24, null], [41, null], [44, null], [45, null], [47, null], [49, null], [50, null], [56, null], [57, null], [67, null], [70, null], [75, null], [76, null], [82, null], [84, null], [85, null], [88, null], [89, null], [90, null], [91, null], [100, null], [102, null], [103, null], [108, null], [110, null], [125, null], [126, null]], "Introduction": [[3, "introduction"], [5, "introduction"], [7, "introduction"], [13, "introduction"], [16, "introduction"], [27, "introduction"], [125, "introduction"], [129, "introduction"], [130, "introduction"]], "TRSP algorithm": [[3, "trsp-algorithm"]], "Restrictions": [[3, "restrictions"], [122, "restrictions"]], "Restrictions SQL": [[3, "restrictions-sql"], [25, "restrictions-sql"], [104, "restrictions-sql"], [105, "restrictions-sql"], [106, "restrictions-sql"], [107, "restrictions-sql"], [108, "restrictions-sql"], [128, "restrictions-sql"]], "Traveling Sales Person - Family of functions": [[4, "traveling-sales-person-family-of-functions"]], "Table of Contents": [[4, "table-of-contents"], [20, "table-of-contents"]], "General Information": [[4, "general-information"], [14, "general-information"], [15, "general-information"], [128, "general-information"]], "Problem Definition": [[4, "problem-definition"], [29, "problem-definition"], [30, "problem-definition"]], "Origin": [[4, "origin"]], "Characteristics": [[4, "characteristics"], [5, "characteristics"], [9, "characteristics"], [14, "characteristics"], [15, "characteristics"], [29, "characteristics"], [30, "characteristics"], [63, "characteristics"], [64, "characteristics"], [90, "characteristics"], [91, "characteristics"]], "TSP optional parameters": [[4, "tsp-optional-parameters"], [29, "tsp-optional-parameters"], [30, "tsp-optional-parameters"]], "Vehicle Routing Functions - Category": [[5, "vehicle-routing-functions-category"]], "Contents": [[5, "contents"], [20, "contents"], [23, "contents"], [23, "id1"], [23, "id4"], [120, "contents"], [120, "id1"], [120, "id2"], [120, "id3"], [120, "id4"], [120, "id5"], [120, "id6"], [120, "id7"], [120, "id8"], [120, "id9"], [120, "id10"], [120, "id11"], [120, "id12"], [120, "id13"], [120, "id14"], [120, "id15"], [120, "id16"], [120, "id17"], [129, "contents"], [130, "contents"]], "Pick & Delivery": [[5, "pick-delivery"]], "Pick & deliver": [[5, "pick-deliver"]], "Pick-Deliver optional parameters": [[5, "pick-deliver-optional-parameters"], [90, "pick-deliver-optional-parameters"], [91, "pick-deliver-optional-parameters"]], "Orders SQL": [[5, "orders-sql"], [90, "orders-sql"], [91, "orders-sql"]], "Vehicles SQL": [[5, "vehicles-sql"], [90, "vehicles-sql"], [91, "vehicles-sql"]], "Matrix SQL": [[5, "matrix-sql"], [29, "matrix-sql"], [90, "matrix-sql"]], "Summary Row": [[5, "summary-row"]], "Handling Parameters": [[5, "handling-parameters"]], "Capacity and Demand Units Handling": [[5, "capacity-and-demand-units-handling"]], "Locations": [[5, "locations"]], "Time Handling": [[5, "time-handling"]], "Factor handling": [[5, "factor-handling"]], "A* - Family of functions": [[6, "a-family-of-functions"]], "Description": [[6, "description"], [8, "description"], [10, "description"], [21, "description"], [28, "description"], [29, "description"], [30, "description"], [31, "description"], [32, "description"], [33, "description"], [34, "description"], [35, "description"], [36, "description"], [37, "description"], [38, "description"], [39, "description"], [40, "description"], [41, "description"], [42, "description"], [43, "description"], [44, "description"], [45, "description"], [46, "description"], [47, "description"], [48, "description"], [49, "description"], [50, "description"], [51, "description"], [52, "description"], [53, "description"], [54, "description"], [55, "description"], [56, "description"], [57, "description"], [58, "description"], [59, "description"], [60, "description"], [61, "description"], [62, "description"], [63, "description"], [64, "description"], [65, "description"], [66, "description"], [67, "description"], [68, "description"], [69, "description"], [70, "description"], [71, "description"], [72, "description"], [73, "description"], [74, "description"], [75, "description"], [76, "description"], [77, "description"], [78, "description"], [79, "description"], [80, "description"], [81, "description"], [82, "description"], [83, "description"], [84, "description"], [85, "description"], [86, "description"], [87, "description"], [88, "description"], [89, "description"], [92, "description"], [93, "description"], [94, "description"], [95, "description"], [96, "description"], [97, "description"], [98, "description"], [99, "description"], [100, "description"], [101, "description"], [102, "description"], [103, "description"], [104, "description"], [105, "description"], [106, "description"], [107, "description"], [108, "description"], [109, "description"], [110, "description"], [111, "description"], [112, "description"], [113, "description"], [114, "description"], [115, "description"], [116, "description"], [117, "description"]], "aStar optional parameters": [[6, "astar-optional-parameters"], [31, "astar-optional-parameters"], [32, "astar-optional-parameters"], [33, "astar-optional-parameters"], [35, "astar-optional-parameters"], [36, "astar-optional-parameters"], [37, "astar-optional-parameters"]], "Advanced documentation": [[6, "advanced-documentation"], [16, "advanced-documentation"], [129, "advanced-documentation"]], "Heuristic": [[6, "heuristic"]], "Factor": [[6, "factor"]], "All Pairs - Family of Functions": [[7, "all-pairs-family-of-functions"]], "Optional parameters": [[7, "optional-parameters"], [15, "optional-parameters"], [16, "optional-parameters"], [28, "optional-parameters"], [31, "optional-parameters"], [32, "optional-parameters"], [33, "optional-parameters"], [35, "optional-parameters"], [36, "optional-parameters"], [37, "optional-parameters"], [38, "optional-parameters"], [39, "optional-parameters"], [40, "optional-parameters"], [41, "optional-parameters"], [42, "optional-parameters"], [44, "optional-parameters"], [47, "optional-parameters"], [52, "optional-parameters"], [53, "optional-parameters"], [54, "optional-parameters"], [55, "optional-parameters"], [58, "optional-parameters"], [59, "optional-parameters"], [60, "optional-parameters"], [61, "optional-parameters"], [62, "optional-parameters"], [65, "optional-parameters"], [66, "optional-parameters"], [68, "optional-parameters"], [70, "optional-parameters"], [71, "optional-parameters"], [72, "optional-parameters"], [73, "optional-parameters"], [75, "optional-parameters"], [77, "optional-parameters"], [83, "optional-parameters"], [97, "optional-parameters"], [98, "optional-parameters"], [104, "optional-parameters"], [105, "optional-parameters"], [106, "optional-parameters"], [107, "optional-parameters"], [108, "optional-parameters"], [111, "optional-parameters"], [112, "optional-parameters"], [113, "optional-parameters"], [114, "optional-parameters"], [115, "optional-parameters"], [116, "optional-parameters"], [129, "optional-parameters"], [130, "optional-parameters"]], "Performance": [[7, "performance"]], "Data": [[7, "data"]], "Results": [[7, "results"]], "Bidirectional A* - Family of functions": [[8, "bidirectional-a-family-of-functions"]], "Bidirectional Dijkstra - Family of functions": [[9, "bidirectional-dijkstra-family-of-functions"]], "Synopsis": [[9, "synopsis"], [15, "synopsis"], [90, "synopsis"], [91, "synopsis"]], "Chinese Postman Problem - Family of functions (Experimental)": [[10, "chinese-postman-problem-family-of-functions-experimental"]], "Coloring - Family of functions": [[11, "coloring-family-of-functions"]], "Components - Family of functions": [[12, "components-family-of-functions"]], "Contraction - Family of functions": [[13, "contraction-family-of-functions"]], "Cost - Category": [[14, "cost-category"]], "Cost Matrix - Category": [[15, "cost-matrix-category"]], "Points SQL": [[15, "points-sql"], [25, "points-sql"], [106, "points-sql"], [107, "points-sql"], [111, "points-sql"], [112, "points-sql"], [113, "points-sql"], [114, "points-sql"], [115, "points-sql"], [116, "points-sql"], [128, "points-sql"], [129, "points-sql"], [130, "points-sql"]], "Dijkstra - Family of functions": [[16, "dijkstra-family-of-functions"]], "Combinations SQL": [[16, "combinations-sql"], [19, "combinations-sql"], [25, "combinations-sql"], [28, "combinations-sql"], [31, "combinations-sql"], [32, "combinations-sql"], [35, "combinations-sql"], [36, "combinations-sql"], [38, "combinations-sql"], [39, "combinations-sql"], [41, "combinations-sql"], [44, "combinations-sql"], [46, "combinations-sql"], [57, "combinations-sql"], [60, "combinations-sql"], [61, "combinations-sql"], [63, "combinations-sql"], [64, "combinations-sql"], [68, "combinations-sql"], [69, "combinations-sql"], [70, "combinations-sql"], [87, "combinations-sql"], [88, "combinations-sql"], [89, "combinations-sql"], [96, "combinations-sql"], [104, "combinations-sql"], [107, "combinations-sql"], [111, "combinations-sql"], [112, "combinations-sql"], [115, "combinations-sql"], [129, "combinations-sql"], [130, "combinations-sql"]], "The problem definition (Advanced documentation)": [[16, "the-problem-definition-advanced-documentation"]], "Driving Distance - Category": [[17, "driving-distance-category"]], "Experimental Functions": [[18, "experimental-functions"]], "Flow - Family of functions": [[19, "flow-family-of-functions"]], "Flow Functions General Information": [[19, "flow-functions-general-information"]], "Advanced Documentation": [[19, "advanced-documentation"], [130, "advanced-documentation"]], "General": [[20, "general"], [25, "general"]], "Pgrouting Concepts": [[20, "pgrouting-concepts"]], "Function Families": [[20, "routingfunctions"], [121, "function-families"]], "Functions by categories": [[20, "functions-by-categories"], [121, "functions-by-categories"]], "Available Functions but not official pgRouting functions": [[20, "available-functions-but-not-official-pgrouting-functions"]], "Release Notes": [[20, "release-notes"], [120, "release-notes"]], "pgRouting 4.0.0 Release Notes": [[20, "pgrouting-4-0-0-release-notes"], [120, "pgrouting-4-0-0-release-notes"]], "Build": [[20, "build"], [120, "build"]], "Documentation build": [[20, "documentation-build"], [120, "documentation-build"]], "Summary of changes by function": [[20, "summary-of-changes-by-function"], [120, "summary-of-changes-by-function"]], "Functions promoted to official": [[20, "functions-promoted-to-official"], [120, "functions-promoted-to-official"]], "Signatures promoted to official": [[20, "signatures-promoted-to-official"], [120, "signatures-promoted-to-official"]], "SQL signatures and output standardization": [[20, "sql-signatures-and-output-standardization"], [120, "sql-signatures-and-output-standardization"]], "Removal of SQL deprecated signatures": [[20, "removal-of-sql-deprecated-signatures"], [120, "removal-of-sql-deprecated-signatures"]], "Removal of SQL deprecated functions": [[20, "removal-of-sql-deprecated-functions"], [120, "removal-of-sql-deprecated-functions"]], "Removal of SQL deprecated internal functions": [[20, "removal-of-sql-deprecated-internal-functions"], [120, "removal-of-sql-deprecated-internal-functions"]], "Summary of functions and signatures no longer on pgrouting": [[20, "summary-of-functions-and-signatures-no-longer-on-pgrouting"], [120, "summary-of-functions-and-signatures-no-longer-on-pgrouting"]], "Code enhancements": [[20, "code-enhancements"], [120, "code-enhancements"]], "All releases": [[20, "all-releases"]], "Kruskal - Family of functions": [[21, "kruskal-family-of-functions"]], "Metrics - Family of functions": [[22, "metrics-family-of-functions"]], "Migration guide": [[23, "migration-guide"]], "Migration to standardized columns": [[23, "migration-to-standardized-columns"]], "Migration of cost functions": [[23, "migration-of-cost-functions"]], "Examples": [[23, "examples"], [23, "id2"], [23, "id3"], [54, "examples"], [97, "examples"], [98, "examples"]], "Examples for One to One for cost functions": [[23, "examples-for-one-to-one-for-cost-functions"]], "Examples for One to Many for cost functions": [[23, "examples-for-one-to-many-for-cost-functions"]], "Examples for Many to One for cost functions": [[23, "examples-for-many-to-one-for-cost-functions"]], "Examples for Many to Many for cost functions": [[23, "examples-for-many-to-many-for-cost-functions"]], "Examples for Combinations for cost functions": [[23, "examples-for-combinations-for-cost-functions"]], "Migration of multiple paths functions": [[23, "migration-of-multiple-paths-functions"]], "Migration of (seq, path_id, path_seq, node, edge, cost, agg_cost)": [[23, "migration-of-ksp-result"]], "One to One example using pgr_KSP": [[23, "one-to-one-example-using-pgr-ksp"]], "Migration of (seq, path_id, path_seq, [start_vid,] [end_vid,] node, edge, cost, agg_cost)": [[23, "migration-of-result-disjoint"]], "One to One example using pgr_edgeDisjointPaths": [[23, "one-to-one-example-using-pgr-edgedisjointpaths"]], "Migration of single path functions": [[23, "migration-of-single-path-functions"]], "Examples with One to One with one route result": [[23, "examples-with-one-to-one-with-one-route-result"]], "Examples for One to Many with one route result": [[23, "examples-for-one-to-many-with-one-route-result"]], "Examples for Many to One with one route result": [[23, "examples-for-many-to-one-with-one-route-result"]], "Examples for Many to Many with one route result": [[23, "examples-for-many-to-many-with-one-route-result"]], "Examples for combinations with one route result": [[23, "examples-for-combinations-with-one-route-result"]], "Migration of spanning tree functions": [[23, "migration-of-spanning-tree-functions"]], "Migration from (seq, depth, start_vid, node, edge, cost, agg_cost).": [[23, "migration-from-result-bfs"]], "Single vertex example using pgr_kruskalDD": [[23, "single-vertex-example-using-pgr-kruskaldd"]], "Multiple vertices example using pgr_kruskalDFS": [[23, "multiple-vertices-example-using-pgr-kruskaldfs"]], "Migration from (seq, [from_v,] node, edge, cost, agg_cost)": [[23, "migration-from-result-dij-dd"]], "Single vertex example using pgr_drivingDistance": [[23, "single-vertex-example-using-pgr-drivingdistance"]], "Multiple vertices example using pgr_drivingDistance": [[23, "multiple-vertices-example-using-pgr-drivingdistance"]], "Migration of (seq, [start_vid], node, edge, cost, agg_cost)": [[23, "migration-of-result-generic-no-seq"]], "Single vertex example using pgr_withPointsDD": [[23, "single-vertex-example-using-pgr-withpointsdd"]], "Multiple vertices example using pgr_withPointsDD": [[23, "multiple-vertices-example-using-pgr-withpointsdd"]], "Migration of output column name change": [[23, "migration-of-output-column-name-change"]], "Migration from (seq, vid, target_array)": [[23, "migration-from-result-old-closure"]], "Migration from (seq, sorted_v)": [[23, "migration-from-result-toposort"]], "Migration from (edge_id, color_id)": [[23, "migration-from-old-edge-color"]], "Migration from (vertex_id, color_id)": [[23, "migration-from-old-node-color"]], "Migration of deleted functions": [[23, "migration-of-deleted-functions"]], "Migration of pgr_alphaShape": [[23, "migration-of-pgr-alphashape"]], "Migration of pgr_nodeNetwork": [[23, "migration-of-pgr-nodenetwork"]], "Migration of pgr_createTopology": [[23, "migration-of-pgr-createtopology"]], "Build a routing topology": [[23, "build-a-routing-topology"], [25, "build-a-routing-topology"]], "Migration of pgr_createVerticesTable": [[23, "migration-of-pgr-createverticestable"]], "Migration of pgr_analyzeOneWay": [[23, "migration-of-pgr-analyzeoneway"]], "Migration of pgr_analyzeGraph": [[23, "migration-of-pgr-analyzegraph"]], "Migration of pgr_trsp (Vertices)": [[23, "migration-of-pgr-trsp-vertices"]], "Use pgr_dijkstra when there are no restrictions.": [[23, "use-pgr-dijkstra-when-there-are-no-restrictions"]], "Use pgr_trsp when there are restrictions.": [[23, "use-pgr-trsp-when-there-are-restrictions"]], "Migration of pgr_trsp (Edges)": [[23, "migration-of-pgr-trsp-edges"]], "Migration of pgr_trspViaVertices": [[23, "migration-of-pgr-trspviavertices"]], "Use pgr_dijkstraVia when there are no restrictions": [[23, "use-pgr-dijkstravia-when-there-are-no-restrictions"]], "Use pgr_trspVia when there are restrictions": [[23, "use-pgr-trspvia-when-there-are-restrictions"]], "Migration of pgr_trspViaEdges": [[23, "migration-of-pgr-trspviaedges"]], "Use pgr_withPointsVia when there are no restrictions": [[23, "use-pgr-withpointsvia-when-there-are-no-restrictions"]], "Use pgr_trspVia_withPoints when there are restrictions": [[23, "use-pgr-trspvia-withpoints-when-there-are-restrictions"]], "Not yet classified migrations": [[23, "not-yet-classified-migrations"]], "Migration of pgr_withPointsKSP": [[23, "migration-of-pgr-withpointsksp"]], "pgr_withPointsKSP (One to One)": [[23, "pgr-withpointsksp-one-to-one"]], "Use pgr_withPoints when there are no restrictions.": [[23, "use-pgr-withpoints-when-there-are-no-restrictions"]], "Use pgr_trsp_withPoints when there are restrictions.": [[23, "use-pgr-trsp-withpoints-when-there-are-restrictions"]], "Migration of pgr_maxCardinalityMatch": [[23, "migration-of-pgr-maxcardinalitymatch"]], "Migration of restrictions": [[23, "migration-of-restrictions"]], "Old restrictions structure": [[23, "old-restrictions-structure"]], "Old restrictions contents": [[23, "old-restrictions-contents"]], "New restrictions structure": [[23, "new-restrictions-structure"]], "Migration": [[23, "migration"]], "Ordering - Family of functions": [[24, "ordering-family-of-functions"]], "pgRouting Concepts": [[25, "pgrouting-concepts"]], "Graphs": [[25, "graphs"]], "Graph definition": [[25, "graph-definition"]], "Graph with cost": [[25, "graph-with-cost"]], "Graph with cost and reverse_cost": [[25, "graph-with-cost-and-reverse-cost"]], "Graphs without geometries": [[25, "graphs-without-geometries"]], "Wiki example": [[25, "wiki-example"]], "Prepare the database": [[25, "prepare-the-database"]], "Create a table": [[25, "create-a-table"]], "Insert the data": [[25, "insert-the-data"]], "Find the shortest path": [[25, "find-the-shortest-path"]], "Vertex information": [[25, "vertex-information"]], "Graphs with geometries": [[25, "graphs-with-geometries"]], "Create a routing Database": [[25, "create-a-routing-database"]], "Load Data": [[25, "load-data"]], "Adjust costs": [[25, "adjust-costs"]], "Update costs to length of geometry": [[25, "update-costs-to-length-of-geometry"]], "Update costs based on codes": [[25, "update-costs-based-on-codes"]], "Check the Routing Topology": [[25, "check-the-routing-topology"]], "Crossing edges": [[25, "crossing-edges"]], "Fixing an intersection": [[25, "fixing-an-intersection"], [97, "fixing-an-intersection"]], "Touching edges": [[25, "touching-edges"]], "Fixing a gap": [[25, "fixing-a-gap"], [98, "fixing-a-gap"]], "Connecting components": [[25, "connecting-components"]], "Contraction of a graph": [[25, "contraction-of-a-graph"]], "Dead ends": [[25, "dead-ends"]], "Linear edges": [[25, "linear-edges"], [55, "linear-edges"]], "Function\u2019s structure": [[25, "function-s-structure"]], "": [[25, null], [25, null], [28, null], [28, null], [28, null], [28, null], [28, null], [28, null], [29, "index-1"], [30, "index-1"], [31, null], [31, null], [31, null], [31, null], [31, null], [31, null], [32, null], [32, null], [32, null], [32, null], [32, null], [32, null], [33, null], [34, null], [35, null], [35, null], [35, null], [35, null], [35, null], [35, null], [36, null], [36, null], [36, null], [36, null], [36, null], [36, null], [37, null], [38, null], [38, null], [38, null], [38, null], [38, null], [38, null], [39, null], [39, null], [39, null], [39, null], [39, null], [39, null], [40, null], [41, null], [41, null], [41, null], [41, null], [41, null], [41, null], [42, null], [43, null], [44, null], [44, null], [44, null], [44, null], [44, null], [44, null], [45, null], [46, null], [46, null], [46, null], [46, null], [46, null], [46, null], [47, null], [47, null], [47, null], [48, null], [49, null], [50, null], [51, null], [52, null], [53, null], [54, null], [55, null], [56, "index-1"], [57, null], [57, null], [57, null], [57, null], [57, null], [57, null], [58, null], [58, null], [58, null], [59, null], [59, null], [59, null], [60, null], [60, null], [60, null], [60, null], [60, null], [60, null], [61, null], [61, null], [61, null], [61, null], [61, null], [61, null], [62, null], [63, null], [63, null], [63, null], [63, null], [63, null], [64, null], [64, null], [64, null], [64, null], [64, null], [65, null], [66, null], [66, null], [66, null], [67, null], [68, null], [68, null], [68, null], [68, null], [68, null], [68, null], [69, null], [69, null], [69, null], [69, null], [69, null], [69, null], [70, null], [70, null], [70, null], [70, null], [70, null], [70, null], [71, null], [72, null], [72, null], [72, null], [73, null], [74, null], [75, null], [76, null], [77, null], [78, null], [79, null], [79, null], [79, null], [80, null], [80, null], [80, null], [81, null], [81, null], [81, null], [82, null], [83, null], [84, null], [85, null], [86, "index-1"], [87, null], [87, null], [87, null], [87, null], [87, null], [87, null], [88, null], [88, null], [88, null], [88, null], [88, null], [88, null], [89, null], [89, null], [89, null], [89, null], [89, null], [89, null], [90, null], [90, null], [90, null], [91, null], [91, null], [91, null], [92, null], [93, null], [93, null], [93, null], [94, null], [94, null], [94, null], [95, null], [95, null], [95, null], [96, null], [96, null], [96, null], [96, null], [96, null], [96, null], [97, null], [98, null], [99, null], [100, null], [101, null], [102, null], [103, null], [104, null], [104, null], [104, null], [104, null], [104, null], [104, null], [105, null], [106, null], [107, null], [107, null], [107, null], [107, null], [107, null], [107, null], [108, null], [109, null], [111, null], [111, null], [111, null], [111, null], [111, null], [111, null], [112, null], [112, null], [112, null], [112, null], [112, null], [112, null], [113, null], [114, null], [114, null], [114, null], [115, null], [115, null], [115, null], [115, null], [115, null], [115, null], [116, null]], "Function\u2019s overloads": [[25, "function-s-overloads"]], "One to One": [[25, "one-to-one"], [28, "one-to-one"], [31, "one-to-one"], [32, "one-to-one"], [35, "one-to-one"], [36, "one-to-one"], [38, "one-to-one"], [39, "one-to-one"], [41, "one-to-one"], [44, "one-to-one"], [46, "one-to-one"], [57, "one-to-one"], [60, "one-to-one"], [61, "one-to-one"], [68, "one-to-one"], [69, "one-to-one"], [70, "one-to-one"], [87, "one-to-one"], [88, "one-to-one"], [89, "one-to-one"], [96, "one-to-one"], [104, "one-to-one"], [107, "one-to-one"], [111, "one-to-one"], [112, "one-to-one"], [115, "one-to-one"]], "One to Many": [[25, "one-to-many"], [28, "one-to-many"], [31, "one-to-many"], [32, "one-to-many"], [35, "one-to-many"], [36, "one-to-many"], [38, "one-to-many"], [39, "one-to-many"], [41, "one-to-many"], [44, "one-to-many"], [46, "one-to-many"], [57, "one-to-many"], [60, "one-to-many"], [61, "one-to-many"], [63, "one-to-many"], [64, "one-to-many"], [68, "one-to-many"], [69, "one-to-many"], [70, "one-to-many"], [87, "one-to-many"], [88, "one-to-many"], [89, "one-to-many"], [96, "one-to-many"], [104, "one-to-many"], [107, "one-to-many"], [111, "one-to-many"], [112, "one-to-many"], [115, "one-to-many"]], "Many to One": [[25, "many-to-one"], [28, "many-to-one"], [31, "many-to-one"], [32, "many-to-one"], [35, "many-to-one"], [36, "many-to-one"], [38, "many-to-one"], [39, "many-to-one"], [41, "many-to-one"], [44, "many-to-one"], [46, "many-to-one"], [57, "many-to-one"], [60, "many-to-one"], [61, "many-to-one"], [63, "many-to-one"], [64, "many-to-one"], [68, "many-to-one"], [69, "many-to-one"], [70, "many-to-one"], [87, "many-to-one"], [88, "many-to-one"], [89, "many-to-one"], [96, "many-to-one"], [104, "many-to-one"], [107, "many-to-one"], [111, "many-to-one"], [112, "many-to-one"], [115, "many-to-one"]], "Many to Many": [[25, "many-to-many"], [28, "many-to-many"], [31, "many-to-many"], [32, "many-to-many"], [35, "many-to-many"], [36, "many-to-many"], [38, "many-to-many"], [39, "many-to-many"], [41, "many-to-many"], [44, "many-to-many"], [46, "many-to-many"], [57, "many-to-many"], [60, "many-to-many"], [61, "many-to-many"], [63, "many-to-many"], [64, "many-to-many"], [68, "many-to-many"], [69, "many-to-many"], [70, "many-to-many"], [87, "many-to-many"], [88, "many-to-many"], [89, "many-to-many"], [96, "many-to-many"], [104, "many-to-many"], [107, "many-to-many"], [111, "many-to-many"], [112, "many-to-many"], [115, "many-to-many"]], "Combinations": [[25, "combinations"], [28, "combinations"], [31, "combinations"], [32, "combinations"], [35, "combinations"], [36, "combinations"], [38, "combinations"], [39, "combinations"], [41, "combinations"], [44, "combinations"], [46, "combinations"], [57, "combinations"], [60, "combinations"], [61, "combinations"], [63, "combinations"], [64, "combinations"], [68, "combinations"], [69, "combinations"], [70, "combinations"], [87, "combinations"], [88, "combinations"], [89, "combinations"], [96, "combinations"], [104, "combinations"], [107, "combinations"], [111, "combinations"], [112, "combinations"], [115, "combinations"], [122, "combinations"]], "General without id": [[25, "general-without-id"]], "General with (X,Y)": [[25, "general-with-x-y"]], "Flow": [[25, "flow"]], "Parameters for the Via functions": [[25, "parameters-for-the-via-functions"]], "For the TRSP functions": [[25, "for-the-trsp-functions"]], "Result columns for single path functions": [[25, "result-columns-for-single-path-functions"]], "Result columns for multiple paths functions": [[25, "result-columns-for-multiple-paths-functions"]], "Result columns for cost functions": [[25, "result-columns-for-cost-functions"]], "Result columns for flow functions": [[25, "result-columns-for-flow-functions"]], "Result columns for spanning tree functions": [[25, "result-columns-for-spanning-tree-functions"]], "Result columns for simple spanning tree functions": [[25, "result-columns-for-simple-spanning-tree-functions"]], "Performance Tips": [[25, "performance-tips"]], "For the Routing functions": [[25, "for-the-routing-functions"]], "How to contribute": [[25, "how-to-contribute"]], "See also": [[25, "see-also"]], "Installation": [[26, "installation"]], "Short Version": [[26, "short-version"]], "Get the sources": [[26, "get-the-sources"]], "Enabling and upgrading in the database": [[26, "enabling-and-upgrading-in-the-database"]], "Dependencies": [[26, "dependencies"]], "Configuring": [[26, "configuring"]], "Configurable variables": [[26, "configurable-variables"]], "Building": [[26, "building"]], "Testing": [[26, "testing"]], "Licensing": [[27, "licensing"]], "Contributors": [[27, "contributors"]], "This Release Contributors": [[27, "this-release-contributors"]], "Individuals in this release v4.0.0 (in alphabetical order)": [[27, "individuals-in-this-release-v4-0-0-in-alphabetical-order"]], "Translators (in alphabetical order)": [[27, "translators-in-alphabetical-order"]], "Corporate Sponsors in this release (in alphabetical order)": [[27, "corporate-sponsors-in-this-release-in-alphabetical-order"]], "Contributors Past & Present:": [[27, "contributors-past-present"]], "Individuals (in alphabetical order)": [[27, "individuals-in-alphabetical-order"]], "Corporate Sponsors (in alphabetical order)": [[27, "corporate-sponsors-in-alphabetical-order"]], "More Information": [[27, "more-information"]], "pgr_KSP": [[28, "pgr-ksp"]], "Signatures": [[28, "signatures"], [29, "signatures"], [30, "signatures"], [31, "signatures"], [32, "signatures"], [33, "signatures"], [34, "signatures"], [35, "signatures"], [36, "signatures"], [37, "signatures"], [38, "signatures"], [39, "signatures"], [40, "signatures"], [41, "signatures"], [42, "signatures"], [43, "signatures"], [44, "signatures"], [45, "signatures"], [46, "signatures"], [47, "signatures"], [48, "signatures"], [49, "signatures"], [50, "signatures"], [51, "signatures"], [52, "signatures"], [53, "signatures"], [54, "signatures"], [55, "signatures"], [56, "signatures"], [57, "signatures"], [58, "signatures"], [59, "signatures"], [60, "signatures"], [61, "signatures"], [62, "signatures"], [63, "signatures"], [64, "signatures"], [65, "signatures"], [66, "signatures"], [67, "signatures"], [68, "signatures"], [69, "signatures"], [70, "signatures"], [71, "signatures"], [72, "signatures"], [73, "signatures"], [74, "signatures"], [75, "signatures"], [76, "signatures"], [77, "signatures"], [78, "signatures"], [79, "signatures"], [80, "signatures"], [81, "signatures"], [82, "signatures"], [83, "signatures"], [84, "signatures"], [85, "signatures"], [86, "signatures"], [87, "signatures"], [88, "signatures"], [89, "signatures"], [92, "signatures"], [93, "signatures"], [94, "signatures"], [95, "signatures"], [96, "signatures"], [99, "signatures"], [100, "signatures"], [101, "signatures"], [102, "signatures"], [103, "signatures"], [104, "signatures"], [105, "signatures"], [106, "signatures"], [107, "signatures"], [108, "signatures"], [110, "signatures"], [111, "signatures"], [112, "signatures"], [113, "signatures"], [114, "signatures"], [115, "signatures"], [116, "signatures"]], "KSP Optional parameters": [[28, "ksp-optional-parameters"], [108, "ksp-optional-parameters"], [115, "ksp-optional-parameters"]], "Additional Examples": [[28, "additional-examples"], [29, "additional-examples"], [30, "additional-examples"], [31, "additional-examples"], [32, "additional-examples"], [33, "additional-examples"], [35, "additional-examples"], [36, "additional-examples"], [37, "additional-examples"], [38, "additional-examples"], [39, "additional-examples"], [40, "additional-examples"], [41, "additional-examples"], [44, "additional-examples"], [46, "additional-examples"], [47, "additional-examples"], [51, "additional-examples"], [52, "additional-examples"], [53, "additional-examples"], [55, "additional-examples"], [57, "additional-examples"], [58, "additional-examples"], [59, "additional-examples"], [60, "additional-examples"], [61, "additional-examples"], [62, "additional-examples"], [65, "additional-examples"], [66, "additional-examples"], [68, "additional-examples"], [69, "additional-examples"], [70, "additional-examples"], [71, "additional-examples"], [72, "additional-examples"], [76, "additional-examples"], [82, "additional-examples"], [83, "additional-examples"], [84, "additional-examples"], [87, "additional-examples"], [88, "additional-examples"], [89, "additional-examples"], [96, "additional-examples"], [105, "additional-examples"], [106, "additional-examples"], [107, "additional-examples"], [108, "additional-examples"], [111, "additional-examples"], [112, "additional-examples"], [113, "additional-examples"], [114, "additional-examples"], [115, "additional-examples"], [116, "additional-examples"]], "pgr_TSP": [[29, "pgr-tsp"]], "Start from vertex 1": [[29, "start-from-vertex-1"]], "Using points of interest to generate an asymmetric matrix.": [[29, "using-points-of-interest-to-generate-an-asymmetric-matrix"]], "Connected incomplete data": [[29, "connected-incomplete-data"]], "pgr_TSPeuclidean": [[30, "pgr-tspeuclidean"]], "Coordinates SQL": [[30, "coordinates-sql"]], "Test 29 cities of Western Sahara": [[30, "test-29-cities-of-western-sahara"]], "Creating a table for the data and storing the data": [[30, "creating-a-table-for-the-data-and-storing-the-data"]], "Adding a geometry (for visual purposes)": [[30, "adding-a-geometry-for-visual-purposes"]], "Total tour cost": [[30, "total-tour-cost"]], "Getting a geometry of the tour": [[30, "getting-a-geometry-of-the-tour"]], "Visual results": [[30, "visual-results"]], "pgr_aStar": [[31, "pgr-astar"]], "pgr_aStarCost": [[32, "pgr-astarcost"]], "pgr_aStarCostMatrix": [[33, "pgr-astarcostmatrix"]], "pgr_articulationPoints": [[34, "pgr-articulationpoints"]], "pgr_bdAstar": [[35, "pgr-bdastar"]], "pgr_bdAstarCost": [[36, "pgr-bdastarcost"]], "pgr_bdAstarCostMatrix": [[37, "pgr-bdastarcostmatrix"]], "pgr_bdDijkstra": [[38, "pgr-bddijkstra"]], "pgr_bdDijkstraCost": [[39, "pgr-bddijkstracost"]], "pgr_bdDijkstraCostMatrix": [[40, "pgr-bddijkstracostmatrix"]], "pgr_bellmanFord - Experimental": [[41, "pgr-bellmanford-experimental"]], "pgr_betweennessCentrality - Experimental": [[42, "pgr-betweennesscentrality-experimental"]], "pgr_biconnectedComponents": [[43, "pgr-biconnectedcomponents"]], "pgr_binaryBreadthFirstSearch - Experimental": [[44, "pgr-binarybreadthfirstsearch-experimental"]], "pgr_bipartite - Experimental": [[45, "pgr-bipartite-experimental"]], "Additional Example": [[45, "additional-example"]], "pgr_boykovKolmogorov": [[46, "pgr-boykovkolmogorov"]], "pgr_breadthFirstSearch - Experimental": [[47, "pgr-breadthfirstsearch-experimental"]], "Single vertex": [[47, "single-vertex"], [59, "single-vertex"], [79, "single-vertex"], [80, "single-vertex"], [81, "single-vertex"], [93, "single-vertex"], [94, "single-vertex"], [95, "single-vertex"], [114, "single-vertex"]], "Multiple vertices": [[47, "multiple-vertices"], [59, "multiple-vertices"], [79, "multiple-vertices"], [80, "multiple-vertices"], [81, "multiple-vertices"], [93, "multiple-vertices"], [94, "multiple-vertices"], [95, "multiple-vertices"], [114, "multiple-vertices"]], "DFS optional parameters": [[47, "dfs-optional-parameters"], [59, "dfs-optional-parameters"], [81, "dfs-optional-parameters"], [95, "dfs-optional-parameters"]], "pgr_bridges": [[48, "pgr-bridges"]], "pgr_chinesePostman - Experimental": [[49, "pgr-chinesepostman-experimental"]], "pgr_chinesePostmanCost - Experimental": [[50, "pgr-chinesepostmancost-experimental"]], "pgr_connectedComponents": [[51, "pgr-connectedcomponents"]], "Connecting disconnected components": [[51, "connecting-disconnected-components"]], "pgr_contraction": [[52, "pgr-contraction"]], "Contraction optional parameters": [[52, "contraction-optional-parameters"], [53, "contraction-optional-parameters"], [55, "contraction-optional-parameters"]], "Only dead end contraction": [[52, "only-dead-end-contraction"]], "Only linear contraction": [[52, "only-linear-contraction"]], "The cycle": [[52, "the-cycle"]], "Contracting sample data": [[52, "contracting-sample-data"]], "Construction of the graph in the database": [[52, "construction-of-the-graph-in-the-database"]], "The process to create the contraction graph on the database:": [[52, "the-process-to-create-the-contraction-graph-on-the-database"]], "Add additional columns": [[52, "add-additional-columns"]], "Store contraction information": [[52, "store-contraction-information"]], "Update the edges and vertices tables": [[52, "update-the-edges-and-vertices-tables"]], "The contracted graph": [[52, "the-contracted-graph"], [53, "the-contracted-graph"], [55, "the-contracted-graph"]], "Using the contracted graph": [[52, "using-the-contracted-graph"]], "pgr_contractionDeadEnd - Proposed": [[53, "pgr-contractiondeadend-proposed"]], "Dead end vertex on undirected graph": [[53, "dead-end-vertex-on-undirected-graph"]], "Dead end vertex on directed graph": [[53, "dead-end-vertex-on-directed-graph"]], "Step by step dead end contraction": [[53, "step-by-step-dead-end-contraction"]], "Creating the contracted graph": [[53, "creating-the-contracted-graph"], [55, "creating-the-contracted-graph"]], "Steps for the creation of the contracted graph": [[53, "steps-for-the-creation-of-the-contracted-graph"], [55, "steps-for-the-creation-of-the-contracted-graph"]], "Using when departure and destination are in the contracted graph": [[53, "using-when-departure-and-destination-are-in-the-contracted-graph"], [55, "using-when-departure-and-destination-are-in-the-contracted-graph"]], "Using when departure/destination is not in the contracted graph": [[53, "using-when-departure-destination-is-not-in-the-contracted-graph"], [55, "using-when-departure-destination-is-not-in-the-contracted-graph"]], "Using when departure and destination are not in the contracted graph": [[53, "using-when-departure-and-destination-are-not-in-the-contracted-graph"]], "pgr_contractionHierarchies - Experimental": [[54, "pgr-contractionhierarchies-experimental"]], "Contraction hierarchies optional parameters": [[54, "contraction-hierarchies-optional-parameters"]], "On an undirected graph": [[54, "on-an-undirected-graph"]], "On an undirected graph with forbidden vertices": [[54, "on-an-undirected-graph-with-forbidden-vertices"]], "Contraction process steps details": [[54, "contraction-process-steps-details"]], "Shortcut building process": [[54, "shortcut-building-process"]], "Initialize the queue with a first vertices order": [[54, "initialize-the-queue-with-a-first-vertices-order"]], "Build the final vertex order": [[54, "build-the-final-vertex-order"]], "Add shortcuts to the initial graph": [[54, "add-shortcuts-to-the-initial-graph"]], "Use the contraction": [[54, "use-the-contraction"]], "Build the contraction": [[54, "build-the-contraction"]], "Add shortcuts and hierarchy in the existing tables": [[54, "add-shortcuts-and-hierarchy-in-the-existing-tables"]], "Use a Dijkstra shortest path algorithm on it": [[54, "use-a-dijkstra-shortest-path-algorithm-on-it"]], "pgr_contractionLinear - Proposed": [[55, "pgr-contractionlinear-proposed"]], "Linearity is not symmetrical": [[55, "linearity-is-not-symmetrical"]], "Linearity is symmetrical": [[55, "linearity-is-symmetrical"]], "Step by step linear contraction": [[55, "step-by-step-linear-contraction"]], "pgr_cuthillMckeeOrdering - Experimental": [[56, "pgr-cuthillmckeeordering-experimental"]], "pgr_dagShortestPath - Experimental": [[57, "pgr-dagshortestpath-experimental"]], "Return columns": [[57, "return-columns"], [89, "return-columns"]], "pgr_degree": [[58, "pgr-degree"]], "Edges": [[58, "edges"], [122, "edges"]], "Edges and Vertices": [[58, "edges-and-vertices"]], "Vertex SQL": [[58, "vertex-sql"]], "Degree of a loop": [[58, "degree-of-a-loop"]], "Degree of a sub graph": [[58, "degree-of-a-sub-graph"]], "Using a vertex table": [[58, "using-a-vertex-table"]], "Dry run execution": [[58, "dry-run-execution"], [71, "dry-run-execution"]], "Finding dead ends": [[58, "finding-dead-ends"]], "Finding linear vertices": [[58, "finding-linear-vertices"]], "pgr_depthFirstSearch - Proposed": [[59, "pgr-depthfirstsearch-proposed"]], "pgr_dijkstra": [[60, "pgr-dijkstra"]], "For directed graphs with cost and reverse_cost columns": [[60, "for-directed-graphs-with-cost-and-reverse-cost-columns"]], "1) Path from 6 to 10": [[60, "path-from-6-to-10"]], "2) Path from 6 to 7": [[60, "path-from-6-to-7"]], "3) Path from 12 to 10": [[60, "path-from-12-to-10"]], "4) Path from 12 to 7": [[60, "path-from-12-to-7"]], "5) Using One to Many to get the solution of examples 1 and 2": [[60, "using-one-to-many-to-get-the-solution-of-examples-1-and-2"]], "6) Using Many to One to get the solution of examples 2 and 4": [[60, "using-many-to-one-to-get-the-solution-of-examples-2-and-4"]], "7) Using Many to Many to get the solution of examples 1 to 4": [[60, "using-many-to-many-to-get-the-solution-of-examples-1-to-4"]], "8) Using Combinations to get the solution of examples 1 to 3": [[60, "using-combinations-to-get-the-solution-of-examples-1-to-3"]], "For undirected graphs with cost and reverse_cost columns": [[60, "for-undirected-graphs-with-cost-and-reverse-cost-columns"]], "9) Path from 6 to 10": [[60, "id1"]], "10) Path from 6 to 7": [[60, "id2"]], "11) Path from 12 to 10": [[60, "id3"]], "12) Path from 12 to 7": [[60, "id4"]], "13) Using One to Many to get the solution of examples 9 and 10": [[60, "using-one-to-many-to-get-the-solution-of-examples-9-and-10"]], "14) Using Many to One to get the solution of examples 10 and 12": [[60, "using-many-to-one-to-get-the-solution-of-examples-10-and-12"]], "15) Using Many to Many to get the solution of examples 9 to 12": [[60, "using-many-to-many-to-get-the-solution-of-examples-9-to-12"]], "16) Using Combinations to get the solution of examples 9 to 11": [[60, "using-combinations-to-get-the-solution-of-examples-9-to-11"]], "For directed graphs only with cost column": [[60, "for-directed-graphs-only-with-cost-column"]], "17) Path from 6 to 10": [[60, "id5"]], "18) Path from 6 to 7": [[60, "id6"]], "19) Path from 12 to 10": [[60, "id7"]], "20) Path from 12 to 7": [[60, "id8"]], "21) Using One to Many to get the solution of examples 17 and 18": [[60, "using-one-to-many-to-get-the-solution-of-examples-17-and-18"]], "22) Using Many to One to get the solution of examples 18 and 20": [[60, "using-many-to-one-to-get-the-solution-of-examples-18-and-20"]], "23) Using Many to Many to get the solution of examples 17 to 20": [[60, "using-many-to-many-to-get-the-solution-of-examples-17-to-20"]], "24) Using Combinations to get the solution of examples 17 to 19": [[60, "using-combinations-to-get-the-solution-of-examples-17-to-19"]], "For undirected graphs only with cost column": [[60, "for-undirected-graphs-only-with-cost-column"]], "25) Path from 6 to 10": [[60, "id9"]], "26) Path from 6 to 7": [[60, "id10"]], "27) Path from 12 to 10": [[60, "id11"]], "28) Path from 12 to 7": [[60, "id12"]], "29) Using One to Many to get the solution of examples 25 and 26": [[60, "using-one-to-many-to-get-the-solution-of-examples-25-and-26"]], "30) Using Many to One to get the solution of examples 26 and 28": [[60, "using-many-to-one-to-get-the-solution-of-examples-26-and-28"]], "31) Using Many to Many to get the solution of examples 25 to 28": [[60, "using-many-to-many-to-get-the-solution-of-examples-25-to-28"]], "32) Using Combinations to get the solution of examples 25 to 27": [[60, "using-combinations-to-get-the-solution-of-examples-25-to-27"]], "Equvalences between signatures": [[60, "equvalences-between-signatures"]], "33) Using One to One": [[60, "using-one-to-one"]], "34) Using One to Many": [[60, "using-one-to-many"]], "35) Using Many to One": [[60, "using-many-to-one"]], "36) Using Many to Many": [[60, "using-many-to-many"]], "37) Using Combinations": [[60, "using-combinations"]], "pgr_dijkstraCost": [[61, "pgr-dijkstracost"]], "pgr_dijkstraCostMatrix": [[62, "pgr-dijkstracostmatrix"]], "pgr_dijkstraNear - Proposed": [[63, "pgr-dijkstranear-proposed"]], "Dijkstra optional parameters": [[63, "dijkstra-optional-parameters"], [64, "dijkstra-optional-parameters"]], "Near optional parameters": [[63, "near-optional-parameters"], [64, "near-optional-parameters"]], "pgr_dijkstraNearCost - Proposed": [[64, "pgr-dijkstranearcost-proposed"]], "pgr_dijkstraVia - Proposed": [[65, "pgr-dijkstravia-proposed"]], "One Via": [[65, "one-via"], [105, "one-via"], [106, "one-via"], [116, "one-via"]], "Via optional parameters": [[65, "via-optional-parameters"], [105, "via-optional-parameters"], [106, "via-optional-parameters"], [116, "via-optional-parameters"], [128, "via-optional-parameters"]], "The main query": [[65, "the-main-query"], [105, "the-main-query"]], "Aggregate cost of the third path.": [[65, "aggregate-cost-of-the-third-path"], [105, "aggregate-cost-of-the-third-path"], [106, "aggregate-cost-of-the-third-path"], [116, "aggregate-cost-of-the-third-path"]], "Route\u2019s aggregate cost of the route at the end of the third path.": [[65, "route-s-aggregate-cost-of-the-route-at-the-end-of-the-third-path"], [105, "route-s-aggregate-cost-of-the-route-at-the-end-of-the-third-path"], [106, "route-s-aggregate-cost-of-the-route-at-the-end-of-the-third-path"], [116, "route-s-aggregate-cost-of-the-route-at-the-end-of-the-third-path"]], "Nodes visited in the route.": [[65, "nodes-visited-in-the-route"], [105, "nodes-visited-in-the-route"], [106, "nodes-visited-in-the-route"], [116, "nodes-visited-in-the-route"]], "The aggregate costs of the route when the visited vertices are reached.": [[65, "the-aggregate-costs-of-the-route-when-the-visited-vertices-are-reached"], [105, "the-aggregate-costs-of-the-route-when-the-visited-vertices-are-reached"], [106, "the-aggregate-costs-of-the-route-when-the-visited-vertices-are-reached"], [116, "the-aggregate-costs-of-the-route-when-the-visited-vertices-are-reached"]], "Status of \u201cpasses in front\u201d or \u201cvisits\u201d of the nodes.": [[65, "status-of-passes-in-front-or-visits-of-the-nodes"], [105, "status-of-passes-in-front-or-visits-of-the-nodes"]], "pgr_drivingDistance": [[66, "pgr-drivingdistance"]], "Single Vertex": [[66, "single-vertex"]], "Multiple Vertices": [[66, "multiple-vertices"]], "Driving distance optional parameters": [[66, "driving-distance-optional-parameters"], [114, "driving-distance-optional-parameters"]], "pgr_edgeColoring - Experimental": [[67, "pgr-edgecoloring-experimental"]], "pgr_edgeDisjointPaths": [[68, "pgr-edgedisjointpaths"]], "pgr_edmondsKarp": [[69, "pgr-edmondskarp"]], "pgr_edwardMoore - Experimental": [[70, "pgr-edwardmoore-experimental"]], "pgr_extractVertices": [[71, "pgr-extractvertices"]], "When line geometry is known": [[71, "when-line-geometry-is-known"]], "When vertex geometry is known": [[71, "when-vertex-geometry-is-known"]], "When identifiers of vertices are known": [[71, "when-identifiers-of-vertices-are-known"]], "Create a routing topology": [[71, "create-a-routing-topology"]], "Make sure the database does not have the vertices_table": [[71, "make-sure-the-database-does-not-have-the-vertices-table"]], "Clean up the columns of the routing topology to be created": [[71, "clean-up-the-columns-of-the-routing-topology-to-be-created"]], "Create the vertices table": [[71, "create-the-vertices-table"]], "Inspect the vertices table": [[71, "inspect-the-vertices-table"]], "Create the routing topology on the edge table": [[71, "create-the-routing-topology-on-the-edge-table"]], "Inspect the routing topology": [[71, "inspect-the-routing-topology"]], "pgr_findCloseEdges": [[72, "pgr-findcloseedges"]], "One point": [[72, "one-point"]], "Many points": [[72, "many-points"]], "One point in an edge": [[72, "one-point-in-an-edge"]], "One point dry run execution": [[72, "one-point-dry-run-execution"]], "Many points in an edge": [[72, "many-points-in-an-edge"]], "Many points dry run execution": [[72, "many-points-dry-run-execution"]], "Find at most two routes to a given point": [[72, "find-at-most-two-routes-to-a-given-point"]], "A point of interest table": [[72, "a-point-of-interest-table"]], "Points of interest": [[72, "points-of-interest"], [122, "points-of-interest"]], "Points of interest fill up": [[72, "points-of-interest-fill-up"], [122, "points-of-interest-fill-up"]], "pgr_floydWarshall": [[73, "pgr-floydwarshall"]], "pgr_full_version": [[74, "pgr-full-version"]], "pgr_hawickCircuits - Experimental": [[75, "pgr-hawickcircuits-experimental"]], "pgr_isPlanar - Experimental": [[76, "pgr-isplanar-experimental"]], "pgr_johnson": [[77, "pgr-johnson"]], "pgr_kruskal": [[78, "pgr-kruskal"]], "pgr_kruskalBFS": [[79, "pgr-kruskalbfs"]], "pgr_kruskalDD": [[80, "pgr-kruskaldd"]], "pgr_kruskalDFS": [[81, "pgr-kruskaldfs"]], "pgr_lengauerTarjanDominatorTree - Experimental": [[82, "pgr-lengauertarjandominatortree-experimental"]], "pgr_lineGraph - Proposed": [[83, "pgr-linegraph-proposed"]], "Representation as directed with shared edge identifiers": [[83, "representation-as-directed-with-shared-edge-identifiers"]], "Line Graph of a directed graph represented with shared edges": [[83, "line-graph-of-a-directed-graph-represented-with-shared-edges"]], "Representation as directed with unique edge identifiers": [[83, "representation-as-directed-with-unique-edge-identifiers"]], "Line Graph of a directed graph represented with unique edges": [[83, "line-graph-of-a-directed-graph-represented-with-unique-edges"]], "pgr_lineGraphFull - Experimental": [[84, "pgr-linegraphfull-experimental"]], "The data": [[84, "the-data"]], "The transformation": [[84, "the-transformation"]], "Creating table that identifies transformed vertices": [[84, "creating-table-that-identifies-transformed-vertices"]], "Store edge results": [[84, "store-edge-results"]], "Create the mapping table": [[84, "create-the-mapping-table"]], "Filling the mapping table": [[84, "filling-the-mapping-table"]], "Adding a soft restriction": [[84, "adding-a-soft-restriction"]], "Identifying the restriction": [[84, "identifying-the-restriction"]], "Adding a value to the restriction": [[84, "adding-a-value-to-the-restriction"]], "Simplifying leaf vertices": [[84, "simplifying-leaf-vertices"]], "Using the vertex map give the leaf verices their original value.": [[84, "using-the-vertex-map-give-the-leaf-verices-their-original-value"]], "Removing self loops on leaf nodes": [[84, "removing-self-loops-on-leaf-nodes"]], "Complete routing graph": [[84, "complete-routing-graph"]], "Add edges from the original graph": [[84, "add-edges-from-the-original-graph"]], "Add the newly calculated edges": [[84, "add-the-newly-calculated-edges"]], "Using the routing graph": [[84, "using-the-routing-graph"]], "pgr_makeConnected - Experimental": [[85, "pgr-makeconnected-experimental"]], "pgr_maxCardinalityMatch": [[86, "pgr-maxcardinalitymatch"]], "pgr_maxFlow": [[87, "pgr-maxflow"]], "pgr_maxFlowMinCost - Experimental": [[88, "pgr-maxflowmincost-experimental"]], "pgr_maxFlowMinCost_Cost - Experimental": [[89, "pgr-maxflowmincost-cost-experimental"]], "pgr_pickDeliver - Experimental": [[90, "pgr-pickdeliver-experimental"]], "Signature": [[90, "signature"], [91, "signature"], [97, "signature"], [98, "signature"], [109, "signature"]], "pgr_pickDeliverEuclidean - Experimental": [[91, "pgr-pickdelivereuclidean-experimental"]], "Example": [[91, "example"]], "The vehicles": [[91, "the-vehicles"], [122, "the-vehicles"]], "The original orders": [[91, "the-original-orders"], [122, "the-original-orders"]], "The orders": [[91, "the-orders"], [122, "the-orders"]], "The query": [[91, "the-query"]], "pgr_prim": [[92, "pgr-prim"]], "pgr_primBFS": [[93, "pgr-primbfs"]], "pgr_primDD": [[94, "pgr-primdd"]], "pgr_primDFS": [[95, "pgr-primdfs"]], "pgr_pushRelabel": [[96, "pgr-pushrelabel"]], "pgr_separateCrossing": [[97, "pgr-separatecrossing"]], "Get the code for further refinement.": [[97, "get-the-code-for-further-refinement"], [98, "get-the-code-for-further-refinement"]], "pgr_separateTouching": [[98, "pgr-separatetouching"]], "pgr_sequentialVertexColoring - Proposed": [[99, "pgr-sequentialvertexcoloring-proposed"]], "pgr_stoerWagner - Experimental": [[100, "pgr-stoerwagner-experimental"]], "Additional Example:": [[100, "additional-example"], [110, "additional-example"]], "pgr_strongComponents": [[101, "pgr-strongcomponents"]], "pgr_topologicalSort - Experimental": [[102, "pgr-topologicalsort-experimental"]], "Additional examples": [[102, "additional-examples"]], "pgr_transitiveClosure - Experimental": [[103, "pgr-transitiveclosure-experimental"]], "pgr_trsp": [[104, "pgr-trsp"]], "pgr_trspVia": [[105, "pgr-trspvia"]], "Simulation of how algorithm works.": [[105, "simulation-of-how-algorithm-works"], [106, "simulation-of-how-algorithm-works"]], "pgr_trspVia_withPoints": [[106, "pgr-trspvia-withpoints"]], "With points optional parameters": [[106, "with-points-optional-parameters"], [107, "with-points-optional-parameters"], [111, "with-points-optional-parameters"], [114, "with-points-optional-parameters"], [116, "with-points-optional-parameters"], [130, "with-points-optional-parameters"]], "Use pgr_findCloseEdges for points on the fly": [[106, "use-pgr-findcloseedges-for-points-on-the-fly"]], "Usage variations": [[106, "usage-variations"], [107, "usage-variations"], [111, "usage-variations"], [116, "usage-variations"]], "Status of \u201cpasses in front\u201d or \u201cvisits\u201d of the nodes and points.": [[106, "status-of-passes-in-front-or-visits-of-the-nodes-and-points"], [116, "status-of-passes-in-front-or-visits-of-the-nodes-and-points"]], "pgr_trsp_withPoints": [[107, "pgr-trsp-withpoints"]], "Use pgr_findCloseEdges in the Points SQL.": [[107, "use-pgr-findcloseedges-in-the-points-sql"], [111, "use-pgr-findcloseedges-in-the-points-sql"], [112, "use-pgr-findcloseedges-in-the-points-sql"], [113, "use-pgr-findcloseedges-in-the-points-sql"], [114, "use-pgr-findcloseedges-in-the-points-sql"], [115, "use-pgr-findcloseedges-in-the-points-sql"]], "Passes in front or visits with right side driving.": [[107, "passes-in-front-or-visits-with-right-side-driving"], [111, "passes-in-front-or-visits-with-right-side-driving"]], "Passes in front or visits with left side driving.": [[107, "passes-in-front-or-visits-with-left-side-driving"], [111, "passes-in-front-or-visits-with-left-side-driving"]], "pgr_turnRestrictedPath - Experimental": [[108, "pgr-turnrestrictedpath-experimental"]], "Special optional parameters": [[108, "special-optional-parameters"]], "pgr_version": [[109, "pgr-version"]], "pgr_vrpOneDepot - Experimental": [[110, "pgr-vrponedepot-experimental"]], "pgr_withPoints": [[111, "pgr-withpoints"]], "pgr_withPointsCost": [[112, "pgr-withpointscost"]], "Right side driving topology": [[112, "right-side-driving-topology"]], "Left side driving topology": [[112, "left-side-driving-topology"]], "Does not matter driving side driving topology": [[112, "does-not-matter-driving-side-driving-topology"]], "pgr_withPointsCostMatrix": [[113, "pgr-withpointscostmatrix"]], "Use with pgr_TSP.": [[113, "use-with-pgr-tsp"]], "pgr_withPointsDD": [[114, "pgr-withpointsdd"]], "Driving side does not matter": [[114, "driving-side-does-not-matter"], [129, "driving-side-does-not-matter"], [130, "driving-side-does-not-matter"]], "pgr_withPointsKSP": [[115, "pgr-withpointsksp"]], "withPointsKSP optional parameters": [[115, "withpointsksp-optional-parameters"]], "Left driving side": [[115, "left-driving-side"], [129, "left-driving-side"], [130, "left-driving-side"]], "Right driving side": [[115, "right-driving-side"], [129, "right-driving-side"], [130, "right-driving-side"]], "pgr_withPointsVia": [[116, "pgr-withpointsvia"]], "Use pgr_findCloseEdges in the Points SQL": [[116, "use-pgr-findcloseedges-in-the-points-sql"]], "Prim - Family of functions": [[117, "prim-family-of-functions"]], "Proposed Functions": [[118, "proposed-functions"]], "Reference": [[119, "reference"]], "Mayors": [[120, "mayors"]], "pgRouting 4": [[120, "pgrouting-4"]], "Minors 4.x": [[120, "minors-4-x"]], "pgRouting 4.0": [[120, "pgrouting-4-0"]], "pgRouting 3": [[120, "pgrouting-3"]], "Minors 3.x": [[120, "minors-3-x"]], "pgRouting 3.8": [[120, "pgrouting-3-8"]], "pgRouting 3.8.0 Release Notes": [[120, "pgrouting-3-8-0-release-notes"]], "pgRouting 3.7": [[120, "pgrouting-3-7"]], "pgRouting 3.7.3 Release Notes": [[120, "pgrouting-3-7-3-release-notes"]], "pgRouting 3.7.2 Release Notes": [[120, "pgrouting-3-7-2-release-notes"]], "pgRouting 3.7.1 Release Notes": [[120, "pgrouting-3-7-1-release-notes"]], "pgRouting 3.7.0 Release Notes": [[120, "pgrouting-3-7-0-release-notes"]], "pgRouting 3.6": [[120, "pgrouting-3-6"]], "pgRouting 3.6.3 Release Notes": [[120, "pgrouting-3-6-3-release-notes"]], "pgRouting 3.6.2 Release Notes": [[120, "pgrouting-3-6-2-release-notes"]], "pgRouting 3.6.1 Release Notes": [[120, "pgrouting-3-6-1-release-notes"]], "pgRouting 3.6.0 Release Notes": [[120, "pgrouting-3-6-0-release-notes"]], "pgRouting 3.5": [[120, "pgrouting-3-5"]], "pgRouting 3.5.1 Release Notes": [[120, "pgrouting-3-5-1-release-notes"]], "pgRouting 3.5.0 Release Notes": [[120, "pgrouting-3-5-0-release-notes"]], "pgRouting 3.4": [[120, "pgrouting-3-4"]], "pgRouting 3.4.2 Release Notes": [[120, "pgrouting-3-4-2-release-notes"]], "pgRouting 3.4.1 Release Notes": [[120, "pgrouting-3-4-1-release-notes"]], "pgRouting 3.4.0 Release Notes": [[120, "pgrouting-3-4-0-release-notes"]], "pgRouting 3.3": [[120, "pgrouting-3-3"]], "pgRouting 3.3.5 Release Notes": [[120, "pgrouting-3-3-5-release-notes"]], "pgRouting 3.3.4 Release Notes": [[120, "pgrouting-3-3-4-release-notes"]], "pgRouting 3.3.3 Release Notes": [[120, "pgrouting-3-3-3-release-notes"]], "pgRouting 3.3.2 Release Notes": [[120, "pgrouting-3-3-2-release-notes"]], "pgRouting 3.3.1 Release Notes": [[120, "pgrouting-3-3-1-release-notes"]], "pgRouting 3.3.0 Release Notes": [[120, "pgrouting-3-3-0-release-notes"]], "pgRouting 3.2": [[120, "pgrouting-3-2"]], "pgRouting 3.2.2 Release Notes": [[120, "pgrouting-3-2-2-release-notes"]], "pgRouting 3.2.1 Release Notes": [[120, "pgrouting-3-2-1-release-notes"]], "pgRouting 3.2.0 Release Notes": [[120, "pgrouting-3-2-0-release-notes"]], "pgRouting 3.1": [[120, "pgrouting-3-1"]], "pgRouting 3.1.4 Release Notes": [[120, "pgrouting-3-1-4-release-notes"]], "pgRouting 3.1.3 Release Notes": [[120, "pgrouting-3-1-3-release-notes"]], "pgRouting 3.1.2 Release Notes": [[120, "pgrouting-3-1-2-release-notes"]], "pgRouting 3.1.1 Release Notes": [[120, "pgrouting-3-1-1-release-notes"]], "pgRouting 3.1.0 Release Notes": [[120, "pgrouting-3-1-0-release-notes"]], "pgRouting 3.0": [[120, "pgrouting-3-0"]], "pgRouting 3.0.6 Release Notes": [[120, "pgrouting-3-0-6-release-notes"]], "pgRouting 3.0.5 Release Notes": [[120, "pgrouting-3-0-5-release-notes"]], "pgRouting 3.0.4 Release Notes": [[120, "pgrouting-3-0-4-release-notes"]], "pgRouting 3.0.3 Release Notes": [[120, "pgrouting-3-0-3-release-notes"]], "pgRouting 3.0.2 Release Notes": [[120, "pgrouting-3-0-2-release-notes"]], "pgRouting 3.0.1 Release Notes": [[120, "pgrouting-3-0-1-release-notes"]], "pgRouting 3.0.0 Release Notes": [[120, "pgrouting-3-0-0-release-notes"]], "pgRouting 2": [[120, "pgrouting-2"]], "Minors 2.x": [[120, "minors-2-x"]], "pgRouting 2.6": [[120, "pgrouting-2-6"]], "pgRouting 2.6.3 Release Notes": [[120, "pgrouting-2-6-3-release-notes"]], "pgRouting 2.6.2 Release Notes": [[120, "pgrouting-2-6-2-release-notes"]], "pgRouting 2.6.1 Release Notes": [[120, "pgrouting-2-6-1-release-notes"]], "pgRouting 2.6.0 Release Notes": [[120, "pgrouting-2-6-0-release-notes"]], "pgRouting 2.5": [[120, "pgrouting-2-5"]], "pgRouting 2.5.5 Release Notes": [[120, "pgrouting-2-5-5-release-notes"]], "pgRouting 2.5.4 Release Notes": [[120, "pgrouting-2-5-4-release-notes"]], "pgRouting 2.5.3 Release Notes": [[120, "pgrouting-2-5-3-release-notes"]], "pgRouting 2.5.2 Release Notes": [[120, "pgrouting-2-5-2-release-notes"]], "pgRouting 2.5.1 Release Notes": [[120, "pgrouting-2-5-1-release-notes"]], "pgRouting 2.5.0 Release Notes": [[120, "pgrouting-2-5-0-release-notes"]], "pgRouting 2.4": [[120, "pgrouting-2-4"]], "pgRouting 2.4.2 Release Notes": [[120, "pgrouting-2-4-2-release-notes"]], "pgRouting 2.4.1 Release Notes": [[120, "pgrouting-2-4-1-release-notes"]], "pgRouting 2.4.0 Release Notes": [[120, "pgrouting-2-4-0-release-notes"]], "pgRouting 2.3": [[120, "pgrouting-2-3"]], "pgRouting 2.3.2 Release Notes": [[120, "pgrouting-2-3-2-release-notes"]], "pgRouting 2.3.1 Release Notes": [[120, "pgrouting-2-3-1-release-notes"]], "pgRouting 2.3.0 Release Notes": [[120, "pgrouting-2-3-0-release-notes"]], "pgRouting 2.2": [[120, "pgrouting-2-2"]], "pgRouting 2.2.4 Release Notes": [[120, "pgrouting-2-2-4-release-notes"]], "pgRouting 2.2.3 Release Notes": [[120, "pgrouting-2-2-3-release-notes"]], "pgRouting 2.2.2 Release Notes": [[120, "pgrouting-2-2-2-release-notes"]], "pgRouting 2.2.1 Release Notes": [[120, "pgrouting-2-2-1-release-notes"]], "pgRouting 2.2.0 Release Notes": [[120, "pgrouting-2-2-0-release-notes"]], "pgRouting 2.1": [[120, "pgrouting-2-1"]], "pgRouting 2.1.0 Release Notes": [[120, "pgrouting-2-1-0-release-notes"]], "pgRouting 2.0": [[120, "pgrouting-2-0"]], "pgRouting 2.0.1 Release Notes": [[120, "pgrouting-2-0-1-release-notes"]], "pgRouting 2.0.0 Release Notes": [[120, "pgrouting-2-0-0-release-notes"]], "pgRouting 1": [[120, "pgrouting-1"]], "pgRouting 1.0": [[120, "pgrouting-1-0"]], "Changes for release 1.05": [[120, "changes-for-release-1-05"]], "Changes for release 1.03": [[120, "changes-for-release-1-03"]], "Changes for release 1.02": [[120, "changes-for-release-1-02"]], "Changes for release 1.01": [[120, "changes-for-release-1-01"]], "Changes for release 1.0": [[120, "changes-for-release-1-0"]], "Changes for release 1.0.0b": [[120, "changes-for-release-1-0-0b"]], "Changes for release 1.0.0a": [[120, "changes-for-release-1-0-0a"]], "Changes for release 0.9.9": [[120, "changes-for-release-0-9-9"]], "Changes for release 0.9.8": [[120, "changes-for-release-0-9-8"]], "Sample Data": [[122, "sample-data"]], "Main graph": [[122, "main-graph"]], "Edges data": [[122, "edges-data"]], "Vertices": [[122, "vertices"]], "Vertices data": [[122, "vertices-data"]], "The topology": [[122, "the-topology"]], "Topology data": [[122, "topology-data"]], "Points outside the graph": [[122, "points-outside-the-graph"]], "Support tables": [[122, "support-tables"]], "Images": [[122, "images"]], "Directed graph with cost and reverse_cost": [[122, "directed-graph-with-cost-and-reverse-cost"]], "Undirected graph with cost and reverse_cost": [[122, "undirected-graph-with-cost-and-reverse-cost"]], "Directed graph with cost": [[122, "directed-graph-with-cost"]], "Undirected graph with cost": [[122, "undirected-graph-with-cost"]], "Pick & Deliver Data": [[122, "pick-deliver-data"]], "Spanning Tree - Category": [[123, "spanning-tree-category"]], "Support": [[124, "support"]], "Reporting Problems": [[124, "reporting-problems"]], "Mailing List, Matrix, GIS StackExchange": [[124, "mailing-list-matrix-gis-stackexchange"]], "Commercial Support": [[124, "commercial-support"]], "Transformation - Family of functions": [[125, "transformation-family-of-functions"]], "Traversal - Family of functions": [[126, "traversal-family-of-functions"]], "Utility functions": [[127, "utility-functions"]], "Via - Category": [[128, "via-category"]], "withPoints - Category": [[129, "withpoints-category"]], "About points": [[129, "about-points"], [130, "about-points"]], "Driving side": [[129, "driving-side"], [130, "driving-side"]], "Creating temporary vertices": [[129, "creating-temporary-vertices"], [130, "creating-temporary-vertices"]], "On a right hand side driving network": [[129, "on-a-right-hand-side-driving-network"], [130, "on-a-right-hand-side-driving-network"]], "On a left hand side driving network": [[129, "on-a-left-hand-side-driving-network"], [130, "on-a-left-hand-side-driving-network"]], "When driving side does not matter": [[129, "when-driving-side-does-not-matter"], [130, "when-driving-side-does-not-matter"]], "withPoints - Family of functions": [[130, "withpoints-family-of-functions"]]}, "indexentries": {"breadth first search category": [[0, "index-0"], [44, "index-0"], [47, "index-0"], [79, "index-0"], [93, "index-0"]], "depth first search category": [[1, "index-0"], [59, "index-0"], [81, "index-0"], [95, "index-0"]], "k shortest paths category": [[2, "index-0"], [28, "index-0"], [115, "index-0"]], "turn restriction shortest path family": [[3, "index-0"], [104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"]], "traveling sales person family": [[4, "index-0"], [29, "index-0"], [30, "index-0"]], "vehicle routing functions category": [[5, "index-0"], [90, "index-0"], [91, "index-0"], [110, "index-0"]], "astar family": [[6, "index-0"], [31, "index-0"], [32, "index-0"], [33, "index-0"]], "all pairs family": [[7, "index-0"], [73, "index-0"], [77, "index-0"]], "bidirectional a* family": [[8, "index-0"], [35, "index-0"], [36, "index-0"], [37, "index-0"]], "bidirectional dijkstra family": [[9, "index-0"], [38, "index-0"], [39, "index-0"], [40, "index-0"]], "coloring family": [[11, "index-0"], [45, "index-0"], [67, "index-0"], [99, "index-0"]], "components family": [[12, "index-0"], [34, "index-0"], [43, "index-0"], [48, "index-0"], [51, "index-0"], [85, "index-0"], [101, "index-0"]], "contraction family": [[13, "index-0"], [52, "index-0"], [53, "index-0"], [54, "index-0"], [55, "index-0"]], "cost category": [[14, "index-0"], [49, "index-0"], [50, "index-0"], [61, "index-0"], [64, "index-0"], [89, "index-0"], [112, "index-0"]], "cost matrix category": [[15, "index-0"], [33, "index-0"], [37, "index-0"], [40, "index-0"], [62, "index-0"], [113, "index-0"]], "dijkstra family": [[16, "index-0"], [60, "index-0"], [61, "index-0"], [62, "index-0"], [63, "index-0"], [64, "index-0"], [65, "index-0"]], "driving distance category": [[17, "index-0"], [66, "index-0"], [80, "index-0"], [94, "index-0"], [114, "index-0"]], "flow family": [[19, "index-0"], [46, "index-0"], [68, "index-0"], [69, "index-0"], [86, "index-0"], [87, "index-0"], [88, "index-0"], [89, "index-0"], [96, "index-0"]], "kruskal family": [[21, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"]], "spanning tree category": [[21, "index-0"], [78, "index-0"], [79, "index-0"], [80, "index-0"], [81, "index-0"], [92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [117, "index-0"], [123, "index-0"]], "metrics family": [[22, "index-0"], [42, "index-0"], [58, "index-0"]], "ordering family": [[24, "index-0"], [56, "index-0"], [102, "index-0"]], "combinations": [[28, "index-5"], [31, "index-5"], [32, "index-5"], [35, "index-5"], [36, "index-5"], [38, "index-5"], [39, "index-5"], [46, "index-5"], [60, "index-5"], [61, "index-5"], [69, "index-5"], [87, "index-5"], [96, "index-5"], [104, "index-5"], [107, "index-5"], [111, "index-5"], [112, "index-5"], [115, "index-5"]], "ksp": [[28, "index-0"], [28, "index-1"], [28, "index-2"], [28, "index-3"], [28, "index-4"], [28, "index-5"]], "many to many": [[28, "index-4"], [31, "index-4"], [32, "index-4"], [35, "index-4"], [36, "index-4"], [38, "index-4"], [39, "index-4"], [46, "index-4"], [60, "index-4"], [61, "index-4"], [68, "index-4"], [69, "index-4"], [87, "index-4"], [96, "index-4"], [104, "index-4"], [107, "index-4"], [111, "index-4"], [112, "index-4"], [115, "index-4"]], "many to one": [[28, "index-3"], [31, "index-3"], [32, "index-3"], [35, "index-3"], [36, "index-3"], [38, "index-3"], [39, "index-3"], [46, "index-3"], [60, "index-3"], [61, "index-3"], [68, "index-3"], [69, "index-3"], [87, "index-3"], [96, "index-3"], [104, "index-3"], [107, "index-3"], [111, "index-3"], [112, "index-3"], [115, "index-3"]], "one to many": [[28, "index-2"], [31, "index-2"], [32, "index-2"], [35, "index-2"], [36, "index-2"], [38, "index-2"], [39, "index-2"], [46, "index-2"], [60, "index-2"], [61, "index-2"], [68, "index-2"], [69, "index-2"], [87, "index-2"], [96, "index-2"], [104, "index-2"], [107, "index-2"], [111, "index-2"], [112, "index-2"], [115, "index-2"]], "one to one": [[28, "index-1"], [31, "index-1"], [32, "index-1"], [35, "index-1"], [36, "index-1"], [38, "index-1"], [39, "index-1"], [46, "index-1"], [60, "index-1"], [61, "index-1"], [68, "index-1"], [69, "index-1"], [87, "index-1"], [96, "index-1"], [104, "index-1"], [107, "index-1"], [111, "index-1"], [112, "index-1"], [115, "index-1"]], "pgr_ksp": [[28, "index-0"]], "tsp": [[29, "index-1"]], "pgr_tsp": [[29, "index-0"]], "tspeuclidean": [[30, "index-1"]], "pgr_tspeuclidean": [[30, "index-0"]], "astar": [[31, "index-0"], [31, "index-1"], [31, "index-2"], [31, "index-3"], [31, "index-4"], [31, "index-5"]], "pgr_astar": [[31, "index-0"]], "astarcost": [[32, "index-0"], [32, "index-1"], [32, "index-2"], [32, "index-3"], [32, "index-4"], [32, "index-5"]], "pgr_astarcost": [[32, "index-0"]], "astarcostmatrix": [[33, "index-0"]], "pgr_astarcostmatrix": [[33, "index-0"]], "articulationpoints": [[34, "index-0"]], "pgr_articulationpoints": [[34, "index-0"]], "bdastar": [[35, "index-0"], [35, "index-1"], [35, "index-2"], [35, "index-3"], [35, "index-4"], [35, "index-5"]], "pgr_bdastar": [[35, "index-0"]], "bdastarcost": [[36, "index-0"], [36, "index-1"], [36, "index-2"], [36, "index-3"], [36, "index-4"], [36, "index-5"]], "pgr_bdastarcost": [[36, "index-0"]], "bdastarcostmatrix": [[37, "index-0"]], "pgr_bdastarcostmatrix": [[37, "index-0"]], "bddijkstra": [[38, "index-0"], [38, "index-1"], [38, "index-2"], [38, "index-3"], [38, "index-4"], [38, "index-5"]], "pgr_bddijkstra": [[38, "index-0"]], "bddijkstracost": [[39, "index-0"], [39, "index-1"], [39, "index-2"], [39, "index-3"], [39, "index-4"], [39, "index-5"]], "pgr_bddijkstracost": [[39, "index-0"]], "bddijkstracostmatrix": [[40, "index-0"]], "pgr_bddijkstracostmatrix": [[40, "index-0"]], "combinations - experimental on v3.2": [[41, "index-5"], [44, "index-5"], [57, "index-5"], [70, "index-5"], [89, "index-5"]], "many to many - experimental on v3.0": [[41, "index-4"], [44, "index-4"], [57, "index-4"], [70, "index-4"], [88, "index-4"], [89, "index-4"]], "many to one - experimental on v3.0": [[41, "index-3"], [44, "index-3"], [57, "index-3"], [70, "index-3"], [88, "index-3"], [89, "index-3"]], "one to many - experimental on v3.0": [[41, "index-2"], [44, "index-2"], [57, "index-2"], [70, "index-2"], [88, "index-2"], [89, "index-2"]], "one to one - experimental on v3.0": [[41, "index-1"], [44, "index-1"], [57, "index-1"], [70, "index-1"], [88, "index-1"], [89, "index-1"]], "shortest path category": [[41, "index-0"], [57, "index-0"], [60, "index-0"], [70, "index-0"], [104, "index-0"], [107, "index-0"], [108, "index-0"], [111, "index-0"]], "bellmanford - experimental": [[41, "index-0"], [41, "index-1"], [41, "index-2"], [41, "index-3"], [41, "index-4"], [41, "index-5"]], "pgr_bellmanford - experimental": [[41, "index-0"]], "betweennesscentrality - experimental on v3.7": [[42, "index-0"]], "pgr_betweennesscentrality - experimental": [[42, "index-0"]], "biconnectedcomponents": [[43, "index-0"]], "pgr_biconnectedcomponents": [[43, "index-0"]], "traversal family": [[44, "index-0"], [47, "index-0"], [59, "index-0"], [126, "index-0"]], "binarybreadthfirstsearch - experimental": [[44, "index-0"], [44, "index-1"], [44, "index-2"], [44, "index-3"], [44, "index-4"], [44, "index-5"]], "pgr_binarybreadthfirstsearch - experimental": [[44, "index-0"]], "bipartite - experimental on v3.2": [[45, "index-0"]], "pgr_bipartite - experimental": [[45, "index-0"]], "boykovkolmogorov": [[46, "index-0"], [46, "index-1"], [46, "index-2"], [46, "index-3"], [46, "index-4"], [46, "index-5"]], "pgr_boykovkolmogorov": [[46, "index-0"]], "multiple vertices - experimental on v3.0": [[47, "index-2"]], "single vertex - experimental on v3.0": [[47, "index-1"]], "breadthfirstsearch - experimental": [[47, "index-0"], [47, "index-1"], [47, "index-2"]], "pgr_breadthfirstsearch - experimental": [[47, "index-0"]], "bridges": [[48, "index-0"]], "pgr_bridges": [[48, "index-0"]], "miscellaneous algorithms": [[49, "index-0"], [50, "index-0"], [75, "index-0"], [82, "index-0"], [100, "index-0"], [103, "index-0"]], "chinesepostman - experimental on v3.0": [[49, "index-0"]], "pgr_chinesepostman - experimental": [[49, "index-0"]], "chinesepostmancost - experimental on v3.0": [[50, "index-0"]], "pgr_chinesepostmancost - experimental": [[50, "index-0"]], "connectedcomponents": [[51, "index-0"]], "pgr_connectedcomponents": [[51, "index-0"]], "contraction": [[52, "index-0"]], "pgr_contraction": [[52, "index-0"]], "contractiondeadend - proposed": [[53, "index-0"]], "pgr_contractiondeadend - proposed": [[53, "index-0"]], "contractionhierarchies - experimental": [[54, "index-0"]], "pgr_contractionhierarchies - experimental": [[54, "index-0"]], "contractionlinear - proposed": [[55, "index-0"]], "pgr_contractionlinear - proposed": [[55, "index-0"]], "cuthillmckeeordering - experimental on v3.4": [[56, "index-1"]], "pgr_cuthillmckeeordering": [[56, "index-0"]], "directed acyclic graph category": [[57, "index-0"]], "dagshortestpath - experimental": [[57, "index-0"], [57, "index-1"], [57, "index-2"], [57, "index-3"], [57, "index-4"], [57, "index-5"]], "pgr_dagshortestpath - experimental": [[57, "index-0"]], "edges": [[58, "index-2"]], "edges and vertices": [[58, "index-1"]], "degree": [[58, "index-0"], [58, "index-1"], [58, "index-2"]], "pgr_degree": [[58, "index-0"]], "multiple vertices - proposed on v3.3": [[59, "index-2"]], "single vertex - proposed on v3.3": [[59, "index-1"]], "depthfirstsearch - proposed": [[59, "index-0"], [59, "index-1"], [59, "index-2"]], "pgr_depthfirstsearch - proposed": [[59, "index-0"]], "dijkstra": [[60, "index-0"], [60, "index-1"], [60, "index-2"], [60, "index-3"], [60, "index-4"], [60, "index-5"]], "pgr_dijkstra": [[60, "index-0"]], "dijkstracost": [[61, "index-0"], [61, "index-1"], [61, "index-2"], [61, "index-3"], [61, "index-4"], [61, "index-5"]], "pgr_dijkstracost": [[61, "index-0"]], "dijkstracostmatrix": [[62, "index-0"]], "pgr_dijkstracostmatrix": [[62, "index-0"]], "combinations - proposed on v3.3": [[63, "index-4"], [64, "index-4"]], "many to many - proposed on v3.3": [[63, "index-3"], [64, "index-3"]], "many to one - proposed on v3.3": [[63, "index-2"], [64, "index-2"]], "near category": [[63, "index-0"], [64, "index-0"]], "one to many - proposed on v3.3": [[63, "index-1"], [64, "index-1"]], "dijkstranear - proposed": [[63, "index-0"], [63, "index-1"], [63, "index-2"], [63, "index-3"], [63, "index-4"]], "pgr_dijkstranear - proposed": [[63, "index-0"]], "dijkstranearcost - proposed": [[64, "index-0"], [64, "index-1"], [64, "index-2"], [64, "index-3"], [64, "index-4"]], "pgr_dijkstranearcost - proposed": [[64, "index-0"]], "one via - proposed on 2.2": [[65, "index-1"]], "via category": [[65, "index-0"], [105, "index-0"], [106, "index-0"], [116, "index-0"], [128, "index-0"]], "dijkstravia - proposed": [[65, "index-0"], [65, "index-1"]], "pgr_dijkstravia - proposed": [[65, "index-0"]], "multiple vertices": [[66, "index-2"], [79, "index-2"], [80, "index-2"], [81, "index-2"], [93, "index-2"], [94, "index-2"], [95, "index-2"], [114, "index-2"]], "single vertex": [[66, "index-1"], [79, "index-1"], [80, "index-1"], [81, "index-1"], [93, "index-1"], [94, "index-1"], [95, "index-1"], [114, "index-1"]], "drivingdistance": [[66, "index-0"], [66, "index-1"], [66, "index-2"]], "pgr_drivingdistance": [[66, "index-0"]], "edgecoloring - experimental on v3.3": [[67, "index-0"]], "pgr_edgecoloring - experimental": [[67, "index-0"]], "combinations -- proposed on v3.2": [[68, "index-5"]], "edgedisjointpaths": [[68, "index-0"], [68, "index-1"], [68, "index-2"], [68, "index-3"], [68, "index-4"], [68, "index-5"]], "pgr_edgedisjointpaths": [[68, "index-0"]], "edmondskarp": [[69, "index-0"], [69, "index-1"], [69, "index-2"], [69, "index-3"], [69, "index-4"], [69, "index-5"]], "pgr_edmondskarp": [[69, "index-0"]], "edwardmoore - experimental": [[70, "index-0"], [70, "index-1"], [70, "index-2"], [70, "index-3"], [70, "index-4"], [70, "index-5"]], "pgr_edwardmoore - experimental": [[70, "index-0"]], "utilities": [[71, "index-0"], [72, "index-0"], [97, "index-0"], [98, "index-0"], [127, "index-0"]], "extractvertices": [[71, "index-0"]], "pgr_extractvertices": [[71, "index-0"]], "many points": [[72, "index-2"]], "one point": [[72, "index-1"]], "findcloseedges": [[72, "index-0"], [72, "index-1"], [72, "index-2"]], "pgr_findcloseedges": [[72, "index-0"]], "floydwarshall": [[73, "index-0"]], "pgr_floydwarshall": [[73, "index-0"]], "reference": [[74, "index-0"], [109, "index-0"], [119, "index-0"]], "full_version": [[74, "index-0"]], "pgr_full_version": [[74, "index-0"]], "hawick circuits - experimental on v3.4": [[75, "index-0"]], "pgr_hawickcircuits": [[75, "index-0"]], "planar family": [[76, "index-0"]], "isplanar - experimental on v3.2": [[76, "index-0"]], "pgr_isplanar": [[76, "index-0"]], "johnson": [[77, "index-0"]], "pgr_johnson": [[77, "index-0"]], "kruskal": [[78, "index-0"]], "pgr_kruskal": [[78, "index-0"]], "kruskalbfs": [[79, "index-0"], [79, "index-1"], [79, "index-2"]], "pgr_kruskalbfs": [[79, "index-0"], [81, "index-0"]], "kruskaldd": [[80, "index-0"], [80, "index-1"], [80, "index-2"]], "pgr_kruskaldd": [[80, "index-0"]], "kruskaldfs": [[81, "index-0"], [81, "index-1"], [81, "index-2"]], "pgr_kruskaldfs": [[81, "index-0"]], "lengauertarjandominatortree - experimental on v3.2": [[82, "index-0"]], "pgr_lengauertarjandominatortree": [[82, "index-0"]], "transformation family": [[83, "index-0"], [84, "index-0"], [125, "index-0"]], "linegraph - proposed on v3.7": [[83, "index-0"]], "pgr_linegraph": [[83, "index-0"]], "linegraphfull - experimental on v2.6": [[84, "index-0"]], "pgr_linegraphfull": [[84, "index-0"]], "makeconnected - experimental on v3.2": [[85, "index-0"]], "pgr_makeconnected - experimental": [[85, "index-0"]], "maximumcardinalitymatch": [[86, "index-1"]], "maxcardinalitymatch": [[86, "index-0"]], "pgr_maxcardinalitymatch": [[86, "index-0"]], "maxflow": [[87, "index-0"], [87, "index-1"], [87, "index-2"], [87, "index-3"], [87, "index-4"], [87, "index-5"]], "pgr_maxflow": [[87, "index-0"]], "combinations -- experimental on v3.2": [[88, "index-5"]], "maxflowmincost - experimental": [[88, "index-0"], [88, "index-1"], [88, "index-2"], [88, "index-3"], [88, "index-4"], [88, "index-5"]], "pgr_maxflowmincost - experimental": [[88, "index-0"]], "maxflowmincost_cost - experimental": [[89, "index-0"], [89, "index-1"], [89, "index-2"], [89, "index-3"], [89, "index-4"], [89, "index-5"]], "pgr_maxflowmincost_cost - experimental": [[89, "index-0"]], "pgr_pickdeliver": [[90, "index-0"]], "pickdeliver - experimental on v3.0": [[90, "index-0"]], "pgr_pickdelivereuclidean": [[91, "index-0"]], "pickdelivereuclidean - experimental on 3.0": [[91, "index-0"]], "prim family": [[92, "index-0"], [93, "index-0"], [94, "index-0"], [95, "index-0"], [117, "index-0"]], "pgr_prim": [[92, "index-0"]], "prim": [[92, "index-0"]], "pgr_primbfs": [[93, "index-0"]], "primbfs": [[93, "index-0"], [93, "index-1"], [93, "index-2"]], "pgr_primdd": [[94, "index-0"]], "primdd": [[94, "index-0"], [94, "index-1"], [94, "index-2"]], "pgr_primdfs": [[95, "index-0"]], "primdfs": [[95, "index-0"], [95, "index-1"], [95, "index-2"]], "pgr_pushrelabel": [[96, "index-0"]], "pushrelabel": [[96, "index-0"], [96, "index-1"], [96, "index-2"], [96, "index-3"], [96, "index-4"], [96, "index-5"]], "pgr_separatecrossing": [[97, "index-0"]], "separatecrossing": [[97, "index-0"]], "pgr_separatetouching": [[98, "index-0"]], "separatetouching": [[98, "index-0"]], "pgr_sequentialvertexcoloring - proposed": [[99, "index-0"]], "sequentialvertexcoloring - proposed on v3.3": [[99, "index-0"]], "pgr_stoerwagner": [[100, "index-0"]], "stoerwagner - experimental on v3.0": [[100, "index-0"]], "pgr_strongcomponents": [[101, "index-0"]], "strongcomponents": [[101, "index-0"]], "pgr_topologicalsort": [[102, "index-0"]], "topologicalsort - experimental on v3.0": [[102, "index-0"]], "pgr_transitiveclosure": [[103, "index-0"]], "transitiveclosure - experimental on v3.0": [[103, "index-0"]], "restrictions category": [[104, "index-0"], [105, "index-0"], [106, "index-0"], [107, "index-0"], [108, "index-0"]], "pgr_trsp": [[104, "index-0"]], "trsp": [[104, "index-0"], [104, "index-1"], [104, "index-2"], [104, "index-3"], [104, "index-4"], [104, "index-5"]], "one via": [[105, "index-1"], [106, "index-1"], [116, "index-1"]], "pgr_trspvia": [[105, "index-0"]], "trspvia": [[105, "index-0"], [105, "index-1"]], "with points category": [[106, "index-0"], [107, "index-0"], [111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [129, "index-0"]], "pgr_trspvia_withpoints": [[106, "index-0"]], "trspvia_withpoints": [[106, "index-0"], [106, "index-1"]], "pgr_trsp_withpoints": [[107, "index-0"]], "trsp_withpoints": [[107, "index-0"], [107, "index-1"], [107, "index-2"], [107, "index-3"], [107, "index-4"], [107, "index-5"]], "pgr_turnrestrictedpath": [[108, "index-0"]], "turnrestrictedpath": [[108, "index-0"]], "pgr_version": [[109, "index-0"]], "version": [[109, "index-0"]], "pgr_vrponedepot": [[110, "index-0"]], "vrponedepot - experimental on v2.1.0": [[110, "index-0"]], "pgr_withpoints": [[111, "index-0"]], "withpoints": [[111, "index-0"], [111, "index-1"], [111, "index-2"], [111, "index-3"], [111, "index-4"], [111, "index-5"]], "withpoints family": [[111, "index-0"], [112, "index-0"], [113, "index-0"], [114, "index-0"], [115, "index-0"], [116, "index-0"], [130, "index-0"]], "pgr_withpointscost": [[112, "index-0"]], "withpointscost": [[112, "index-0"], [112, "index-1"], [112, "index-2"], [112, "index-3"], [112, "index-4"], [112, "index-5"]], "pgr_withpointscostmatrix": [[113, "index-0"]], "withpointscostmatrix": [[113, "index-0"]], "pgr_withpointsdd": [[114, "index-0"]], "withpointsdd": [[114, "index-0"], [114, "index-1"], [114, "index-2"]], "pgr_withpointsksp": [[115, "index-0"]], "withpointsksp": [[115, "index-0"], [115, "index-1"], [115, "index-2"], [115, "index-3"], [115, "index-4"], [115, "index-5"]], "pgr_withpointsvia": [[116, "index-0"]], "withpointsvia": [[116, "index-0"], [116, "index-1"]]}})