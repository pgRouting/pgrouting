BEGIN;
BEGIN
SET client_min_messages TO NOTICE;
SET
CREATE TABLE edge_table1 (
    id serial,
    source integer,
    target integer,
    cost double precision,
    reverse_cost double precision
);
CREATE TABLE
INSERT INTO edge_table1 (source,target,cost,reverse_cost) VALUES (0,1,1,-1);
INSERT 0 1
INSERT INTO edge_table1 (source,target,cost,reverse_cost) VALUES (0,3,1,-1);
INSERT 0 1
INSERT INTO edge_table1 (source,target,cost,reverse_cost) VALUES (0,2,1,-1);
INSERT 0 1
INSERT INTO edge_table1 (source,target,cost,reverse_cost) VALUES (1,3,1,-1);
INSERT 0 1
INSERT INTO edge_table1 (source,target,cost,reverse_cost) VALUES (1,2,1,-1);
INSERT 0 1
INSERT INTO edge_table1 (source,target,cost,reverse_cost) VALUES (3,2,1,-1);
INSERT 0 1
/* -- q1 */
SELECT * FROM pgr_topologicalsort(
  'SELECT id,source,target,cost,reverse_cost FROM edge_table1'
);
 seq | sorted_v
-----+----------
   1 |        0
   2 |        1
   3 |        3
   4 |        2
(4 rows)

/* -- q2 */
SELECT * FROM pgr_topologicalsort(
  'SELECT id,source,target,cost,reverse_cost FROM edge_table where id=2'
);
 seq | sorted_v
-----+----------
   1 |        3
   2 |        2
(2 rows)

SELECT * FROM pgr_topologicalsort(
  'SELECT id,source,target,cost,reverse_cost FROM edge_table where id=3'
);
 seq | sorted_v
-----+----------
   1 |        4
   2 |        3
(2 rows)

SELECT * FROM pgr_topologicalsort(
  'SELECT id,source,target,cost,reverse_cost FROM edge_table where id=2 or id=3'
);
 seq | sorted_v
-----+----------
   1 |        4
   2 |        3
   3 |        2
(3 rows)

SELECT * FROM pgr_topologicalsort(
  'SELECT id,source,target,cost,reverse_cost FROM edge_table where id=11'
);
 seq | sorted_v
-----+----------
   1 |        6
   2 |       11
(2 rows)

/* -- q3 */
SELECT * FROM pgr_topologicalsort(
  'SELECT id,source,target,cost,reverse_cost FROM edge_table where cost=-1 or reverse_cost=-1'
);
 seq | sorted_v
-----+----------
   1 |       10
   2 |        4
   3 |        3
   4 |        6
   5 |       11
   6 |       12
   7 |        2
(7 rows)

/* -- q4 */
ROLLBACK;
ROLLBACK
