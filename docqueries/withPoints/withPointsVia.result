BEGIN;
BEGIN
SET client_min_messages TO NOTICE;
SET
SET extra_float_digits=-3;
SET
/* -- q0 */
SELECT * FROM pgr_withPointsVia(
  'SELECT id, source, target, cost, reverse_cost FROM edges order by id',
  'SELECT pid, edge_id, fraction, side from pointsOfInterest',
  ARRAY[-6, 15, -1]);
 seq | path_id | path_seq | start_vid | end_vid | node | edge | cost | agg_cost | route_agg_cost
-----+---------+----------+-----------+---------+------+------+------+----------+----------------
   1 |       1 |        1 |        -6 |      15 |   -6 |    4 |  0.3 |        0 |              0
   2 |       1 |        2 |        -6 |      15 |    7 |    8 |    1 |      0.3 |            0.3
   3 |       1 |        3 |        -6 |      15 |   11 |    9 |    1 |      1.3 |            1.3
   4 |       1 |        4 |        -6 |      15 |   16 |   16 |    1 |      2.3 |            2.3
   5 |       1 |        5 |        -6 |      15 |   15 |   -1 |    0 |      3.3 |            3.3
   6 |       2 |        1 |        15 |      -1 |   15 |    3 |    1 |        0 |            3.3
   7 |       2 |        2 |        15 |      -1 |   10 |    2 |    1 |        1 |            4.3
   8 |       2 |        3 |        15 |      -1 |    6 |    1 |  0.6 |        2 |            5.3
   9 |       2 |        4 |        15 |      -1 |   -1 |   -2 |    0 |      2.6 |            5.9
(9 rows)

/* -- q1 */
SELECT * FROM pgr_withPointsVia(
  'SELECT id, source, target, cost, reverse_cost FROM edges order by id',
  'SELECT pid, edge_id, fraction, side from pointsOfInterest',
  ARRAY[-1, 7, -3, 16, 15]);
 seq | path_id | path_seq | start_vid | end_vid | node | edge | cost | agg_cost | route_agg_cost
-----+---------+----------+-----------+---------+------+------+------+----------+----------------
   1 |       1 |        1 |        -1 |       7 |   -1 |    1 |  0.6 |        0 |              0
   2 |       1 |        2 |        -1 |       7 |    6 |    4 |    1 |      0.6 |            0.6
   3 |       1 |        3 |        -1 |       7 |    7 |   -1 |    0 |      1.6 |            1.6
   4 |       2 |        1 |         7 |      -3 |    7 |   10 |    1 |        0 |            1.6
   5 |       2 |        2 |         7 |      -3 |    8 |   12 |  0.6 |        1 |            2.6
   6 |       2 |        3 |         7 |      -3 |   -3 |   -1 |    0 |      1.6 |            3.2
   7 |       3 |        1 |        -3 |      16 |   -3 |   12 |  0.4 |        0 |            3.2
   8 |       3 |        2 |        -3 |      16 |   12 |   13 |    1 |      0.4 |            3.6
   9 |       3 |        3 |        -3 |      16 |   17 |   15 |    1 |      1.4 |            4.6
  10 |       3 |        4 |        -3 |      16 |   16 |   -1 |    0 |      2.4 |            5.6
  11 |       4 |        1 |        16 |      15 |   16 |   16 |    1 |        0 |            5.6
  12 |       4 |        2 |        16 |      15 |   15 |   -2 |    0 |        1 |            6.6
(12 rows)

/* -- q2 */
SELECT agg_cost FROM  pgr_withPointsVia(
  'SELECT id, source, target, cost, reverse_cost FROM edges order by id',
  'SELECT pid, edge_id, fraction, side from pointsOfInterest',
  ARRAY[-1, 7, -3, 16, 15])
WHERE path_id = 3 AND edge < 0;
 agg_cost
----------
      2.4
(1 row)

/* -- q3 */
SELECT route_agg_cost FROM  pgr_withPointsVia(
  'SELECT id, source, target, cost, reverse_cost FROM edges order by id',
  'SELECT pid, edge_id, fraction, side from pointsOfInterest',
  ARRAY[-1, 7, -3, 16, 15])
WHERE path_id = 3 AND edge < 0;
 route_agg_cost
----------------
            5.6
(1 row)

/* -- q4 */
SELECT row_number() over () as node_seq, node
FROM  pgr_withPointsVia(
  'SELECT id, source, target, cost, reverse_cost FROM edges order by id',
  'SELECT pid, edge_id, fraction, side from pointsOfInterest',
  ARRAY[-1, 7, -3, 16, 15])
WHERE edge <> -1 ORDER BY seq;
 node_seq | node
----------+------
        1 |   -1
        2 |    6
        3 |    7
        4 |    8
        5 |   -3
        6 |   12
        7 |   17
        8 |   16
        9 |   15
(9 rows)

/* -- q5 */
SELECT path_id, route_agg_cost FROM  pgr_withPointsVia(
  'SELECT id, source, target, cost, reverse_cost FROM edges order by id',
  'SELECT pid, edge_id, fraction, side from pointsOfInterest',
  ARRAY[-1, 7, -3, 16, 15])
WHERE edge < 0;
 path_id | route_agg_cost
---------+----------------
       1 |            1.6
       2 |            3.2
       3 |            5.6
       4 |            6.6
(4 rows)

/* -- q6 */
SELECT seq, node,
CASE WHEN edge = -1 THEN 'visits'
ELSE 'passes in front'
END as status
FROM  pgr_withPointsVia(
  'SELECT id, source, target, cost, reverse_cost FROM edges order by id',
  'SELECT pid, edge_id, fraction, side from pointsOfInterest',
  ARRAY[-1, 7, -3, 16, 15], details => true)
WHERE agg_cost <> 0 or seq = 1;
 seq | node |     status
-----+------+-----------------
   1 |   -1 | passes in front
   2 |    6 | passes in front
   3 |   -6 | passes in front
   4 |    7 | visits
   6 |    8 | passes in front
   7 |   -3 | visits
   9 |   12 | passes in front
  10 |   17 | passes in front
  11 |   -2 | passes in front
  12 |   16 | visits
  14 |   15 | passes in front
(11 rows)

/* -- q7 */
ROLLBACK;
ROLLBACK
