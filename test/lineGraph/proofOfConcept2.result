BEGIN;
BEGIN
SET client_min_messages TO NOTICE;
SET
DROP TABLE edge_table;
DROP TABLE
DROP TABLE edge_table_vertices_pgr;
DROP TABLE
CREATE TABLE edge_table (
    id integer,
    source integer,
    target integer,
    cost integer,
    the_geom geometry(MultiLineString)
);
CREATE TABLE
COPY edge_table (id, source, target, cost, the_geom) FROM stdin;
COPY 302
WITH a AS (SELECT source FROM edge_table UNION select target FROM edge_table)
SELECT source AS id INTO edge_table_vertices_pgr FROM a;
SELECT 256
DROP TABLE IF EXISTS result2;
NOTICE:  table "result2" does not exist, skipping
DROP TABLE
SELECT  * INTO result2 FROM pgr_lineGraphFull(
    $$SELECT id, source, target, cost
    FROM edge_table$$
);
SELECT 638
SELECT count(*) FROM result2;
 count
-------
   638
(1 row)

DROP TABLE IF EXISTS result2_vertices_pgr;
NOTICE:  table "result2_vertices_pgr" does not exist, skipping
DROP TABLE
WITH foo AS (SELECT source AS id FROM result2
    UNION
    SELECT target FROM result2)
SELECT *, NULL::BIGINT AS original_id
INTO result2_vertices_pgr
FROM foo
ORDER BY id;
SELECT 604
SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NOT NULL;
 count
-------
     0
(1 row)

SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NULL;
 count
-------
   604
(1 row)

UPDATE result2_vertices_pgr AS r SET original_id = v.id
FROM edge_table_vertices_pgr AS v WHERE v.id = r.id;
UPDATE 256
SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NOT NULL;
 count
-------
   256
(1 row)

SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NULL;
 count
-------
   348
(1 row)

WITH a AS (SELECT e.id, e.original_id FROM result2_vertices_pgr AS e WHERE original_id IS NOT NULL),
b AS (SELECT * FROM result2 WHERE cost = 0 and source IN (SELECT id FROM a)),
c AS (SELECT * FROM b JOIN result2_vertices_pgr ON(source = id)),
d AS (SELECT c.source, v.original_id FROM c JOIN result2_vertices_pgr as v ON (target=v.id)),
e AS (SELECT DISTINCT c.target, c.original_id FROM c JOIN result2_vertices_pgr AS r ON(target = r.id AND r.original_id IS NULL))
UPDATE result2_vertices_pgr SET original_id = e.original_id FROM e WHERE e.target = id;
UPDATE 240
SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NOT NULL;
 count
-------
   496
(1 row)

SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NULL;
 count
-------
   108
(1 row)

WITH a AS (SELECT e.id, e.original_id FROM result2_vertices_pgr AS e WHERE original_id IS NOT NULL),
b AS (SELECT * FROM result2 WHERE cost = 0 and target IN (SELECT id FROM a)),
c AS (SELECT * FROM b JOIN result2_vertices_pgr ON(target = id)),
d AS (SELECT c.target, v.original_id FROM c JOIN result2_vertices_pgr as v ON (source=v.id)),
e AS (SELECT DISTINCT c.source, c.original_id FROM c JOIN result2_vertices_pgr AS r ON(source = r.id AND r.original_id IS NULL))
UPDATE result2_vertices_pgr SET original_id = e.original_id FROM e WHERE e.source = id;
UPDATE 78
SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NOT NULL;
 count
-------
   574
(1 row)

SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NULL;
 count
-------
    30
(1 row)

WITH a AS (SELECT id FROM result2_vertices_pgr WHERE original_id IS NULL),
b AS (SELECT source,edge FROM result2 WHERE source IN (SELECT id FROM a)),
c AS (SELECT id,source FROM edge_table WHERE id IN (SELECT edge FROM b))
UPDATE result2_vertices_pgr AS d SET original_id = (SELECT source FROM c WHERE c.id = (SELECT edge FROM b WHERE b.source = d.id)) WHERE id IN (SELECT id FROM a);
UPDATE 30
SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NOT NULL;
 count
-------
   589
(1 row)

SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NULL;
 count
-------
    15
(1 row)

WITH a AS (SELECT id FROM result2_vertices_pgr WHERE original_id IS NULL),
b AS (SELECT target,edge FROM result2 WHERE target IN (SELECT id FROM a)),
c AS (SELECT id,target FROM edge_table WHERE id IN (SELECT edge FROM b))
UPDATE result2_vertices_pgr AS d SET original_id = (SELECT target FROM c WHERE c.id = (SELECT edge FROM b WHERE b.target = d.id)) WHERE id IN (SELECT id FROM a);
UPDATE 15
SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NOT NULL;
 count
-------
   604
(1 row)

SELECT count(*) FROM result2_vertices_pgr WHERE original_id IS NULL;
 count
-------
     0
(1 row)

ROLLBACK;
ROLLBACK
