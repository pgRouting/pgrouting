set  client_min_messages to warning;

SET search_path TO public;
drop table if exists "Edges2";
drop table if exists "Edges2_vertices_pgr";
drop schema if exists "myschema" cascade;

set  client_min_messages to notice;

-- The following should be OK

select pgr_createTopology('edges2', 0.000001, id:='eid');
select pgr_createTopology('Edges2', 0.000001, 'the_geom', 'eid');
select pgr_createTopology('edges2', 0.000001, 'The_Geom', 'eid');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'Eid');
select pgr_createTopology('edges2', 0.000001, 'The_geom', 'Eid');
select pgr_createTopology('Edges2', 0.000001, 'The_geom', 'Eid');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid','source');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid','Source');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid','source','target');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid',rows_where:='eid<15');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid',source:='source');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid',target:='target',rows_where:='eid<15 and eid>5');

-- the following tests should FAIL

select pgr_createTopology('edges22', 0.000001, 'the_geom', 'eid');
select pgr_createTopology('edges2', 0.000001, 'geom', 'eid');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'gid');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid','sourc');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid',target:='source');
select pgr_createTopology('edges2', 0.000001, id:='eid',source:='the_geom');
select pgr_createTopology('edges2', 0.000001, id:='eid',target:='the_geom');

-- Testing with table with a similar name

select * into "Edges2" from edges2;

-- The following should be OK

select pgr_createTopology('Edges2', 0.000001,id:='eid');
update "Edges2" set the_geom=NULL where eid=5;
select pgr_createTopology('Edges2', 0.000001,id:='eid');
update "Edges2" set eid=NULL where eid=7;
select pgr_createTopology('Edges2', 0.000001,id:='eid');

create schema myschema;
SET search_path TO myschema,public;

-- reaching tables when located in another schema
-- the following should be OK

select pgr_createTopology('public.edges2', 0.000001, id:='eid');
select pgr_createTopology('public.Edges2', 0.000001, 'the_geom', 'eid');
select pgr_createTopology('Public.edges2', 0.000001, 'The_Geom', 'eid');
select pgr_createTopology('public.edges2', 0.000001, 'the_geom', 'Eid');
select pgr_createTopology('public.edges2', 0.000001, 'The_geom', 'Eid');
select pgr_createTopology('PUBLIC.Edges2', 0.000001, 'The_geom', 'Eid');
select pgr_createTopology('public.edges2', 0.000001, 'the_geom', 'eid','source');
select pgr_createTopology('public.edges2', 0.000001, 'the_geom', 'eid','Source');
select pgr_createTopology('public.edges2', 0.000001, 'the_geom', 'eid','source','target');
select pgr_createTopology('public.edges2', 0.000001, 'the_geom', 'eid',rows_where:='eid<15');
select pgr_createTopology('public.edges2', 0.000001, 'the_geom', 'eid',source:='source');
select pgr_createTopology('public.edges2', 0.000001, 'the_geom', 'eid',target:='target',rows_where:='eid<15');

-- the following tests should fail

select pgr_createTopology('public.edges22', 0.000001, 'the_geom', 'eid');
select pgr_createTopology('public.edges2', 0.000001, 'geom', 'eid');
select pgr_createTopology('public.edges2', 0.000001, 'the_geom', 'gid');
select pgr_createTopology('public.Edges2', 0.000001, 'the_geom', 'eid','sourc');
select pgr_createTopology('public.edges2', 0.000001, 'the_geom', 'eid',target:='source');
select pgr_createTopology('public.edges2', 0.000001, id:='eid',source:='the_geom');
select pgr_createTopology('public.edges2', 0.000001, id:='eid',target:='the_geom');

-- creating tables with similar names in myschema

select * into edges2 from public.edges2;
select * into "Edges2" from public."Edges2";

-- The following should be OK 

select pgr_createTopology('edges2', 0.000001, id:='eid');
select pgr_createTopology('Edges2', 0.000001, 'the_geom', 'eid');
select pgr_createTopology('edges2', 0.000001, 'The_Geom', 'eid');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'Eid');
select pgr_createTopology('edges2', 0.000001, 'The_geom', 'Eid');
select pgr_createTopology('Edges2', 0.000001, 'The_geom', 'Eid');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid','source');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid','Source');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid','source','target');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid',rows_where:='eid<15');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid',source:='source');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid',target:='target',rows_where:='eid<15');

-- the following tests should FAIL

select pgr_createTopology('edges22', 0.000001, 'the_geom', 'eid');
select pgr_createTopology('edges2', 0.000001, 'geom', 'eid');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'gid');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid','sourc');
select pgr_createTopology('edges2', 0.000001, 'the_geom', 'eid',target:='source');
select pgr_createTopology('edges2', 0.000001, id:='eid',source:='the_geom');
select pgr_createTopology('edges2', 0.000001, id:='eid',target:='the_geom');

--Test of the rows_where  clause


-- The following should be OK
select pgr_createTopology('edges2', 0.000001, id:= 'eid',rows_where:='eid<15');
select pgr_createTopology('Edges2', 0.000001, id:= 'eid',rows_where:='eid<15 and eid>5');
select pgr_createTopology('Edges2', 0.000001, id:= 'eid',rows_where:=' the_geom && (select st_buffer(the_geom,0.0001) as buffer from "Edges2" where eid=6)') ;

-- The following should FAIL (working on myschema)

select pgr_createTopology('edges2', 0.000001, id:= 'eid',rows_where:='eid<');
select pgr_createTopology('Edges2', 0.000001, id:= 'eid',rows_where:='eid<15 and ed>5');
select pgr_createTopology('Edges2', 0.000001, id:= 'eid',rows_where:=' the_geom && (select st_buffer(the_geom,0.0001 as buffer from "Edges2" where eid=6)') ;

-- BIG TABLE TEST TAKES TIME
--create table bigtable ( id bigserial PRIMARY KEY, source smallint,target smallint);
--SELECT AddGeometryColumn( 'bigtable', 'the_geom', 0, 'LINESTRING',2);
--insert into bigtable (the_geom) ( select ST_MakeLine(ST_MakePoint(random()*1000,random()*1000), ST_MakePoint(random()*1000,random()*1000)) 
--from  (SELECT * FROM generate_series(1,20000) AS id) AS x) ;
--select pgr_createTopology('bigtable', 0.000001);


set  client_min_messages to warning;

SET search_path TO public;
drop table if exists "Edges2";
drop table if exists "Edges2_vertices_pgr";
drop schema if exists "myschema" cascade;
