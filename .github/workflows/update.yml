name: Update test


# manually triggered workflow
# - 10+ jobs created and continue to grow

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/update.yml'

    branches-ignore:
      - 'gh-pages'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  update-ver:
    name: Build
    runs-on: ubuntu-latest

    strategy:
        fail-fast: false
        matrix:
          old_pgr: [3.6.0, 3.5.0, 3.4.1, 3.3.5, 3.2.2, 3.1.3, 3.0.6]

    steps:
      - uses: actions/checkout@v3

      - name: Get postgres version
        run: |
          sudo service postgresql start
          pgver=$(psql --version | grep -Po '(?<=psql \(PostgreSQL\) )[^;]+(?=\.\d+ \()')
          echo "PGVER=${pgver}" >> $GITHUB_ENV
          echo "PGIS=3" >> $GITHUB_ENV
          PG_USER=$(whoami)
          echo "PG_RUNNER_USER=${PG_USER}" >> $GITHUB_ENV
          PG_PORT=5432
          echo "PGPORT=${PG_PORT}" >> $GITHUB_ENV
          sudo -u postgres psql -p "${PG_PORT}" -c "DROP ROLE IF EXISTS \"${PG_USER}\";"
          sudo -u postgres psql -p "${PG_PORT}" -c "CREATE ROLE \"${PG_USER}\" WITH LOGIN SUPERUSER;"
          sudo -u postgres psql -p "${PG_PORT}" -c "CREATE DATABASE \"${PG_USER}\";"

      - name: Add PostgreSQL APT repository
        run: |
          sudo apt-get install curl ca-certificates gnupg
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ \
            $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libboost-graph-dev \
            libtap-parser-sourcehandler-pgtap-perl \
            postgresql-${PGVER} \
            postgresql-${PGVER}-pgtap \
            postgresql-${PGVER}-postgis-${PGIS} \
            postgresql-${PGVER}-postgis-${PGIS}-scripts \
            postgresql-server-dev-${PGVER}

          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: get old version
        uses: actions/checkout@v3
        with:
          repository: 'pgRouting/pgrouting'
          ref: "v${{ matrix.old_pgr }}"
          path: "v${{ matrix.old_pgr }}"

      - name: build old version
        run: |
          pushd  "v${{ matrix.old_pgr }}" || exit 1
          export PATH=/usr/lib/postgresql/${PGVER}/bin:$PATH
          mkdir build
          cd build || exit 1
          cmake -DPOSTGRESQL_VERSION=${PGVER} -DCMAKE_BUILD_TYPE=Release -DWITH_DOC=OFF ..
          make -j 4
          sudo make install

      - name: Build current version
        run: |
          export PATH=/usr/lib/postgresql/${PGVER}/bin:$PATH
          mkdir build
          cd build
          cmake -DPOSTGRESQL_VERSION=${PGVER} -DCMAKE_BUILD_TYPE=Release -DWITH_DOC=OFF ..
          make -j 4
          sudo make install

      - name: Update old version and test with current tests
        run: |
          sudo service postgresql start
          sudo -u postgres createdb -p 5432  ___pgr___test___
          DIR=$(git rev-parse --show-toplevel)
          pushd "${DIR}/tools/testers" > /dev/null || exit 1
          sudo -u postgres bash setup_db.sh 5432 ___pgr___test___ postgres "${{ matrix.old_pgr }}"
          sudo -u postgres psql -p 5432  -d ___pgr___test___ -c "SELECT * FROM pgr_full_version();"
          sudo -u postgres psql -p 5432  -d ___pgr___test___ -c "ALTER EXTENSION pgrouting UPDATE  TO '4.0.0';"
