name: Update


# manually triggered workflow
# - 10+ jobs created and continue to grow

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
        fail-fast: false
        matrix:
          old_pgr: [3.3.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.6, 3.1.0, 3.1.1, 3.1.2, 3.1.3, 3.2.0, 3.2.1, 3.2.1]

    steps:
      - uses: actions/checkout@v2

      - name: Get postgres version
        run: |
          sudo service postgresql start
          pgver=$(psql --version | grep -Po '(?<=psql \(PostgreSQL\) )[^;]+(?=\.\d \()')
          echo "PGVER=${pgver}" >> $GITHUB_ENV
          echo "PGIS=3" >> $GITHUB_ENV

      - name: Add PostgreSQL APT repository
        run: |
          sudo apt-get install curl ca-certificates gnupg
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ \
            $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libboost-graph-dev \
            libtap-parser-sourcehandler-pgtap-perl \
            postgresql-${PGVER} \
            postgresql-${PGVER}-pgtap \
            postgresql-${PGVER}-postgis-${PGIS} \
            postgresql-${PGVER}-postgis-${PGIS}-scripts \
            postgresql-server-dev-${PGVER}

          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: get old version
        uses: actions/checkout@v2
        with:
          repository: 'pgRouting/pgrouting'
          ref: "v${{ matrix.old_pgr }}"
          path: "v${{ matrix.old_pgr }}"

      - name: build old version
        run: |
          pushd  "v${{ matrix.old_pgr }}" || exit 1
          export PATH=/usr/lib/postgresql/${PGVER}/bin:$PATH
          mkdir build
          cd build || exit 1
          cmake -DPOSTGRESQL_VERSION=${PGVER} -DCMAKE_BUILD_TYPE=Release -DWITH_DOC=OFF ..
          make -j 4
          sudo make install
          sudo service postgresql start
          sudo -u postgres createdb -p 5432  ___pgr___test___
          sudo -u postgres psql -p 5432  -d ___pgr___test___ -c "CREATE EXTENSION pgrouting CASCADE;"

      - name: Test old version before update with current tests
        run: |
          sudo service postgresql start
          sudo -u postgres psql -p 5432  -d ___pgr___test___ -c "SELECT * FROM pgr_full_version();"
          DIR=$(git rev-parse --show-toplevel)
          pushd "${DIR}/tools/testers" > /dev/null || exit 1
          sudo -u postgres bash setup_db.sh 5432 ___pgr___test___ postgres "${{ matrix.old_pgr }}"
          sudo -u postgres pg_prove  -Q -f --normalize --directives --recurse --ext .sql -d ___pgr___test___ "../../pgtap"

      - name: Build current version
        run: |
          export PATH=/usr/lib/postgresql/${PGVER}/bin:$PATH
          mkdir build
          cd build
          cmake -DPOSTGRESQL_VERSION=${PGVER} -DCMAKE_BUILD_TYPE=Release -DWITH_DOC=OFF ..
          make -j 4
          sudo make install

      - name: Test old version with currrent tests after installing current
        run: |
          sudo service postgresql start
          sudo -u postgres psql -p 5432  -d ___pgr___test___ -c "SELECT * FROM pgr_full_version();"
          DIR=$(git rev-parse --show-toplevel)
          pushd "${DIR}/tools/testers" > /dev/null || exit 1
          sudo -u postgres bash setup_db.sh 5432 ___pgr___test___ postgres "${{ matrix.old_pgr }}"
          sudo -u postgres pg_prove  -Q -f --normalize --directives --recurse --ext .sql -d ___pgr___test___ "../../pgtap"

      - name: Test old version with current tests after update
        run: |
          sudo service postgresql start
          sudo -u postgres dropdb -p 5432  ___pgr___test___
          sudo -u postgres createdb -p 5432  ___pgr___test___
          DIR=$(git rev-parse --show-toplevel)
          pushd "${DIR}/tools/testers" > /dev/null || exit 1
          sudo -u postgres bash setup_db.sh 5432 ___pgr___test___ postgres "${{ matrix.old_pgr }}"
          sudo -u postgres psql -p 5432  -d ___pgr___test___ -c "ALTER EXTENSION pgrouting UPDATE  TO '3.4.0';"
          sudo -u postgres psql -p 5432  -d ___pgr___test___ -c "SELECT * FROM pgr_full_version();"
          sudo -u postgres pg_prove -Q -f --normalize --directives --recurse --ext .sql -d ___pgr___test___ "../../pgtap"

      - name: Test old version with current tests before update
        run: |
          sudo service postgresql start
          sudo -u postgres dropdb -p 5432  ___pgr___test___
          sudo -u postgres createdb -p 5432  ___pgr___test___
          DIR=$(git rev-parse --show-toplevel)
          pushd "${DIR}/tools/testers" > /dev/null || exit 1
          sudo -u postgres bash setup_db.sh 5432 ___pgr___test___ postgres "${{ matrix.old_pgr }}"
          sudo -u postgres psql -p 5432  -d ___pgr___test___ -c "SELECT * FROM pgr_full_version();"
          sudo -u postgres pg_prove -Q -f --normalize --directives --recurse --ext .sql -d ___pgr___test___ "../../pgtap"
