name: Check Documentation
# documentation is tested only on:
# - ubuntu-latest
# - default postgres installed on ubuntu-latest
# - postgis 3
# The corresponding language based on the PR commit message:
# - links
# - build Links
# - English is always tested

on: [push,pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
        fail-fast: false
        matrix:
          language: [de,en,es,ja]

    env:
        LANG_MSG: "in${{ matrix.language }}"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get commit message
        run: |
           PROCESS=${{ false }}
           if [[ $(git log --format=%B -n 2 | tr -d "'" | tr -d " " | grep -Po '(?<=\.po)[^;]+') == *"${LANG_MSG}"* ]]; then
             PROCESS=${{ true }}
           fi
           if [[ $(git log --format=%B -n 2 | tr -d "'" | tr -d " " | grep "\[${{ matrix.language }}\]") ]]; then
             PROCESS=${{ true }}
           fi
           if [[ "${{ matrix.language }}" == "en" ]]; then
             PROCESS=${{ true }}
           fi
           echo "PROCESS=${PROCESS}" >> $GITHUB_ENV

      - name: Get postgres version
        if: env.PROCESS == 'true'
        run: |
          sudo service postgresql start
          pgver=$(psql --version | grep -Po '(?<=psql \(PostgreSQL\) )[^;]+(?=\.\d \()')
          echo "PGVER=${pgver}" >> $GITHUB_ENV
          echo "PGIS=3" >> $GITHUB_ENV

      - name: Add PostgreSQL APT repository
        if: env.PROCESS == 'true'
        run: |
          sudo apt-get install curl ca-certificates gnupg
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ \
            $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

      - name: Install python
        if: env.PROCESS == 'true'
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        if: env.PROCESS == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libboost-graph-dev \
            postgresql-${PGVER} \
            postgresql-${PGVER}-postgis-${PGIS} \
            postgresql-${PGVER}-postgis-${PGIS}-scripts \
            postgresql-server-dev-${PGVER} \
            graphviz
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip list

      - name: Configure
        if: env.PROCESS == 'true'
        run: |
          export PATH=/usr/lib/postgresql/${PGVER}/bin:$PATH
          mkdir build
          cd build
          cmake -DLINKCHECK=ON -DHTML=ON -DWITH_DOC=ON \
                -DDE=ON -DES=ON -DFR=ON -DJA=ON -DIT=ON \
                -DPOSTGRESQL_VERSION=${PGVER} -DCMAKE_BUILD_TYPE=Release ..

      - name: Check Links
        if: env.PROCESS == 'true'
        run: |
          cd build
          make linkcheck-${{ matrix.language }}

      - name: Check Documentation
        if: env.PROCESS == 'true'
        run: |
          cd build
          make html-${{ matrix.language }}
