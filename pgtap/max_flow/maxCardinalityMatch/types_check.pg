
/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project@pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/
BEGIN;

SELECT CASE WHEN min_version('3.4.0') THEN plan(5) ELSE plan(2) END;

SELECT has_function('pgr_maxcardinalitymatch');

CREATE FUNCTION types_check()
RETURNS SETOF TEXT AS
$BODY$
BEGIN

    IF NOT min_version('3.4.0') THEN
      RETURN QUERY SELECT skip(1, 'pgr_maxCardinalityMatch testing only valid signatures on 4.0.0');
      RETURN;
    END IF;

    RETURN QUERY SELECT has_function('pgr_maxcardinalitymatch', ARRAY['text']);
    RETURN QUERY SELECT function_returns('pgr_maxcardinalitymatch', ARRAY['text'], 'setof bigint');

    IF min_version('4.0.0') THEN
      RETURN QUERY SELECT function_args_eq('pgr_maxcardinalitymatch',
        $$VALUES ('{"","edge"}'::TEXT[]) $$);

      RETURN QUERY SELECT function_types_eq('pgr_maxcardinalitymatch',
        $$VALUES ('{text,int8}'::TEXT[]) $$);

    ELSE

      RETURN QUERY SELECT function_args_has('pgr_maxcardinalitymatch',
        $$VALUES ('{"","edge"}'::TEXT[]) $$);

      RETURN QUERY SELECT function_types_has('pgr_maxcardinalitymatch',
        $$VALUES ('{text,int8}'::TEXT[]) $$);

    END IF;

END
$BODY$
LANGUAGE plpgsql VOLATILE;

SELECT types_check();
SELECT finish();
ROLLBACK;
