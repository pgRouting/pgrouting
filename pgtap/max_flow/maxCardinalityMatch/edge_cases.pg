BEGIN;

UPDATE edge_table SET cost = sign(cost), reverse_cost = sign(reverse_cost);
SELECT plan(6);

PREPARE noflag AS
SELECT * FROM pgr_maxCardinalityMatch(
  'SELECT id, source, target, cost, reverse_cost FROM edge_table'
);

PREPARE mcm_dir AS
SELECT * FROM pgr_maxCardinalityMatch(
  'SELECT id, source, target, cost, reverse_cost FROM edge_table',
  directed := true
);
PREPARE mcm_undir AS
SELECT * FROM pgr_maxCardinalityMatch(
  'SELECT id, source, target, cost, reverse_cost FROM edge_table',
  directed := false
);

PREPARE mcm_noflag AS
SELECT * FROM pgr_maxCardinalityMatch(
  'SELECT id, source, target, cost AS going, reverse_cost AS coming FROM edge_table'
);

PREPARE mcm_dir1 AS
SELECT * FROM pgr_maxCardinalityMatch(
  'SELECT id, source, target, cost AS going, reverse_cost AS coming FROM edge_table',
  directed := true
);
PREPARE mcm_undir1 AS
SELECT * FROM pgr_maxCardinalityMatch(
  'SELECT id, source, target, cost AS going, reverse_cost AS coming FROM edge_table',
  directed := false
);

SELECT CASE min_lib_version('3.4.0') WHEN true
THEN
  collect_tap(
    lives_ok('noflag','noflag'),
-- TODO v4 directed/undirected are to be removed, remove these tests
    lives_ok('mcm_dir','directed'),
    lives_ok('mcm_undir','undirected'))
ELSE
  skip('cost & reverse cost used on 3.4', 3)
END;

-- TODO v4 going & coming are to be removed, remove these tests
SELECT lives_ok('mcm_noflag','noflag');
SELECT lives_ok('mcm_dir1','directed');
SELECT lives_ok('mcm_undir1','undirected');

SELECT finish();
ROLLBACK;
