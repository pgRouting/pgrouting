
BEGIN;

SET client_min_messages TO WARNING;

SELECT plan(13);

SELECT has_function('pgr_maxflowmincost');


SELECT has_function('pgr_maxflowmincost', ARRAY['text','bigint','bigint']);
SELECT has_function('pgr_maxflowmincost', ARRAY['text','bigint','anyarray']);
SELECT has_function('pgr_maxflowmincost', ARRAY['text','anyarray','bigint']);
SELECT has_function('pgr_maxflowmincost', ARRAY['text','anyarray','anyarray']);

SELECT function_returns('pgr_maxflowmincost', ARRAY['text','bigint','bigint'],'setof record');
SELECT function_returns('pgr_maxflowmincost', ARRAY['text','bigint','anyarray'],'setof record');
SELECT function_returns('pgr_maxflowmincost', ARRAY['text','anyarray','bigint'],'setof record');
SELECT function_returns('pgr_maxflowmincost', ARRAY['text','anyarray','anyarray'],'setof record');

SELECT CASE
WHEN min_version('3.2.0') THEN
  collect_tap(
    has_function('pgr_maxflowmincost', ARRAY['text','text']),
    function_returns('pgr_maxflowmincost', ARRAY['text','text'],'setof record')
  )
ELSE
  skip(2, 'Combinations signature added on 3.1.0')
END;


SELECT CASE
WHEN min_version('3.2.0') THEN
  collect_tap(
    set_eq(
      $$SELECT  proargnames from pg_proc where proname = 'pgr_maxflowmincost'$$,
      $$VALUES
      ('{"","","","seq","edge","source","target","flow","residual_capacity","cost","agg_cost"}'::TEXT[]),
      ('{"","","","seq","edge","source","target","flow","residual_capacity","cost","agg_cost"}'::TEXT[]),
      ('{"","","","seq","edge","source","target","flow","residual_capacity","cost","agg_cost"}'::TEXT[]),
      ('{"","","","seq","edge","source","target","flow","residual_capacity","cost","agg_cost"}'::TEXT[]),
      ('{"","","seq","edge","source","target","flow","residual_capacity","cost","agg_cost"}'::TEXT[])
      $$),
    set_eq(
      $$SELECT  proallargtypes from pg_proc where proname = 'pgr_maxflowmincost'$$,
      $$VALUES
      ('{25,20,20,23,20,20,20,20,20,701,701}'::OID[]),
      ('{25,20,2277,23,20,20,20,20,20,701,701}'::OID[]),
      ('{25,2277,20,23,20,20,20,20,20,701,701}'::OID[]),
      ('{25,2277,2277,23,20,20,20,20,20,701,701}'::OID[]),
      ('{25,25,23,20,20,20,20,20,701,701}'::OID[])
      $$)
  )
ELSE
  collect_tap(
    set_eq(
      $$SELECT  proargnames from pg_proc where proname = 'pgr_maxflowmincost'$$,
      $$VALUES
      ('{"","","","seq","edge","source","target","flow","residual_capacity","cost","agg_cost"}'::TEXT[]),
      ('{"","","","seq","edge","source","target","flow","residual_capacity","cost","agg_cost"}'::TEXT[]),
      ('{"","","","seq","edge","source","target","flow","residual_capacity","cost","agg_cost"}'::TEXT[]),
      ('{"","","","seq","edge","source","target","flow","residual_capacity","cost","agg_cost"}'::TEXT[])
      $$),
    set_eq(
      $$SELECT  proallargtypes from pg_proc where proname = 'pgr_maxflowmincost'$$,
      $$VALUES
      ('{25,20,20,23,20,20,20,20,20,701,701}'::OID[]),
      ('{25,20,2277,23,20,20,20,20,20,701,701}'::OID[]),
      ('{25,2277,20,23,20,20,20,20,20,701,701}'::OID[]),
      ('{25,2277,2277,23,20,20,20,20,20,701,701}'::OID[])
      $$)
  )
END;

SELECT finish();
ROLLBACK;
