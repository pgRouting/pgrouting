BEGIN;

UPDATE edge_table SET cost = sign(cost), reverse_cost = sign(reverse_cost);
SELECT plan(14);

SELECT has_function('pgr_maxflow');

SELECT has_function('pgr_maxflow', ARRAY[ 'text', 'bigint', 'bigint' ]);
SELECT has_function('pgr_maxflow', ARRAY[ 'text', 'anyarray', 'bigint' ]);
SELECT has_function('pgr_maxflow', ARRAY[ 'text', 'bigint', 'anyarray' ]);
SELECT has_function('pgr_maxflow', ARRAY[ 'text', 'anyarray', 'anyarray' ]);

SELECT function_returns('pgr_maxflow', ARRAY[ 'text', 'bigint', 'bigint' ], 'bigint');
SELECT function_returns('pgr_maxflow', ARRAY[ 'text', 'bigint', 'anyarray' ], 'bigint');
SELECT function_returns('pgr_maxflow', ARRAY[ 'text', 'anyarray', 'bigint' ], 'bigint');
SELECT function_returns('pgr_maxflow', ARRAY[ 'text', 'anyarray', 'anyarray' ], 'bigint');

SELECT CASE
WHEN min_version('3.2.0') THEN
  collect_tap(
    has_function('pgr_maxflow', ARRAY['text','text']),
    function_returns('pgr_maxflow', ARRAY['text','text'],'bigint')
  )
ELSE
  skip(2, 'Combinations signature added on 3.1.0')
END;

SELECT set_eq(
  $$SELECT  proargnames FROM pg_proc WHERE proname = 'pgr_maxflow'$$,
  $$SELECT  NULL::TEXT[] $$);

SELECT set_eq(
  $$SELECT  prorettype FROM pg_proc WHERE proname = 'pgr_maxflow'$$,
  $$SELECT  20::OID $$);

SELECT CASE
  WHEN min_version('3.2.0') THEN
    set_eq(
      $$SELECT  array(SELECT unnest(proargtypes)) FROM pg_proc WHERE proname = 'pgr_maxflow'$$,
      $$VALUES
      ('{25,25}'::OID[]),
      ('{25,20,20}'::OID[]),
      ('{25,20,2277}'::OID[]),
      ('{25,2277,20}'::OID[]),
      ('{25,2277,2277}'::OID[])
      $$
    )
  ELSE
    set_eq(
      $$SELECT  array(SELECT unnest(proargtypes)) FROM pg_proc WHERE proname = 'pgr_maxflow'$$,
      $$VALUES
      ('{25,20,20}'::OID[]),
      ('{25,20,2277}'::OID[]),
      ('{25,2277,20}'::OID[]),
      ('{25,2277,2277}'::OID[])
      $$)
  END;

SELECT finish();
ROLLBACK;
