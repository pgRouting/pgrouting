/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project@pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/

BEGIN;
SELECT CASE WHEN min_version('3.8.0') THEN plan(7) ELSE plan(5) END;

CREATE OR REPLACE FUNCTION types_check()
RETURNS SETOF TEXT AS
$BODY$
BEGIN

  IF min_version('3.8.0') THEN
    RETURN QUERY SELECT has_function('pgr_contraction', ARRAY['text','boolean','integer[]','integer','bigint[]']);
    RETURN QUERY SELECT function_returns('pgr_contraction', ARRAY['text','boolean','integer[]','integer','bigint[]'], 'setof record');

    RETURN QUERY SELECT set_eq(
      $$SELECT proargnames FROM pg_proc WHERE proname = 'pgr_contraction'$$,
      $$VALUES
      ('{"","",max_cycles,forbidden_vertices,directed,type,id,contracted_vertices,source,target,cost}'::TEXT[]),
      ('{"",directed,methods,cycles,forbidden,type,id,contracted_vertices,source,target,cost}'::TEXT[])
      $$,'pgr_contraction: Column names');

    RETURN QUERY SELECT function_types('pgr_contraction',
      $$VALUES ('{text,bool,_int4,int4,_int8,text,int8,_int8,int8,int8,float8}'::TEXT[]),
        ('{text,_int8,int4,_int8,bool,text,int8,_int8,int8,int8,float8}'::TEXT[]) $$);

  ELSE

    RETURN QUERY SELECT set_eq(
      $$SELECT proargnames FROM pg_proc WHERE proname = 'pgr_contraction'$$,
      $$VALUES
      ('{"", "", "max_cycles", "forbidden_vertices", "directed", "type", "id", "contracted_vertices", "source", "target", "cost"}'::TEXT[])
      $$);

    RETURN QUERY SELECT set_eq(
      $$SELECT  proallargtypes from pg_proc where proname = 'pgr_contraction'$$,
      $$SELECT  '{25,1016,23,1016,16,25,20,1016,20,20,701}'::OID[] $$
    );

END IF;

END;
$BODY$
LANGUAGE plpgsql;

SELECT has_function('pgr_contraction');
SELECT has_function('pgr_contraction', ARRAY['text','bigint[]','integer','bigint[]','boolean']);
SELECT function_returns('pgr_contraction', ARRAY['text', 'bigint[]','integer','bigint[]','boolean'], 'setof record');
SELECT types_check();

SELECT finish();
ROLLBACK;
