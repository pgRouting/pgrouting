BEGIN;

SELECT CASE WHEN min_version('3.4.0') THEN plan(1156) ELSE plan(1) END;
SET extra_float_digits = -3;
UPDATE edge_table SET cost = sign(cost) + 0.001 * id * id, reverse_cost = sign(reverse_cost) + 0.001 * id * id;

CREATE or REPLACE FUNCTION compareDijkstra(cant INTEGER default 17)
RETURNS SETOF TEXT AS
$BODY$
DECLARE
inner_sql TEXT;
empty_points TEXT;
empty_restrictions TEXT;
with_reverse TEXT;
no_reverse TEXT;
dijkstra_sql TEXT;
trsp_sql TEXT;
result_columns TEXT;
BEGIN
  IF NOT min_version('3.4.0') THEN
    RETURN QUERY SELECT skip(1, 'Signature added on 3.4.0');
    RETURN;
  END IF;

  result_columns := 'seq, path_seq, node, edge, cost, agg_cost';
  empty_points := 'SELECT * FROM pointsofinterest WHERE pid IN (-1)';
  empty_restrictions := 'SELECT * FROM restrictions WHERE id > 10';
  with_reverse := 'SELECT * FROM edge_table';
  no_reverse := 'SELECT id, source, target, cost FROM edge_table';

  FOR i IN 1.. cant LOOP
    FOR j IN 1.. cant LOOP

      dijkstra_sql := 'SELECT ' || result_columns || ' FROM pgr_dijkstra($$' || with_reverse || '$$, '
        || i || ', ' || j || ', directed => true)';
      trsp_sql := 'SELECT ' || result_columns || ' FROM pgr_trsp_withPoints($$' || with_reverse || '$$, $$'
        || empty_restrictions || '$$, $$' || empty_points || '$$, '
        || i || ', ' || j || ', directed => true)';
      RETURN query SELECT set_eq(trsp_sql, dijkstra_sql, trsp_sql);

      dijkstra_sql := 'SELECT ' || result_columns || ' FROM pgr_dijkstra($$' || with_reverse || '$$, '
        || i || ', ' || j || ', directed => false)';
      trsp_sql := 'SELECT ' || result_columns || ' FROM pgr_trsp_withPoints($$' || with_reverse || '$$, $$'
        || empty_restrictions || '$$, $$' || empty_points || '$$, '
        || i || ', ' || j || ', directed => false)';
      RETURN query SELECT set_eq(trsp_sql, dijkstra_sql, trsp_sql);

      dijkstra_sql := 'SELECT ' || result_columns || ' FROM pgr_dijkstra($$' || no_reverse || '$$, '
        || i || ', ' || j || ', directed => true)';
      trsp_sql := 'SELECT ' || result_columns || ' FROM pgr_trsp_withPoints($$' || no_reverse || '$$, $$'
        || empty_restrictions || '$$, $$' || empty_points || '$$, '
        || i || ', ' || j || ', directed => true)';
      RETURN query SELECT set_eq(trsp_sql, dijkstra_sql, trsp_sql);

      dijkstra_sql := 'SELECT ' || result_columns || ' FROM pgr_dijkstra($$' || no_reverse || '$$, '
        || i || ', ' || j || ', directed => false)';
      trsp_sql := 'SELECT ' || result_columns || ' FROM pgr_trsp_withPoints($$' || no_reverse || '$$, $$'
        || empty_restrictions || '$$, $$' || empty_points || '$$, '
        || i || ', ' || j || ', directed => false)';
      RETURN query SELECT set_eq(trsp_sql, dijkstra_sql, trsp_sql);

      END LOOP;
  END LOOP;

  RETURN;
END
$BODY$
language plpgsql;

SELECT * from compareDijkstra();


SELECT * FROM finish();
ROLLBACK;

