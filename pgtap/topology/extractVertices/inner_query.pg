
/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project@pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/
BEGIN;

SET client_min_messages TO WARNING;
UPDATE edge_table SET cost = sign(cost), reverse_cost = sign(reverse_cost);
SELECT plan(84);

CREATE OR REPLACE FUNCTION style_extract_normal(fn TEXT, rest_sql TEXT)
RETURNS SETOF TEXT AS
$BODY$
BEGIN

--with id
RETURN QUERY SELECT test_anyInteger(fn, rest_sql,
    ARRAY['id', 'source', 'target'],
    'id');
RETURN QUERY SELECT test_anyInteger(fn, rest_sql,
    ARRAY['id', 'the_geom AS geom'],
    'id');

RETURN QUERY SELECT test_anyInteger(fn, rest_sql,
    ARRAY['id', 'ST_StartPoint(the_geom) AS startpoint, ST_ENDPoint(the_geom) AS endpoint'],
    'id');

RETURN QUERY SELECT test_anyInteger(fn, rest_sql,
    ARRAY['id', 'source', 'target'],
    'source');
RETURN QUERY SELECT test_anyInteger(fn, rest_sql,
    ARRAY['id', 'source', 'target'],
    'target');

--with out id
RETURN QUERY SELECT test_anyInteger(fn, rest_sql,
    ARRAY['source', 'target'],
    'source');
RETURN QUERY SELECT test_anyInteger(fn, rest_sql,
    ARRAY['source', 'target'],
    'target');
END;
$BODY$
LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION style_extract_dryrun(fn TEXT, rest_sql TEXT)
RETURNS SETOF TEXT AS
$BODY$
BEGIN

--with id
RETURN QUERY SELECT test_anyNumerical(fn, rest_sql,
    ARRAY['id', 'source', 'target'],
    'id');
RETURN QUERY SELECT test_anyNumerical(fn, rest_sql,
    ARRAY['id', 'the_geom AS geom'],
    'id');

RETURN QUERY SELECT test_anyNumerical(fn, rest_sql,
    ARRAY['id', 'ST_StartPoint(the_geom) AS startpoint, ST_ENDPoint(the_geom) AS endpoint'],
    'id');

RETURN QUERY SELECT test_anyNumerical(fn, rest_sql,
    ARRAY['id', 'source', 'target'],
    'source');
RETURN QUERY SELECT test_anyNumerical(fn, rest_sql,
    ARRAY['id', 'source', 'target'],
    'target');

--with out id
RETURN QUERY SELECT test_anyNumerical(fn, rest_sql,
    ARRAY['source', 'target'],
    'source');
RETURN QUERY SELECT test_anyNumerical(fn, rest_sql,
    ARRAY['source', 'target'],
    'target');
END;
$BODY$
LANGUAGE plpgsql;


SELECT style_extract_normal('pgr_extractVertices(', ')');
SELECT style_extract_dryrun('pgr_extractVertices(', ', true)');

SELECT finish();
ROLLBACK;
