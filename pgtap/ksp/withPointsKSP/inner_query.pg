
/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project@pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/
BEGIN;

UPDATE edge_table SET cost = sign(cost), reverse_cost = sign(reverse_cost);
SELECT CASE WHEN min_version('3.6.0') THEN plan(516) ELSE plan(84) END;

CREATE OR REPLACE FUNCTION withPointsKSP_inner_query() RETURNS SETOF TEXT AS
$BODY$
BEGIN
  IF min_version('3.6.0') THEN
    -- ONE TO ONE
    RETURN QUERY SELECT style_dijkstra('pgr_withPointsKSP(', ', $$SELECT * from pointsOfInterest$$, 2, 3, 1, $$r$$,true)');
    RETURN QUERY SELECT innerquery_points('pgr_withPointsKSP($$SELECT * FROM edge_table$$,', ', 2, 3, 1, $$l$$, true)');
    -- ONE TO MANY
    RETURN QUERY SELECT style_dijkstra('pgr_withPointsKSP(', ', $$SELECT * from pointsOfInterest$$, 2, ARRAY[3], 1, $$r$$, true)');
    RETURN QUERY SELECT innerquery_points('pgr_withPointsKSP($$SELECT * FROM edge_table$$,', ', 2, ARRAY[3], 1, $$l$$, true)');
    -- MANY TO ONE
    RETURN QUERY SELECT style_dijkstra('pgr_withPointsKSP(', ', $$SELECT * from pointsOfInterest$$, ARRAY[2], 3, 2, $$r$$, true)');
    RETURN QUERY SELECT innerquery_points('pgr_withPointsKSP($$SELECT * FROM edge_table$$,', ', ARRAY[2], 3, 2, $$l$$, true)');
    -- MANY TO MANY
    RETURN QUERY SELECT style_dijkstra('pgr_withPointsKSP(', ', $$SELECT * from pointsOfInterest$$, ARRAY[2], ARRAY[3], 2, $$l$$, true)');
    RETURN QUERY SELECT innerquery_points('pgr_withPointsKSP($$SELECT * FROM edge_table$$,', ', ARRAY[2], ARRAY[3],  2, $$l$$, true)');
    -- COMBINATIONS
    RETURN QUERY SELECT style_dijkstra('pgr_withPointsKSP(', ', $$SELECT * from pointsOfInterest$$, $$SELECT * FROM combinations_table$$, 2, $$r$$, true)');
    RETURN QUERY SELECT innerquery_points('pgr_withPointsKSP($$SELECT * FROM edge_table$$,', ', $$SELECT * FROM combinations_table$$, 2, $$r$$, true)');
    RETURN QUERY SELECT innerquery_combinations('pgr_withPointsKSP($$SELECT * FROM edge_table$$, $$SELECT * from pointsOfInterest$$,',', 2, $$r$$, true)');
  END IF;
  /* TODO Remove on v4*/
  SET client_min_messages TO ERROR;
  -- ONE TO ONE
  RETURN QUERY SELECT style_dijkstra('pgr_withPointsKSP(', ', $$SELECT * from pointsOfInterest$$, 2, 3, 2, true)');
  RETURN QUERY SELECT innerquery_points('pgr_withPointsKSP($$SELECT * FROM edge_table$$,', ', 2, 3, 2, true)');
END
$BODY$
LANGUAGE plpgsql VOLATILE;

SELECT withPointsKSP_inner_query();
SELECT finish();
ROLLBACK;
