
/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project@pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/

BEGIN;

SELECT CASE WHEN min_version('4.0.0') THEN plan(5) ELSE plan(4) END;

CREATE or REPLACE FUNCTION types_check()
RETURNS SETOF TEXT AS
$BODY$
BEGIN

  RETURN QUERY SELECT has_function('pgr_turnrestrictedpath');
  RETURN QUERY SELECT has_function('pgr_turnrestrictedpath',ARRAY['text','text','bigint','bigint','integer','boolean','boolean','boolean','boolean']);
  RETURN QUERY SELECT function_returns('pgr_turnrestrictedpath',ARRAY['text','text','bigint','bigint','integer','boolean','boolean','boolean','boolean'],'setof record');

  IF NOT min_version('4.0.0') THEN
    RETURN QUERY SELECT skip(1, 'pgr_turnrestrictedpath: testing only signatures standardaized in v4.0.0.');
    RETURN;
  END IF;

  RETURN QUERY SELECT function_args_eq('pgr_turnrestrictedpath',
    $$SELECT  '{"","","","","",directed,heap_paths,stop_on_first,strict,seq,path_id,path_seq,start_vid,end_vid,node,edge,cost,agg_cost}'::TEXT[] $$
  );

  RETURN QUERY SELECT function_types_eq('pgr_turnrestrictedpath',
    $$VALUES ('{text,text,int8,int8,int4,bool,bool,bool,bool,int4,int4,int4,int8,int8,int8,int8,float8,float8}'::TEXT[])$$
  );

END;
$BODY$
language plpgsql;

SELECT types_check();
SELECT finish();
ROLLBACK;
