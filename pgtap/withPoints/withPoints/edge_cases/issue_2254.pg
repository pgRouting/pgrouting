BEGIN;

SELECT CASE WHEN NOT min_version('3.4.0') THEN plan(1) ELSE plan(5) END;

CREATE OR REPLACE FUNCTION issue_check()
RETURNS SETOF TEXT AS
$BODY$
BEGIN

IF NOT min_version('3.4.0') THEN
  RETURN QUERY SELECT skip(1,'Issue fixed on 3.4.0');
  RETURN;
END IF;

CREATE TABLE e_table (id integer, source integer, target integer, cost float);
INSERT INTO e_table VALUES (1, 10, 11, 10.0);

CREATE TABLE poi_table (pid integer, edge_id integer, fraction float);
INSERT INTO poi_table VALUES (20, 1, 0.6);

PREPARE q1 AS
SELECT * FROM   pgr_withPoints(
'SELECT id, source, target, cost FROM e_table',
'SELECT pid, edge_id, fraction FROM poi_table',
    10,
    11,
    false);

RETURN QUERY
SELECT * FROM lives_ok('q1');
RETURN QUERY
SELECT * FROM isnt_empty('q1');

PREPARE q2 AS
SELECT *
FROM   pgr_withPoints(
'SELECT id, source, target, cost FROM e_table',
'SELECT pid, edge_id, fraction FROM poi_table WHERE pid != 20',
    10,
    11,
    false);

RETURN QUERY
SELECT * FROM lives_ok('q2');
RETURN QUERY
SELECT * FROM isnt_empty('q2');

RETURN QUERY
SELECT * FROM set_eq('q1','q2');

END;
$BODY$
LANGUAGE plpgsql;

SELECT issue_check();

SELECT finish();
ROLLBACK;
