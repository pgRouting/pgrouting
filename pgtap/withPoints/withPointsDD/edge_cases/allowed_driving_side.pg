/*PGR-GNU*****************************************************************

Copyright (c) 2023  pgRouting developers
Mail: project at pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/

BEGIN;

SELECT plan(16);

CREATE OR REPLACE FUNCTION test_cases()
RETURNS SETOF TEXT AS
$BODY$
BEGIN

-- everything lives as it gets a default
-- directed r, R
RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'r', directed => true)$$, 'old lives: directed right');

RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'R', directed => true)$$, 'old lives: directed Right');

-- directed l, L
RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'l', directed => true)$$, 'old lives: directed left');

RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'L', directed => true)$$, 'old lives: directed Left');

-- directed b, B
RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'b', directed => true)$$, 'old lives: directed both');

RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'B', directed => true)$$, 'old lives: directed Both');

-- directed Invalid
RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'i', directed => true)$$, 'old lives: directed invalid');

RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'I', directed => true)$$, 'old lives: directed Invalid');

-- undirected r, R
RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'r', directed => false)$$, 'old lives: undirected right');

RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'R', directed => false)$$, 'old lives: undirected Right');

-- undirected l, L
RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'l', directed => false)$$, 'old lives: undirected left');

RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'L', directed => false)$$, 'old lives: undirected Left');

-- undirected b, B
RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'b', directed => false)$$, 'old lives: undirected both');

RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'B', directed => false)$$, 'old lives: undirected Both');

-- undirected Invalid
RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'i', directed => false)$$, 'old lives: undirected invalid');

RETURN QUERY SELECT lives_ok($$
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edges ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side => 'I', directed => false)$$, 'old lives: undirected Invalid');

END;
$BODY$
language plpgsql;

SELECT test_cases();
SELECT finish();
ROLLBACK;
