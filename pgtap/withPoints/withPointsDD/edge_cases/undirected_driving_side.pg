
/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project@pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/

BEGIN;

SELECT PLAN(3);


-- because the graph is undirected, It will not matter the side of the point

--- UNDIRECTED GRAPH
---


-------- both driving sides
PREPARE q1 AS
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side := 'b', details := true, directed:=false)
ORDER BY seq;

-------- right driving side

PREPARE q2 AS
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side := 'r', details := true, directed:=false)
ORDER BY seq;


-------- left driving side

PREPARE q3 AS
SELECT seq, node, edge, cost::TEXT, agg_cost::TEXT FROM pgr_withPointsDD(
    'SELECT id, source, target, cost, reverse_cost FROM edge_table ORDER BY id',
    'SELECT pid, edge_id, fraction, side from pointsOfInterest',
    -1, 4.8, driving_side := 'l', details := true, directed:=false)
ORDER BY seq;


SELECT set_eq('q1', 'q2',
    'Should be equal: both driving sides with right driving side');

SELECT set_eq('q1', 'q3',
    'Should be equal: both driving sides with left driving side');

SELECT set_eq('q2', 'q3',
    'Should be equal: right driving sides with left driving side');

SELECT * FROM finish();
ROLLBACK;
