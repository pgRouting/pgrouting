
/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project at pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/
BEGIN;

SELECT CASE WHEN min_version('3.6.0') THEN plan(7) ELSE plan(2) END;

SELECT has_function('pgr_withpointsdd');

CREATE OR REPLACE FUNCTION test_types_check()
RETURNS SETOF TEXT AS
$BODY$
BEGIN

    IF NOT min_version('3.6.0') THEN
      RETURN QUERY SELECT skip(1, 'pgr_withPointsDD testing only valid signatures on 4.0.0');
      RETURN;
    END IF;

RETURN QUERY
SELECT has_function('pgr_withpointsdd', ARRAY['text','text','bigint','double precision','character','boolean','boolean']);
RETURN QUERY
SELECT has_function('pgr_withpointsdd', ARRAY['text','text','anyarray','double precision','character','boolean','boolean','boolean']);

RETURN QUERY
SELECT function_returns('pgr_withpointsdd', ARRAY['text','text','bigint','double precision','character','boolean','boolean'],'setof record');
RETURN QUERY
SELECT function_returns('pgr_withpointsdd', ARRAY['text','text','anyarray','double precision','character','boolean','boolean','boolean'],'setof record');

IF min_version('4.0.0') THEN
RETURN QUERY
SELECT function_args_eq('pgr_withpointsdd',
    $$VALUES
    ('{"","","","","","directed","details","seq","depth","start_vid","pred","node","edge","cost","agg_cost"}'::TEXT[]),
    ('{"","","","","","directed","details","equicost","seq","depth","start_vid","pred","node","edge","cost","agg_cost"}')
    $$);

RETURN QUERY
SELECT function_types_eq('pgr_withpointsdd',
    $$VALUES
    ('{text,text,anyarray,float8,bpchar,bool,bool,bool,int8,int8,int8,int8,int8,int8,float8,float8}'::TEXT[]),
    ('{text,text,int8,float8,bpchar,bool,bool,int8,int8,int8,int8,int8,int8,float8,float8}')
    $$);

ELSE

RETURN QUERY
SELECT function_args_has('pgr_withpointsdd',
    $$VALUES
    ('{"","","","","","directed","details","seq","depth","start_vid","pred","node","edge","cost","agg_cost"}'::TEXT[]),
    ('{"","","","","","directed","details","equicost","seq","depth","start_vid","pred","node","edge","cost","agg_cost"}')
    $$);

RETURN QUERY
SELECT function_types_has('pgr_withpointsdd',
    $$VALUES
    ('{text,text,anyarray,float8,bpchar,bool,bool,bool,int8,int8,int8,int8,int8,int8,float8,float8}'::TEXT[]),
    ('{text,text,int8,float8,bpchar,bool,bool,int8,int8,int8,int8,int8,int8,float8,float8}')
    $$);
END IF;

END;
$BODY$
language plpgsql;

SELECT test_types_check();

SELECT finish();
ROLLBACK;
