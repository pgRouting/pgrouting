
/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project@pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/
BEGIN;

UPDATE edge_table SET cost = sign(cost), reverse_cost = sign(reverse_cost);
SELECT CASE WHEN min_version('3.2.0') THEN plan(228) ELSE plan(1) END;


CREATE OR REPLACE FUNCTION inner_query() RETURNS SETOF TEXT AS
$BODY$
BEGIN
  IF min_version('3.2.0') THEN
    -- ONE TO MANY
    RETURN QUERY SELECT style_dijkstra('pgr_dijkstraNearCost(', ', 2, ARRAY[3], true)');
    -- MANY TO ONE
    RETURN QUERY SELECT style_dijkstra('pgr_dijkstraNearCost(', ', ARRAY[2], 3, true)');
    -- MANY TO MANY
    RETURN QUERY SELECT style_dijkstra('pgr_dijkstraNearCost(', ', ARRAY[2], ARRAY[3], true)');
    -- COMBINATIONS
    RETURN QUERY SELECT style_dijkstra('pgr_dijkstraNearCost(', ', $$SELECT * FROM combinations_table$$, true)');
    RETURN QUERY SELECT innerquery_combinations('pgr_dijkstraNearCost($$SELECT * FROM edge_table$$,',', true)');

  ELSE

    RETURN QUERY SELECT skip(1, 'Function is new on 3.2.0');
  END IF;
END
$BODY$
LANGUAGE plpgsql VOLATILE;

SELECT inner_query();

SELECT finish();
ROLLBACK;
