BEGIN;

UPDATE edge_table SET cost = sign(cost), reverse_cost = sign(reverse_cost);
SELECT CASE WHEN min_version('3.1.0') THEN plan(282) ELSE plan(218) END;


-- ONE TO ONE
SELECT style_dijkstra('pgr_dijkstraCost(', ', 2, 3, true)');
-- ONE TO MANY
SELECT style_dijkstra('pgr_dijkstraCost(', ', 2, ARRAY[3], true)');
-- MANY TO ONE
SELECT style_dijkstra('pgr_dijkstraCost(', ', ARRAY[2], 3, true)');
-- MANY TO MANY
SELECT style_dijkstra('pgr_dijkstraCost(', ', ARRAY[2], ARRAY[3], true)');

-- COMBINATIONS
CREATE OR REPLACE FUNCTION inner_query() RETURNS SETOF TEXT AS
$BODY$
BEGIN
  IF min_version('3.1.0') THEN
    RETURN QUERY SELECT style_dijkstra('pgr_dijkstraCost(', ', $$SELECT * FROM combinations_table$$, true)');
    RETURN QUERY SELECT innerquery_combinations('pgr_dijkstraCost($$SELECT * FROM edge_table$$,',', true)');
  ELSE
    RETURN QUERY SELECT skip(2, 'Combinations signature added on 3.1.0');
  END IF;
END
$BODY$
LANGUAGE plpgsql VOLATILE;

SELECT inner_query();

SELECT finish();
ROLLBACK;
