BEGIN;

UPDATE edge_table SET cost = sign(cost), reverse_cost = sign(reverse_cost);
SELECT CASE WHEN min_version('3.2.0') THEN plan(228) ELSE plan(1) END;


CREATE OR REPLACE FUNCTION inner_query() RETURNS SETOF TEXT AS
$BODY$
BEGIN
  IF min_version('3.2.0') THEN
    -- ONE TO MANY
    RETURN QUERY SELECT style_dijkstra('pgr_dijkstraNear(', ', 2, ARRAY[3], true)');
    -- MANY TO ONE
    RETURN QUERY SELECT style_dijkstra('pgr_dijkstraNear(', ', ARRAY[2], 3, true)');
    -- MANY TO MANY
    RETURN QUERY SELECT style_dijkstra('pgr_dijkstraNear(', ', ARRAY[2], ARRAY[3], true)');
    -- COMBINATIONS
    RETURN QUERY SELECT style_dijkstra('pgr_dijkstraNear(', ', $$SELECT * FROM combinations_table$$, true)');
    RETURN QUERY SELECT innerquery_combinations('pgr_dijkstraNear($$SELECT * FROM edge_table$$,',', true)');

  ELSE

    RETURN QUERY SELECT skip(1, 'Function is new on 3.2.0');
  END IF;
END
$BODY$
LANGUAGE plpgsql VOLATILE;

SELECT inner_query();

SELECT finish();
ROLLBACK;
