
/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project@pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/
BEGIN;

SELECT CASE WHEN min_version('3.4.0') THEN plan(7) ELSE plan(1) END;

CREATE OR REPLACE FUNCTION types_check() RETURNS SETOF TEXT AS
$BODY$
BEGIN
  IF NOT min_version('3.4.0') THEN
    RETURN QUERY SELECT skip(1, 'Function added on 3.4.0');
    RETURN;
  END IF;

  RETURN QUERY
  SELECT has_function('pgr_findcloseedges');
  RETURN QUERY
  SELECT has_function('pgr_findcloseedges', ARRAY['text', 'geometry','double precision','integer','boolean','boolean']);
  RETURN QUERY
  SELECT has_function('pgr_findcloseedges', ARRAY['text', 'geometry[]','double precision','integer','boolean','boolean']);
  RETURN QUERY
  SELECT function_returns('pgr_findcloseedges',
    ARRAY['text', 'geometry','double precision','integer','boolean','boolean'],'setof record');
  RETURN QUERY
  SELECT function_returns('pgr_findcloseedges',
    ARRAY['text', 'geometry[]','double precision','integer','boolean','boolean'],'setof record');

  IF min_version('3.8.0') THEN

    RETURN QUERY SELECT bag_eq(
      $$SELECT  proargnames from pg_proc where proname = 'pgr_findcloseedges'$$,
      $$VALUES
        ('{"","","","cap","dryrun","edge_id","fraction","side","distance","geom","edge"}'::TEXT[]),
        ('{"","","","cap","dryrun","edge_id","fraction","side","distance","geom","edge"}'::TEXT[]),
        ('{"","","","cap","partial","dryrun","edge_id","fraction","side","distance","geom","edge"}'::TEXT[]),
        ('{"","","","cap","partial","dryrun","edge_id","fraction","side","distance","geom","edge"}'::TEXT[])
      $$,
      'proargnames');

    RETURN QUERY
    SELECT function_types('pgr_findcloseedges',
      $$ VALUES
      ('{text,_geometry,float8,int4,bool,int8,float8,bpchar,float8,geometry,geometry}'::TEXT[]),
      ('{text,geometry,float8,int4,bool,int8,float8,bpchar,float8,geometry,geometry}'::TEXT[]),
      ('{text,geometry,float8,int4,bool,bool,int8,float8,bpchar,float8,geometry,geometry}'::TEXT[]),
      ('{text,_geometry,float8,int4,bool,bool,int8,float8,bpchar,float8,geometry,geometry}'::TEXT[])
      $$);

  ELSE

    RETURN QUERY SELECT bag_eq(
      $$SELECT  proargnames from pg_proc where proname = 'pgr_findcloseedges'$$,
      $$VALUES
        ('{"","","","cap","partial","dryrun","edge_id","fraction","side","distance","geom","edge"}'::TEXT[]),
        ('{"","","","cap","partial","dryrun","edge_id","fraction","side","distance","geom","edge"}'::TEXT[])
      $$,
      'proargnames');

    RETURN QUERY
    SELECT function_types('pgr_findcloseedges',
      $$ VALUES
      ('{text,geometry,float8,int4,bool,bool,int8,float8,bpchar,float8,geometry,geometry}'::TEXT[]),
      ('{text,_geometry,float8,int4,bool,bool,int8,float8,bpchar,float8,geometry,geometry}'::TEXT[])
      $$);

  END IF;

END
$BODY$
LANGUAGE plpgsql VOLATILE;

SELECT types_check();

SELECT  finish();
ROLLBACK;
