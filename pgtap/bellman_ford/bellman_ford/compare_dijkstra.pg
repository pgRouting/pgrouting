
/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project@pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/
BEGIN;

SELECT plan(1300);

UPDATE edge_table SET cost = sign(cost) + 0.001 * id * id, reverse_cost = sign(reverse_cost) + 0.001 * id * id;

CREATE or REPLACE FUNCTION bellman_ford_compare_dijkstra(cant INTEGER default 17)
RETURNS SETOF TEXT AS
$BODY$
DECLARE
inner_sql TEXT;
dijkstra_sql TEXT;
bellman_ford_sql TEXT;
BEGIN

  IF min_version('3.5.0') THEN
    -- v3.5.0+
    RETURN QUERY SELECT compare_dijkstra_one_one('pgr_bellmanFord', true, 'seq, path_seq, node, edge, cost, agg_cost');
    RETURN QUERY SELECT compare_dijkstra_one_one('pgr_bellmanFord', false, 'seq, path_seq, node, edge, cost, agg_cost');
    RETURN QUERY SELECT compare_dijkstra_one_many('pgr_bellmanFord', true, 'seq, path_seq, end_vid, node, edge, cost, agg_cost');
    RETURN QUERY SELECT compare_dijkstra_one_many('pgr_bellmanFord', false, 'seq, path_seq, end_vid, node, edge, cost, agg_cost');
    RETURN QUERY SELECT compare_dijkstra_many_one('pgr_bellmanFord', true, 'seq, path_seq, start_vid, node, edge, cost, agg_cost');
    RETURN QUERY SELECT compare_dijkstra_many_one('pgr_bellmanFord', false, 'seq, path_seq, start_vid, node, edge, cost, agg_cost');
    RETURN QUERY SELECT compare_dijkstra_many_many('pgr_bellmanFord', true);
    RETURN QUERY SELECT compare_dijkstra_many_many('pgr_bellmanFord', false);
    RETURN QUERY SELECT compare_dijkstra_combinations('pgr_bellmanFord', true);
    RETURN QUERY SELECT compare_dijkstra_combinations('pgr_bellmanFord', false);
    RETURN;

  END IF;

  -- All These tests should work when pgr_bellmanFord 's output is standarized

  RETURN QUERY SELECT compare_dijkstra_one_one('pgr_bellmanFord', true);
  RETURN QUERY SELECT compare_dijkstra_one_one('pgr_bellmanFord', false);
  IF min_version('3.1.1') THEN
    RETURN QUERY SELECT compare_dijkstra_one_many('pgr_bellmanFord', true);
    RETURN QUERY SELECT compare_dijkstra_one_many('pgr_bellmanFord', false);
    RETURN QUERY SELECT compare_dijkstra_many_one('pgr_bellmanFord', true);
    RETURN QUERY SELECT compare_dijkstra_many_one('pgr_bellmanFord', false);
    RETURN QUERY SELECT compare_dijkstra_many_many('pgr_bellmanFord', true);
    RETURN QUERY SELECT compare_dijkstra_many_many('pgr_bellmanFord', false);
  ELSE
    RETURN QUERY SELECT skip(140, 'Something changed on version 3.1.1');
  END IF;

  IF min_version('3.2.0') THEN
    RETURN QUERY SELECT compare_dijkstra_combinations('pgr_bellmanFord', true);
    RETURN QUERY SELECT compare_dijkstra_combinations('pgr_bellmanFord', false);
  ELSE
    RETURN QUERY SELECT skip(4, 'Combinations signature added on version 3.2.0');
  END IF;

END
$BODY$
language plpgsql;

SELECT * from bellman_ford_compare_dijkstra();


SELECT * FROM finish();
ROLLBACK;
