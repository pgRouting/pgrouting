/*PGR-GNU*****************************************************************

Copyright (c) 2018  pgRouting developers
Mail: project@pgrouting.org

------
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ********************************************************************PGR-GNU*/

BEGIN;

SELECT CASE WHEN min_version('3.2.0') THEN plan(6) ELSE plan(5) END;

CREATE OR REPLACE FUNCTION test_function()
RETURNS SETOF TEXT AS
$BODY$
DECLARE result1 TEXT = ' seq, path_seq, node, edge, cost, agg_cost ';
DECLARE result2 TEXT = ' seq, path_seq, end_vid, node, edge, cost, agg_cost ';
DECLARE result3 TEXT = ' seq, path_seq, start_vid, node, edge, cost, agg_cost ';
DECLARE result_all TEXT = ' seq, path_seq, start_vid, end_vid, node, edge, cost, agg_cost ';
BEGIN
  IF (min_version('3.6.0')) THEN
    result1 := result_all;
    result2 := result_all;
    result3 := result_all;
  END IF;

  RETURN query
  SELECT is_empty(
    'SELECT ' || result1 || ' FROM pgr_aStar(
      $$SELECT id, source, target, cost, reverse_cost, x1, y1, x2, y2 FROM edge_table WHERE id > 20$$,
      1, 3, false)'
  );

  RETURN query
  SELECT is_empty(
    'SELECT ' || result2 || ' FROM pgr_aStar(
      $$SELECT id, source, target, cost, reverse_cost, x1, y1, x2, y2 FROM edge_table WHERE id > 20$$,
      1, ARRAY[3,12], false)'
  );

  RETURN query
  SELECT is_empty(
    'SELECT ' || result3 || ' FROM pgr_aStar(
      $$SELECT id, source, target, cost, reverse_cost, x1, y1, x2, y2 FROM edge_table WHERE id > 20$$,
      ARRAY[1,2], 3, false)'
  );

  RETURN query
  SELECT is_empty(
    'SELECT ' || result_all || ' FROM pgr_aStar(
      $$SELECT id, source, target, cost, reverse_cost, x1, y1, x2, y2 FROM edge_table WHERE id > 20$$,
      ARRAY[1, 2], ARRAY[3,12], false)'
  );

  IF NOT min_version('3.2.0') THEN
    RETURN query
    SELECT skip(1, 'Combinations signature added on version 3.2');
    RETURN;
  END IF;

  RETURN query
  SELECT is_empty(
    'SELECT path_seq,  start_vid,  end_vid, node, edge, cost, agg_cost FROM pgr_aStar(
      $$SELECT id, source, target, cost, reverse_cost, x1, y1, x2, y2 FROM edge_table WHERE id > 20$$,
      $$SELECT * FROM combinations_table$$)'
  );

  RETURN query
  SELECT is_empty(
    'SELECT path_seq,  start_vid,  end_vid, node, edge, cost, agg_cost FROM pgr_aStar(
      $$SELECT id, source, target, cost, reverse_cost, x1, y1, x2, y2 FROM edge_table$$,
      $$SELECT * FROM combinations_table WHERE source IN (-1)$$)'
  );

END
$BODY$
language plpgsql;

SELECT test_function();

SELECT finish();
ROLLBACK;
